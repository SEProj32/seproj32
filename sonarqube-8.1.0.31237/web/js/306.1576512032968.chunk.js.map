{"version":3,"sources":["webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/api/projectActivity.ts","webpack:///./src/main/js/apps/projectActivity/components/DefinitionChangeEventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/RichQualityGateEventInner.tsx","webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx","webpack:///./src/main/js/apps/projectActivity/components/EventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/ChangeEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/RemoveEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/Event.tsx","webpack:///./src/main/js/apps/projectActivity/components/Events.tsx","webpack:///./src/main/js/apps/projectBaseline/styles.css?3c1d","webpack:///./src/main/js/apps/projectBaseline/styles.css","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingAnalysis.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BranchAnalysisList.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BranchBaselineSettingModal.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BranchList.tsx","webpack:///./src/main/js/apps/projectBaseline/components/ProjectBaselineSelector.tsx","webpack:///./src/main/js/apps/projectBaseline/components/App.tsx","webpack:///./src/main/js/apps/projectBaseline/components/AppContainer.ts","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/components/intl/DateTimeFormatter.tsx","webpack:///./src/main/js/apps/projectActivity/utils.ts","webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx"],"names":["__webpack_require__","d","__webpack_exports__","ComponentContext","react__WEBPACK_IMPORTED_MODULE_0__","branchLike","undefined","component","getProjectActivity","createEvent","deleteEvent","changeEvent","deleteAnalysis","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","Object","catch","analysis","name","category","description","then","r","event","isDefinitionChangeEvent","definitionChange","DefinitionChangeEventInner","_super","_this","apply","this","arguments","state","expanded","stopPropagation","toggleProjectsList","setState","renderProjectLink","project","branch","react__WEBPACK_IMPORTED_MODULE_1__","react_router__WEBPACK_IMPORTED_MODULE_3__","onClick","title","to","_helpers_urls__WEBPACK_IMPORTED_MODULE_11__","key","sonar_ui_common_helpers_path__WEBPACK_IMPORTED_MODULE_9__","renderBranch","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_8__","className","sonar_ui_common_components_icons_BranchIcon__WEBPACK_IMPORTED_MODULE_5___default","a","__extends","prototype","renderProjectChange","mainBranch","props","_helpers_branch_like__WEBPACK_IMPORTED_MODULE_10__","changeType","message","react_intl__WEBPACK_IMPORTED_MODULE_2__","defaultMessage","id","values","newBranch","oldBranch","render","sonar_ui_common_components_icons_ProjectEventIcon__WEBPACK_IMPORTED_MODULE_7___default","classnames__WEBPACK_IMPORTED_MODULE_0__","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_4__","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_6___default","turned","projects","map","isRichQualityGateEvent","qualityGate","RichQualityGateEventInner","sonar_ui_common_components_icons_ProjectEventIcon__WEBPACK_IMPORTED_MODULE_6___default","stillFailing","status","sonar_ui_common_components_ui_Level__WEBPACK_IMPORTED_MODULE_7___default","level","small","failing","length","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_5___default","_helpers_urls__WEBPACK_IMPORTED_MODULE_9__","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","days","parsed","parseInt","isNaN","String","getSettingValue","_a","type","validateSetting","currentSetting","currentSettingValue","selected","overrideGeneralSetting","isChanged","isValid","BaselineSettingDays","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1___default","n","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","disabled","onChangeDays","onSelect","error","isInvalid","label","required","onChange","e","currentTarget","value","BaselineSettingPreviousVersion","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","isDefault","EventInner","index_js_exposed","Consumer","ProjectEventIcon_default","classnames","l10n","ChangeEventForm","call","changeInput","target","handleSubmit","ConfirmModal_default","confirmButtonText","confirmDisable","header","onClose","onConfirm","size","autoFocus","RemoveEventForm","RemoveEventForm_extends","isDestructive","removeEventQuestion","Event","mounted","changing","deleting","startChanging","stopChanging","startDeleting","stopDeleting","Event_extends","componentDidMount","componentWillUnmount","canAdmin","isOther","isVersion","canChange","canDelete","isFirst","showActions","Tooltip_default","overlay","buttons","forms_ChangeEventForm","forms_RemoveEventForm","Events","sortedEvents","sortBy_default","events","components_Event","content","module","i","options","hmr","transform","insertInto","locals","exports","push","BaselineSettingAnalysis","RadioCard_default","BranchAnalysisList","badges","analyses","loading","range","scroll","handleScroll","updateScroll","scrollTop","registerBadgeNode","version","el","getAttribute","setAttribute","offsetTop","shouldStick","badge","Number","handleRangeChange","fetchAnalyses","rootNodeRef","throttle_default","scrollToSelected","selectedNode","document","querySelector","current","scrolling","parent","bottomOffset","initial","projectActivity","from","dates","date_fns","Date","result","find","__assign","date","getRangeOptions","byVersionByDay","projectActivity_utils","customMetrics","graph","hasFilteredData","keys","byDay","Select_default","autoBlur","clearable","searchable","onScroll","ref","DeferredSpinner_default","idx","first","sticky","mouseEnterDelay","day","data-day","DateFormatter","long","data-date","valueOf","onSelectAnalysis","TimeFormatter","formattedTime","dateTime","toISOString","Promise","resolve","is-checked","BranchBaselineSettingModal","preventDefault","_b","analysisDate","utils","saving","api_newCodePeriod","effectiveValue","requestClose","handleSelectAnalysis","handleSelectDays","handleSelectSetting","getValueFromProps","newCodePeriod","BranchBaselineSettingModal_extends","Modal_default","contentLabel","onRequestClose","onSubmit","role","components_BranchAnalysisList","BranchList","branches","updateBranchNewCodePeriod","newSetting","updated","b","slice","openEditModal","editedBranch","closeEditModal","BranchList_extends","fetchBranches","sortAndFilterBranches","branchLikes","branch_like","filter","sortedBranches","branchSettings","newCodePeriods","ncp","inherited","branchesWithBaseline","branchKey","BranchList_assign","resetToDefault","renderNewCodePeriodSetting","DateTimeFormatter","BranchLikeIcon","isMain","ActionsDropdown_default","ActionsDropdown","components_BranchBaselineSettingModal","ProjectBaselineSelector","branchesEnabled","generalSetting","Radio_default","checked","onCheck","onToggleSpecificSetting","setting","renderGeneralSetting","onSelectSetting","onSelectDays","invisible","onCancel","DEFAULT_GENERAL_SETTING","App","resetSetting","handleCancel","getUpdatedState","handleToggleSpecificSetting","App_extends","fetchLeakPeriodSetting","params","defaultDays","Boolean","all","renderHeader","index_es","link","react_router_es","Suggestions","suggestions","components_BranchList","inheritedSetting","es","rootReducer","components_App","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","addSuggestions","removeSuggestions","SuggestionsInner","componentDidUpdate","prevProps","formatterOption","year","month","longFormatterOption","children","react_intl__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","hour","minute","EVENT_TYPES","APPLICATION_EVENT_TYPES","DEFAULT_GRAPH","GRAPH_TYPES","GRAPHS_METRICS_DISPLAYED","issues","coverage","duplications","GRAPHS_METRICS","concat","PROJECT_ACTIVITY_GRAPH","PROJECT_ACTIVITY_GRAPH_CUSTOM","activityQueryChanged","prevQuery","nextQuery","datesQueryChanged","customMetricsChanged","lodash_isEqual__WEBPACK_IMPORTED_MODULE_1___default","hasDataValues","serie","some","point","y","hasHistoryData","series","hasHistoryDataValue","historyQueryChanged","isCustomGraph","selectedDateQueryChanged","selectedDate","generateSeries","measuresHistory","metrics","displayedMetrics","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default","measure","indexOf","metric","uncoveredLines","linesToCover","history","x","translatedName","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_7__","generateCoveredLinesMetric","Array","isArray","findMetric","splitSeriesInGraphs","maxGraph","maxSeries","lodash_flatMap__WEBPACK_IMPORTED_MODULE_3___default","lodash_groupBy__WEBPACK_IMPORTED_MODULE_2___default","lodash_chunk__WEBPACK_IMPORTED_MODULE_4___default","getSeriesMetricType","getAnalysesByVersionByDay","query","reduce","acc","currentVersion","versionEvent","newVersion","date_fns_start_of_day__WEBPACK_IMPORTED_MODULE_5__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_6__","getTime","toString","matchFilters","isAfterFrom","isBeforeTo","hasSelectedCategoryEvents","getDisplayedHistoryMetrics","getHistoryMetrics","getProjectActivityGraph","customGraphs","sonar_ui_common_helpers_storage__WEBPACK_IMPORTED_MODULE_9__","split","parseQuery","urlQuery","sonar_ui_common_helpers_query__WEBPACK_IMPORTED_MODULE_8__","includes","serializeQuery","serializeUrlQuery","custom_metrics","selected_date","second","__rest","_helpers_branch_like__WEBPACK_IMPORTED_MODULE_3__","sonar_ui_common_components_icons_PullRequestIcon__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_components_icons_BranchIcon__WEBPACK_IMPORTED_MODULE_1___default"],"mappings":"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","file":"js/306.1576512032968.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getProjectActivity(\n  data: {\n    project: string;\n    category?: string;\n    from?: string;\n    p?: number;\n    ps?: number;\n  } & BranchParameters\n): Promise<{ analyses: T.Analysis[]; paging: T.Paging }> {\n  return getJSON('/api/project_analyses/search', data).catch(throwGlobalError);\n}\n\ninterface CreateEventResponse {\n  analysis: string;\n  key: string;\n  name: string;\n  category: string;\n  description?: string;\n}\n\nexport function createEvent(\n  analysis: string,\n  name: string,\n  category?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { analysis, name };\n  if (category) {\n    data.category = category;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/create_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteEvent(event: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete_event', { event }).catch(throwGlobalError);\n}\n\nexport function changeEvent(\n  event: string,\n  name?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { event };\n  if (name) {\n    data.name = name;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/update_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteAnalysis(analysis: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete', { analysis }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { limitComponentName } from 'sonar-ui-common/helpers/path';\nimport { isMainBranch } from '../../../helpers/branch-like';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BranchLike } from '../../../types/branch-like';\n\nexport type DefinitionChangeEvent = T.AnalysisEvent &\n  Required<Pick<T.AnalysisEvent, 'definitionChange'>>;\n\nexport function isDefinitionChangeEvent(event: T.AnalysisEvent): event is DefinitionChangeEvent {\n  return event.category === 'DEFINITION_CHANGE' && event.definitionChange !== undefined;\n}\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  event: DefinitionChangeEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class DefinitionChangeEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  renderProjectLink = (project: { key: string; name: string }, branch: string | undefined) => (\n    <Link\n      onClick={this.stopPropagation}\n      title={project.name}\n      to={getProjectUrl(project.key, branch)}>\n      {limitComponentName(project.name, 28)}\n    </Link>\n  );\n\n  renderBranch = (branch = translate('branches.main_branch')) => (\n    <span className=\"nowrap\" title={branch}>\n      <BranchIcon className=\"little-spacer-left text-text-top\" />\n      {branch}\n    </span>\n  );\n\n  renderProjectChange(project: {\n    changeType: string;\n    key: string;\n    name: string;\n    branch?: string;\n    newBranch?: string;\n    oldBranch?: string;\n  }) {\n    const mainBranch = !this.props.branchLike || isMainBranch(this.props.branchLike);\n\n    if (project.changeType === 'ADDED') {\n      const message = mainBranch\n        ? 'event.definition_change.added'\n        : 'event.definition_change.branch_added';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'REMOVED') {\n      const message = mainBranch\n        ? 'event.definition_change.removed'\n        : 'event.definition_change.branch_removed';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'BRANCH_CHANGED') {\n      return (\n        <FormattedMessage\n          defaultMessage={translate('event.definition_change.branch_replaced')}\n          id=\"event.definition_change.branch_replaced\"\n          values={{\n            project: this.renderProjectLink(project, project.newBranch),\n            oldBranch: this.renderBranch(project.oldBranch),\n            newBranch: this.renderBranch(project.newBranch)\n          }}\n        />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <div className=\"project-activity-event-inner\">\n        <div className=\"project-activity-event-inner-main\">\n          <ProjectEventIcon\n            className={classNames(\n              'project-activity-event-icon',\n              'little-spacer-right',\n              event.category\n            )}\n          />\n\n          <div className=\"project-activity-event-inner-text flex-1\">\n            <span className=\"note little-spacer-right\">\n              {translate('event.category', event.category)}\n            </span>\n          </div>\n\n          <ResetButtonLink\n            className=\"project-activity-event-inner-more-link\"\n            onClick={this.toggleProjectsList}\n            stopPropagation={true}>\n            {expanded ? translate('hide') : translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n          </ResetButtonLink>\n        </div>\n\n        {expanded && (\n          <ul className=\"project-activity-event-inner-more-content\">\n            {event.definitionChange.projects.map(project => (\n              <li className=\"display-flex-center little-spacer-top\" key={project.key}>\n                {this.renderProjectChange(project)}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\n\nexport type RichQualityGateEvent = T.AnalysisEvent & Required<Pick<T.AnalysisEvent, 'qualityGate'>>;\n\nexport function isRichQualityGateEvent(event: T.AnalysisEvent): event is RichQualityGateEvent {\n  return event.category === 'QUALITY_GATE' && event.qualityGate !== undefined;\n}\n\ninterface Props {\n  event: RichQualityGateEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class RichQualityGateEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <div className=\"project-activity-event-inner\">\n        <div className=\"project-activity-event-inner-main\">\n          <ProjectEventIcon\n            className={classNames(\n              'project-activity-event-icon',\n              'little-spacer-right',\n              event.category\n            )}\n          />\n\n          <div className=\"project-activity-event-inner-text flex-1\">\n            <span className=\"note little-spacer-right\">\n              {translate('event.category', event.category)}:\n            </span>\n            {event.qualityGate.stillFailing ? (\n              <FormattedMessage\n                defaultMessage={translate('event.quality_gate.still_x')}\n                id=\"event.quality_gate.still_x\"\n                values={{ status: <Level level={event.qualityGate.status} small={true} /> }}\n              />\n            ) : (\n              <Level level={event.qualityGate.status} small={true} />\n            )}\n          </div>\n\n          {event.qualityGate.failing.length > 0 && (\n            <ResetButtonLink\n              className=\"project-activity-event-inner-more-link\"\n              onClick={this.toggleProjectsList}\n              stopPropagation={true}>\n              {expanded ? translate('hide') : translate('more')}\n              <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n            </ResetButtonLink>\n          )}\n        </div>\n\n        {expanded && (\n          <ul className=\"project-activity-event-inner-more-content\">\n            {event.qualityGate.failing.map(project => (\n              <li className=\"display-flex-center little-spacer-top\" key={project.key}>\n                <Level\n                  className=\"little-spacer-right\"\n                  level={event.qualityGate.status}\n                  small={true}\n                />\n                <div className=\"flex-1 text-ellipsis\">\n                  <Link\n                    onClick={this.stopPropagation}\n                    title={project.name}\n                    to={getProjectUrl(project.key, project.branch)}>\n                    {project.name}\n                  </Link>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting?: boolean;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days));\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ComponentContext } from '../../../app/components/ComponentContext';\nimport { DefinitionChangeEventInner, isDefinitionChangeEvent } from './DefinitionChangeEventInner';\nimport { isRichQualityGateEvent, RichQualityGateEventInner } from './RichQualityGateEventInner';\n\ninterface Props {\n  event: T.AnalysisEvent;\n}\n\nexport default function EventInner({ event }: Props) {\n  if (isRichQualityGateEvent(event)) {\n    return <RichQualityGateEventInner event={event} />;\n  } else if (isDefinitionChangeEvent(event)) {\n    return (\n      <ComponentContext.Consumer>\n        {({ branchLike }) => <DefinitionChangeEventInner branchLike={branchLike} event={event} />}\n      </ComponentContext.Consumer>\n    );\n  } else {\n    return (\n      <div className=\"project-activity-event-inner\">\n        <div className=\"project-activity-event-inner-main\">\n          <ProjectEventIcon\n            className={classNames(\n              'project-activity-event-icon',\n              'little-spacer-right',\n              event.category\n            )}\n          />\n\n          <span className=\"project-activity-event-inner-text\">\n            <span className=\"note little-spacer-right\">\n              {translate('event.category', event.category)}:\n            </span>\n            <strong title={event.description}>{event.name}</strong>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  changeEvent: (event: string, name: string) => Promise<void>;\n  event: T.AnalysisEvent;\n  header: string;\n  onClose: () => void;\n}\n\ninterface State {\n  name: string;\n}\n\nexport default class ChangeEventForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { name: props.event.name };\n  }\n\n  changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit = () => {\n    return this.props.changeEvent(this.props.event.key, this.state.name);\n  };\n\n  render() {\n    const { name } = this.state;\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('change_verb')}\n        confirmDisable={!name || name === this.props.event.name}\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onConfirm={this.handleSubmit}\n        size=\"small\">\n        <div className=\"modal-field\">\n          <label>{translate('name')}</label>\n          <input autoFocus={true} onChange={this.changeInput} type=\"text\" value={name} />\n        </div>\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  analysis: string;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  event: T.AnalysisEvent;\n  header: string;\n  removeEventQuestion: string;\n  onClose: () => void;\n}\n\nexport default class RemoveEventForm extends React.PureComponent<Props> {\n  handleSubmit = () => {\n    return this.props.deleteEvent(this.props.analysis, this.props.event.key);\n  };\n\n  render() {\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('delete')}\n        header={this.props.header}\n        isDestructive={true}\n        onClose={this.props.onClose}\n        onConfirm={this.handleSubmit}>\n        {translate(this.props.removeEventQuestion)}\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton, EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport EventInner from './EventInner';\nimport ChangeEventForm from './forms/ChangeEventForm';\nimport RemoveEventForm from './forms/RemoveEventForm';\n\ninterface Props {\n  analysis: string;\n  canAdmin?: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  event: T.AnalysisEvent;\n  isFirst?: boolean;\n}\n\ninterface State {\n  changing: boolean;\n  deleting: boolean;\n}\n\nexport default class Event extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { changing: false, deleting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  startChanging = () => {\n    this.setState({ changing: true });\n  };\n\n  stopChanging = () => {\n    if (this.mounted) {\n      this.setState({ changing: false });\n    }\n  };\n\n  startDeleting = () => {\n    this.setState({ deleting: true });\n  };\n\n  stopDeleting = () => {\n    if (this.mounted) {\n      this.setState({ deleting: false });\n    }\n  };\n\n  render() {\n    const { event, canAdmin } = this.props;\n    const isOther = event.category === 'OTHER';\n    const isVersion = !isOther && event.category === 'VERSION';\n    const canChange = isOther || isVersion;\n    const canDelete = isOther || (isVersion && !this.props.isFirst);\n    const showActions = canAdmin && (canChange || canDelete);\n\n    return (\n      <div className=\"project-activity-event\">\n        <EventInner event={this.props.event} />\n\n        {showActions && (\n          <div className=\"project-activity-event-actions spacer-left\">\n            {canChange && (\n              <Tooltip overlay={translate('project_activity.events.tooltip.edit')}>\n                <EditButton className=\"js-change-event button-small\" onClick={this.startChanging} />\n              </Tooltip>\n            )}\n            {canDelete && (\n              <Tooltip overlay={translate('project_activity.events.tooltip.delete')}>\n                <DeleteButton\n                  className=\"js-delete-event button-small\"\n                  onClick={this.startDeleting}\n                />\n              </Tooltip>\n            )}\n          </div>\n        )}\n\n        {this.state.changing && (\n          <ChangeEventForm\n            changeEvent={this.props.changeEvent}\n            event={this.props.event}\n            header={\n              isVersion\n                ? translate('project_activity.change_version')\n                : translate('project_activity.change_custom_event')\n            }\n            onClose={this.stopChanging}\n          />\n        )}\n\n        {this.state.deleting && (\n          <RemoveEventForm\n            analysis={this.props.analysis}\n            deleteEvent={this.props.deleteEvent}\n            event={this.props.event}\n            header={\n              isVersion\n                ? translate('project_activity.remove_version')\n                : translate('project_activity.remove_custom_event')\n            }\n            onClose={this.stopDeleting}\n            removeEventQuestion={`project_activity.${\n              isVersion ? 'remove_version' : 'remove_custom_event'\n            }.question`}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Event from './Event';\n\ninterface Props {\n  analysis: string;\n  canAdmin?: boolean;\n  changeEvent: (event: string, name: string) => Promise<void>;\n  deleteEvent: (analysis: string, event: string) => Promise<void>;\n  events: T.AnalysisEvent[];\n  isFirst?: boolean;\n}\n\nexport default function Events(props: Props) {\n  const sortedEvents = sortBy(\n    props.events,\n    // versions last\n    event => (event.category === 'VERSION' ? 1 : 0),\n    // then the rest sorted by category\n    'category'\n  );\n\n  return (\n    <div className=\"project-activity-events\">\n      {sortedEvents.map(event => (\n        <Event\n          analysis={props.analysis}\n          canAdmin={props.canAdmin}\n          changeEvent={props.changeEvent}\n          deleteEvent={props.deleteEvent}\n          event={event}\n          isFirst={props.isFirst}\n          key={event.key}\n        />\n      ))}\n    </div>\n  );\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".project-baseline{padding:32px}.project-baseline-selector>.branch-baseline-setting-modal{max-height:60vh;padding-top:2px}.project-baseline-selector .general-setting{margin-left:7px}.branch-baseline-selector>hr{margin:0 -32px 32px}.branch-analysis-list-wrapper,.branch-baseline-setting-modal{display:flex;flex-direction:column}.branch-analysis-list-wrapper{overflow:hidden;position:relative;min-height:200px}.branch-analysis-list{overflow-y:auto;padding-left:12px;padding-right:15px;min-height:50px}.branch-analysis-list>ul{padding-top:18px}.branch-analysis-date{margin-bottom:16px;font-size:15px;font-weight:700}.branch-analysis-day{margin-top:8px;margin-bottom:24px}.branch-analysis{display:flex;justify-content:space-between;cursor:pointer;padding:8px;border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6}.branch-analysis+.branch-analysis{border-top:none}.branch-analysis:hover{background-color:#cae3f2}.branch-analysis>.project-activity-events{flex:1 0 50%}.branch-analysis-time{width:150px}.branch-analysis-version-badge{margin-left:-12px;padding-top:8px;padding-bottom:8px;background-color:#fff}.branch-analysis-version-badge.sticky+.branch-analysis-days-list{padding-top:36px}.branch-analysis-version-badge.first,.branch-analysis-version-badge.sticky{position:absolute;top:1px;left:13px;right:16px;padding-top:24px;z-index:1}.branch-analysis-version-badge .badge{max-width:385px;border-radius:0 2px 2px 0;font-weight:700;font-size:12px;letter-spacing:0;overflow:hidden;text-overflow:ellipsis}.project-activity-event-icon.VERSION{color:#4b9fd5}.project-activity-event-icon.QUALITY_GATE{color:#9139d4}.project-activity-event-icon.QUALITY_PROFILE{color:#ccc}.project-activity-event-icon.DEFINITION_CHANGE{color:#33a759}.project-activity-event-icon.OTHER{color:#442d1b}.invisible{visibility:hidden}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingAnalysis({ disabled, onSelect, selected }: Props) {\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('SPECIFIC_ANALYSIS')}\n      selected={selected}\n      title={translate('baseline.specific_analysis')}>\n      <p className=\"big-spacer-bottom\">{translate('baseline.specific_analysis.description')}</p>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { subDays } from 'date-fns';\nimport { throttle } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { parseDate, toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { getProjectActivity } from '../../../api/projectActivity';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\nimport Events from '../../projectActivity/components/Events';\nimport { getAnalysesByVersionByDay } from '../../projectActivity/utils';\n\ninterface Props {\n  analysis: string;\n  branch: string;\n  component: string;\n  onSelectAnalysis: (analysis: T.ParsedAnalysis) => void;\n}\n\ninterface State {\n  analyses: T.ParsedAnalysis[];\n  loading: boolean;\n  range: number;\n  scroll: number;\n}\n\nexport default class BranchAnalysisList extends React.PureComponent<Props, State> {\n  mounted = false;\n  badges: T.Dict<HTMLDivElement> = {};\n  rootNodeRef: React.RefObject<HTMLDivElement>;\n  state: State = {\n    analyses: [],\n    loading: true,\n    range: 30,\n    scroll: 0\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.rootNodeRef = React.createRef<HTMLDivElement>();\n    this.updateScroll = throttle(this.updateScroll, 20);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchAnalyses(true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  scrollToSelected() {\n    const selectedNode = document.querySelector('.branch-analysis.selected');\n    if (this.rootNodeRef.current && selectedNode) {\n      scrollToElement(selectedNode, { parent: this.rootNodeRef.current, bottomOffset: 40 });\n    }\n  }\n\n  fetchAnalyses(initial = false) {\n    const { analysis, branch, component } = this.props;\n    const { range } = this.state;\n    this.setState({ loading: true });\n\n    return getProjectActivity({\n      branch,\n      project: component,\n      from: range ? toShortNotSoISOString(subDays(new Date(), range)) : undefined\n    }).then((result: { analyses: T.Analysis[] }) => {\n      // If the selected analysis wasn't found in the default 30 days range, redo the search\n      if (initial && analysis && !result.analyses.find(a => a.key === analysis)) {\n        this.handleRangeChange({ value: 0 });\n        return;\n      }\n\n      this.setState(\n        {\n          analyses: result.analyses.map(analysis => ({\n            ...analysis,\n            date: parseDate(analysis.date)\n          })) as T.ParsedAnalysis[],\n          loading: false\n        },\n        () => {\n          this.scrollToSelected();\n        }\n      );\n    });\n  }\n\n  handleScroll = (e: React.SyntheticEvent<HTMLDivElement>) => {\n    if (e.currentTarget) {\n      this.updateScroll(e.currentTarget.scrollTop);\n    }\n  };\n\n  updateScroll = (scroll: number) => {\n    this.setState({ scroll });\n  };\n\n  registerBadgeNode = (version: string) => (el: HTMLDivElement) => {\n    if (el) {\n      if (!el.getAttribute('originOffsetTop')) {\n        el.setAttribute('originOffsetTop', String(el.offsetTop));\n      }\n      this.badges[version] = el;\n    }\n  };\n\n  shouldStick = (version: string) => {\n    const badge = this.badges[version];\n    return badge && Number(badge.getAttribute('originOffsetTop')) < this.state.scroll + 10;\n  };\n\n  getRangeOptions() {\n    return [\n      {\n        label: translate('baseline.branch_analyses.ranges.30days'),\n        value: 30\n      },\n      {\n        label: translate('baseline.branch_analyses.ranges.allTime'),\n        value: 0\n      }\n    ];\n  }\n\n  handleRangeChange = ({ value }: { value: number }) => {\n    this.setState({ range: value }, () => this.fetchAnalyses());\n  };\n\n  render() {\n    const { analyses, loading, range } = this.state;\n\n    const byVersionByDay = getAnalysesByVersionByDay(analyses, {\n      category: '',\n      customMetrics: [],\n      graph: '',\n      project: this.props.component\n    });\n\n    const hasFilteredData =\n      byVersionByDay.length > 1 ||\n      (byVersionByDay.length === 1 && Object.keys(byVersionByDay[0].byDay).length > 0);\n\n    return (\n      <>\n        <div className=\"spacer-bottom\">\n          {translate('baseline.analysis_from')}\n          <Select\n            autoBlur={true}\n            className=\"input-medium spacer-left\"\n            clearable={false}\n            onChange={this.handleRangeChange}\n            options={this.getRangeOptions()}\n            searchable={false}\n            value={range}\n          />\n        </div>\n        <div className=\"branch-analysis-list-wrapper\">\n          <div\n            className=\"bordered branch-analysis-list\"\n            onScroll={this.handleScroll}\n            ref={this.rootNodeRef}>\n            {loading && <DeferredSpinner className=\"big-spacer-top\" />}\n\n            {!loading && !hasFilteredData ? (\n              <div className=\"big-spacer-top big-spacer-bottom strong\">\n                {translate('baseline.no_analyses')}\n              </div>\n            ) : (\n              <ul>\n                {byVersionByDay.map((version, idx) => {\n                  const days = Object.keys(version.byDay);\n                  if (days.length <= 0) {\n                    return null;\n                  }\n                  return (\n                    <li key={version.key || 'noversion'}>\n                      {version.version && (\n                        <div\n                          className={classNames('branch-analysis-version-badge', {\n                            first: idx === 0,\n                            sticky: this.shouldStick(version.version)\n                          })}\n                          ref={this.registerBadgeNode(version.version)}>\n                          <Tooltip\n                            mouseEnterDelay={0.5}\n                            overlay={`${translate('version')} ${version.version}`}>\n                            <span className=\"badge\">{version.version}</span>\n                          </Tooltip>\n                        </div>\n                      )}\n                      <ul className=\"branch-analysis-days-list\">\n                        {days.map(day => (\n                          <li\n                            className=\"branch-analysis-day\"\n                            data-day={toShortNotSoISOString(Number(day))}\n                            key={day}>\n                            <div className=\"branch-analysis-date\">\n                              <DateFormatter date={Number(day)} long={true} />\n                            </div>\n                            <ul className=\"branch-analysis-analyses-list\">\n                              {version.byDay[day] != null &&\n                                version.byDay[day].map(analysis => (\n                                  <li\n                                    className={classNames('branch-analysis', {\n                                      selected: analysis.key === this.props.analysis\n                                    })}\n                                    data-date={parseDate(analysis.date).valueOf()}\n                                    key={analysis.key}\n                                    onClick={() => this.props.onSelectAnalysis(analysis)}>\n                                    <div className=\"branch-analysis-time spacer-right\">\n                                      <TimeFormatter date={parseDate(analysis.date)} long={false}>\n                                        {formattedTime => (\n                                          <time\n                                            className=\"text-middle\"\n                                            dateTime={parseDate(analysis.date).toISOString()}>\n                                            {formattedTime}\n                                          </time>\n                                        )}\n                                      </TimeFormatter>\n                                    </div>\n\n                                    {analysis.events.length > 0 && (\n                                      <Events\n                                        analysis={analysis.key}\n                                        changeEvent={() => Promise.resolve()}\n                                        deleteEvent={() => Promise.resolve()}\n                                        events={analysis.events}\n                                        isFirst={analyses[0].key === analysis.key}\n                                      />\n                                    )}\n\n                                    <div className=\"analysis-selection-button\">\n                                      <i\n                                        className={classNames('icon-radio', {\n                                          'is-checked': analysis.key === this.props.analysis\n                                        })}\n                                      />\n                                    </div>\n                                  </li>\n                                ))}\n                            </ul>\n                          </li>\n                        ))}\n                      </ul>\n                    </li>\n                  );\n                })}\n              </ul>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { toNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { setNewCodePeriod } from '../../../api/newCodePeriod';\nimport { BranchWithNewCodePeriod } from '../../../types/branch-like';\nimport { getSettingValue, validateSetting } from '../utils';\nimport BaselineSettingAnalysis from './BaselineSettingAnalysis';\nimport BaselineSettingDays from './BaselineSettingDays';\nimport BaselineSettingPreviousVersion from './BaselineSettingPreviousVersion';\nimport BranchAnalysisList from './BranchAnalysisList';\n\ninterface Props {\n  branch: BranchWithNewCodePeriod;\n  component: string;\n  onClose: (branch?: string, newSetting?: T.NewCodePeriod) => void;\n}\n\ninterface State {\n  analysis: string;\n  analysisDate?: Date;\n  days: string;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n}\n\nexport default class BranchBaselineSettingModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      analysis: this.getValueFromProps('SPECIFIC_ANALYSIS') || '',\n      days: this.getValueFromProps('NUMBER_OF_DAYS') || '30',\n      saving: false,\n      selected: this.props.branch.newCodePeriod && this.props.branch.newCodePeriod.type\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getValueFromProps(type: T.NewCodePeriodSettingType) {\n    return this.props.branch.newCodePeriod && this.props.branch.newCodePeriod.type === type\n      ? this.props.branch.newCodePeriod.value\n      : null;\n  }\n\n  handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { branch, component } = this.props;\n    const { analysis, analysisDate, days, selected: type } = this.state;\n\n    const value = getSettingValue({ type, analysis, days });\n\n    if (type) {\n      this.setState({ saving: true });\n      setNewCodePeriod({\n        project: component,\n        type,\n        value,\n        branch: branch.name\n      }).then(\n        () => {\n          this.setState({\n            saving: false\n          });\n          this.props.onClose(branch.name, {\n            type,\n            value,\n            effectiveValue: analysisDate && toNotSoISOString(analysisDate)\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  requestClose = () => this.props.onClose();\n\n  handleSelectAnalysis = (analysis: T.ParsedAnalysis) =>\n    this.setState({ analysis: analysis.key, analysisDate: analysis.date });\n\n  handleSelectDays = (days: string) => this.setState({ days });\n\n  handleSelectSetting = (selected: T.NewCodePeriodSettingType) => this.setState({ selected });\n\n  render() {\n    const { branch } = this.props;\n    const { analysis, days, saving, selected } = this.state;\n\n    const header = translateWithParameters('baseline.new_code_period_for_branch_x', branch.name);\n\n    const currentSetting = branch.newCodePeriod && branch.newCodePeriod.type;\n    const currentSettingValue = branch.newCodePeriod && branch.newCodePeriod.value;\n\n    const { isChanged, isValid } = validateSetting({\n      analysis,\n      currentSetting,\n      currentSettingValue,\n      days,\n      selected\n    });\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.requestClose} size=\"large\">\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body modal-container branch-baseline-setting-modal\">\n            <div className=\"display-flex-row huge-spacer-bottom\" role=\"radiogroup\">\n              <BaselineSettingPreviousVersion\n                isDefault={false}\n                onSelect={this.handleSelectSetting}\n                selected={selected === 'PREVIOUS_VERSION'}\n              />\n              <BaselineSettingDays\n                days={days}\n                isChanged={isChanged}\n                isValid={isValid}\n                onChangeDays={this.handleSelectDays}\n                onSelect={this.handleSelectSetting}\n                selected={selected === 'NUMBER_OF_DAYS'}\n              />\n              <BaselineSettingAnalysis\n                onSelect={this.handleSelectSetting}\n                selected={selected === 'SPECIFIC_ANALYSIS'}\n              />\n            </div>\n            {selected === 'SPECIFIC_ANALYSIS' && (\n              <BranchAnalysisList\n                analysis={analysis}\n                branch={branch.name}\n                component={this.props.component}\n                onSelectAnalysis={this.handleSelectAnalysis}\n              />\n            )}\n          </div>\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={saving} />\n            <SubmitButton disabled={!isChanged || saving || !isValid}>\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { listBranchesNewCodePeriod, resetNewCodePeriod } from '../../../api/newCodePeriod';\nimport BranchLikeIcon from '../../../components/icons/BranchLikeIcon';\nimport DateTimeFormatter from '../../../components/intl/DateTimeFormatter';\nimport { isBranch, sortBranches } from '../../../helpers/branch-like';\nimport { BranchLike, BranchWithNewCodePeriod } from '../../../types/branch-like';\nimport BranchBaselineSettingModal from './BranchBaselineSettingModal';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  component: T.Component;\n  inheritedSetting: T.NewCodePeriod;\n}\n\ninterface State {\n  branches: BranchWithNewCodePeriod[];\n  editedBranch?: BranchWithNewCodePeriod;\n  loading: boolean;\n}\n\nexport default class BranchList extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    branches: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBranches();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  sortAndFilterBranches(branchLikes: BranchLike[] = []) {\n    return sortBranches(branchLikes.filter(isBranch));\n  }\n\n  fetchBranches() {\n    const project = this.props.component.key;\n    this.setState({ loading: true });\n\n    const sortedBranches = this.sortAndFilterBranches(this.props.branchLikes);\n\n    listBranchesNewCodePeriod({ project }).then(\n      branchSettings => {\n        const newCodePeriods = branchSettings.newCodePeriods\n          ? branchSettings.newCodePeriods.filter(ncp => !ncp.inherited)\n          : [];\n\n        const branchesWithBaseline = sortedBranches.map(b => {\n          const newCodePeriod = newCodePeriods.find(ncp => ncp.branchKey === b.name);\n          if (!newCodePeriod) {\n            return b;\n          }\n          const { type = 'PREVIOUS_VERSION', value, effectiveValue } = newCodePeriod;\n          return {\n            ...b,\n            newCodePeriod: { type, value, effectiveValue }\n          };\n        });\n\n        this.setState({ branches: branchesWithBaseline, loading: false });\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  updateBranchNewCodePeriod = (branch: string, newSetting: T.NewCodePeriod | undefined) => {\n    const { branches } = this.state;\n\n    const updated = branches.find(b => b.name === branch);\n    if (updated) {\n      updated.newCodePeriod = newSetting;\n    }\n    return branches.slice(0);\n  };\n\n  openEditModal = (branch: BranchWithNewCodePeriod) => {\n    this.setState({ editedBranch: branch });\n  };\n\n  closeEditModal = (branch?: string, newSetting?: T.NewCodePeriod) => {\n    if (branch) {\n      this.setState({\n        branches: this.updateBranchNewCodePeriod(branch, newSetting),\n        editedBranch: undefined\n      });\n    } else {\n      this.setState({ editedBranch: undefined });\n    }\n  };\n\n  resetToDefault(branch: string) {\n    return resetNewCodePeriod({\n      project: this.props.component.key,\n      branch\n    }).then(() => {\n      this.setState({ branches: this.updateBranchNewCodePeriod(branch, undefined) });\n    });\n  }\n\n  renderNewCodePeriodSetting(newCodePeriod: T.NewCodePeriod) {\n    switch (newCodePeriod.type) {\n      case 'SPECIFIC_ANALYSIS':\n        return (\n          <>\n            {`${translate('baseline.specific_analysis')}: `}\n            {newCodePeriod.effectiveValue ? (\n              <DateTimeFormatter date={newCodePeriod.effectiveValue} />\n            ) : (\n              '?'\n            )}\n          </>\n        );\n      case 'NUMBER_OF_DAYS':\n        return `${translate('baseline.number_days')}: ${newCodePeriod.value}`;\n      case 'PREVIOUS_VERSION':\n        return translate('baseline.previous_version');\n      default:\n        return newCodePeriod.type;\n    }\n  }\n\n  render() {\n    const { branches, editedBranch, loading } = this.state;\n\n    if (branches.length < 1) {\n      return null;\n    }\n\n    if (loading) {\n      return <DeferredSpinner />;\n    }\n\n    return (\n      <>\n        <table className=\"data zebra\">\n          <thead>\n            <tr>\n              <th>{translate('branch_list.branch')}</th>\n              <th className=\"nowrap huge-spacer-right\">\n                {translate('branch_list.current_setting')}\n              </th>\n              <th className=\"thin nowrap\">{translate('branch_list.actions')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {branches.map(branch => (\n              <tr key={branch.name}>\n                <td className=\"nowrap\">\n                  <BranchLikeIcon branchLike={branch} className=\"little-spacer-right\" />\n                  {branch.name}\n                  {branch.isMain && (\n                    <div className=\"badge spacer-left\">{translate('branches.main_branch')}</div>\n                  )}\n                </td>\n                <td className=\"huge-spacer-right nowrap\">\n                  {branch.newCodePeriod\n                    ? this.renderNewCodePeriodSetting(branch.newCodePeriod)\n                    : translate('branch_list.default_setting')}\n                </td>\n                <td className=\"text-right\">\n                  <ActionsDropdown>\n                    <ActionsDropdownItem onClick={() => this.openEditModal(branch)}>\n                      {translate('edit')}\n                    </ActionsDropdownItem>\n                    {branch.newCodePeriod && (\n                      <ActionsDropdownItem onClick={() => this.resetToDefault(branch.name)}>\n                        {translate('reset_to_default')}\n                      </ActionsDropdownItem>\n                    )}\n                  </ActionsDropdown>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {editedBranch && (\n          <BranchBaselineSettingModal\n            branch={editedBranch}\n            component={this.props.component.key}\n            onClose={this.closeEditModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { validateSetting } from '../utils';\nimport BaselineSettingAnalysis from './BaselineSettingAnalysis';\nimport BaselineSettingDays from './BaselineSettingDays';\nimport BaselineSettingPreviousVersion from './BaselineSettingPreviousVersion';\nimport BranchAnalysisList from './BranchAnalysisList';\n\nexport interface ProjectBaselineSelectorProps {\n  analysis?: string;\n  branchesEnabled?: boolean;\n  component: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  generalSetting: T.NewCodePeriod;\n  onCancel: () => void;\n  onSelectAnalysis: (analysis: T.ParsedAnalysis) => void;\n  onSelectDays: (value: string) => void;\n  onSelectSetting: (value?: T.NewCodePeriodSettingType) => void;\n  onSubmit: (e: React.SyntheticEvent<HTMLFormElement>) => void;\n  onToggleSpecificSetting: (selection: boolean) => void;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting: boolean;\n}\n\nfunction renderGeneralSetting(generalSetting: T.NewCodePeriod) {\n  let setting: string;\n  let description: string;\n  if (generalSetting.type === 'NUMBER_OF_DAYS') {\n    setting = `${translate('baseline.number_days')} (${translateWithParameters(\n      'duration.days',\n      generalSetting.value || '?'\n    )})`;\n    description = translate('baseline.number_days.description');\n  } else {\n    setting = translate('baseline.previous_version');\n    description = translate('baseline.previous_version.description');\n  }\n\n  return (\n    <div className=\"general-setting\">\n      <strong>{setting}</strong>: {description}\n    </div>\n  );\n}\n\nexport default function ProjectBaselineSelector(props: ProjectBaselineSelectorProps) {\n  const {\n    analysis,\n    branchesEnabled,\n    component,\n    currentSetting,\n    currentSettingValue,\n    days,\n    generalSetting,\n    saving,\n    selected,\n    overrideGeneralSetting\n  } = props;\n\n  const { isChanged, isValid } = validateSetting({\n    analysis,\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  });\n\n  return (\n    <form className=\"project-baseline-selector\" onSubmit={props.onSubmit}>\n      <div className=\"big-spacer-top spacer-bottom\" role=\"radiogroup\">\n        <Radio\n          checked={!overrideGeneralSetting}\n          className=\"big-spacer-bottom\"\n          onCheck={() => props.onToggleSpecificSetting(false)}\n          value=\"general\">\n          {translate('project_baseline.general_setting')}\n        </Radio>\n        <div className=\"big-spacer-left\">{renderGeneralSetting(generalSetting)}</div>\n\n        <Radio\n          checked={overrideGeneralSetting}\n          className=\"huge-spacer-top\"\n          onCheck={() => props.onToggleSpecificSetting(true)}\n          value=\"specific\">\n          {translate('project_baseline.specific_setting')}\n        </Radio>\n      </div>\n\n      <div className=\"big-spacer-left big-spacer-right branch-baseline-setting-modal\">\n        <div className=\"display-flex-row big-spacer-bottom\" role=\"radiogroup\">\n          <BaselineSettingPreviousVersion\n            disabled={!overrideGeneralSetting}\n            onSelect={props.onSelectSetting}\n            selected={overrideGeneralSetting && selected === 'PREVIOUS_VERSION'}\n          />\n          <BaselineSettingDays\n            days={days}\n            disabled={!overrideGeneralSetting}\n            isChanged={isChanged}\n            isValid={isValid}\n            onChangeDays={props.onSelectDays}\n            onSelect={props.onSelectSetting}\n            selected={overrideGeneralSetting && selected === 'NUMBER_OF_DAYS'}\n          />\n          {!branchesEnabled && (\n            <BaselineSettingAnalysis\n              disabled={!overrideGeneralSetting}\n              onSelect={props.onSelectSetting}\n              selected={overrideGeneralSetting && selected === 'SPECIFIC_ANALYSIS'}\n            />\n          )}\n        </div>\n        {selected === 'SPECIFIC_ANALYSIS' && (\n          <BranchAnalysisList\n            analysis={analysis || ''}\n            branch=\"master\"\n            component={component}\n            onSelectAnalysis={props.onSelectAnalysis}\n          />\n        )}\n      </div>\n      <div className={classNames('big-spacer-top', { invisible: !isChanged })}>\n        <p className=\"spacer-bottom\">{translate('baseline.next_analysis_notice')}</p>\n        <DeferredSpinner className=\"spacer-right\" loading={saving} />\n        <SubmitButton disabled={saving || !isValid || !isChanged}>{translate('save')}</SubmitButton>\n        <ResetButtonLink className=\"spacer-left\" onClick={props.onCancel}>\n          {translate('cancel')}\n        </ResetButtonLink>\n      </div>\n    </form>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, resetNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { BranchLike } from '../../../types/branch-like';\nimport '../styles.css';\nimport { getSettingValue } from '../utils';\nimport BranchList from './BranchList';\nimport ProjectBaselineSelector from './ProjectBaselineSelector';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  branchesEnabled?: boolean;\n  canAdmin?: boolean;\n  component: T.Component;\n}\n\ninterface State {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  generalSetting?: T.NewCodePeriod;\n  loading: boolean;\n  overrideGeneralSetting?: boolean;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n}\n\nconst DEFAULT_GENERAL_SETTING: { type: T.NewCodePeriodSettingType } = {\n  type: 'PREVIOUS_VERSION'\n};\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    days: '30',\n    loading: true,\n    saving: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchLeakPeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getUpdatedState(params: {\n    currentSetting?: T.NewCodePeriodSettingType;\n    currentSettingValue?: string;\n    generalSetting: T.NewCodePeriod;\n  }) {\n    const { currentSetting, currentSettingValue, generalSetting } = params;\n\n    const defaultDays =\n      (!currentSetting && generalSetting.type === 'NUMBER_OF_DAYS' && generalSetting.value) || '30';\n\n    return {\n      loading: false,\n      currentSetting,\n      currentSettingValue,\n      generalSetting,\n      selected: currentSetting || generalSetting.type,\n      overrideGeneralSetting: Boolean(currentSetting),\n      days: (currentSetting === 'NUMBER_OF_DAYS' && currentSettingValue) || defaultDays,\n      analysis: (currentSetting === 'SPECIFIC_ANALYSIS' && currentSettingValue) || ''\n    };\n  }\n\n  fetchLeakPeriodSetting() {\n    this.setState({ loading: true });\n\n    Promise.all([\n      getNewCodePeriod(),\n      getNewCodePeriod({\n        branch: !this.props.branchesEnabled ? 'master' : undefined,\n        project: this.props.component.key\n      })\n    ]).then(\n      ([generalSetting, setting]) => {\n        if (this.mounted) {\n          if (!generalSetting.type) {\n            generalSetting = DEFAULT_GENERAL_SETTING;\n          }\n          const currentSettingValue = setting.value;\n          const currentSetting = setting.inherited ? undefined : setting.type || 'PREVIOUS_VERSION';\n\n          this.setState(\n            this.getUpdatedState({ generalSetting, currentSetting, currentSettingValue })\n          );\n        }\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  resetSetting = () => {\n    this.setState({ saving: true });\n    resetNewCodePeriod({ project: this.props.component.key }).then(\n      () => {\n        this.setState({\n          saving: false,\n          currentSetting: undefined,\n          selected: undefined\n        });\n      },\n      () => {\n        this.setState({ saving: false });\n      }\n    );\n  };\n\n  handleSelectAnalysis = (analysis: T.ParsedAnalysis) => this.setState({ analysis: analysis.key });\n\n  handleSelectDays = (days: string) => this.setState({ days });\n\n  handleCancel = () =>\n    this.setState(\n      ({ generalSetting = DEFAULT_GENERAL_SETTING, currentSetting, currentSettingValue }) =>\n        this.getUpdatedState({ generalSetting, currentSetting, currentSettingValue })\n    );\n\n  handleSelectSetting = (selected?: T.NewCodePeriodSettingType) => this.setState({ selected });\n\n  handleToggleSpecificSetting = (overrideGeneralSetting: boolean) =>\n    this.setState({ overrideGeneralSetting });\n\n  handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { component } = this.props;\n    const { analysis, days, selected: type, overrideGeneralSetting } = this.state;\n\n    if (!overrideGeneralSetting) {\n      this.resetSetting();\n      return;\n    }\n\n    const value = getSettingValue({ type, analysis, days });\n\n    if (type) {\n      this.setState({ saving: true });\n      setNewCodePeriod({\n        project: component.key,\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined\n          });\n        },\n        () => {\n          this.setState({ saving: false });\n        }\n      );\n    }\n  };\n\n  renderHeader() {\n    return (\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('project_baseline.page')}</h1>\n        <p className=\"page-description\">\n          <FormattedMessage\n            defaultMessage={translate('project_baseline.page.description')}\n            id=\"project_baseline.page.description\"\n            values={{\n              link: (\n                <Link to=\"/documentation/project-administration/new-code-period/\">\n                  {translate('project_baseline.page.description.link')}\n                </Link>\n              )\n            }}\n          />\n          <br />\n          {this.props.canAdmin && (\n            <FormattedMessage\n              defaultMessage={translate('project_baseline.page.description2')}\n              id=\"project_baseline.page.description2\"\n              values={{\n                link: (\n                  <Link to=\"/admin/settings?category=new_code_period\">\n                    {translate('project_baseline.page.description2.link')}\n                  </Link>\n                )\n              }}\n            />\n          )}\n        </p>\n      </header>\n    );\n  }\n\n  render() {\n    const { branchLikes, branchesEnabled, component } = this.props;\n    const {\n      analysis,\n      currentSetting,\n      days,\n      generalSetting,\n      loading,\n      currentSettingValue,\n      overrideGeneralSetting,\n      saving,\n      selected\n    } = this.state;\n\n    return (\n      <>\n        <Suggestions suggestions=\"project_baseline\" />\n        <div className=\"page page-limited\">\n          {this.renderHeader()}\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <div className=\"panel-white project-baseline\">\n              {branchesEnabled && <h2>{translate('project_baseline.default_setting')}</h2>}\n\n              {generalSetting && overrideGeneralSetting !== undefined && (\n                <ProjectBaselineSelector\n                  analysis={analysis}\n                  branchesEnabled={branchesEnabled}\n                  component={component.key}\n                  currentSetting={currentSetting}\n                  currentSettingValue={currentSettingValue}\n                  days={days}\n                  generalSetting={generalSetting}\n                  onCancel={this.handleCancel}\n                  onSelectAnalysis={this.handleSelectAnalysis}\n                  onSelectDays={this.handleSelectDays}\n                  onSelectSetting={this.handleSelectSetting}\n                  onSubmit={this.handleSubmit}\n                  onToggleSpecificSetting={this.handleToggleSpecificSetting}\n                  overrideGeneralSetting={overrideGeneralSetting}\n                  saving={saving}\n                  selected={selected}\n                />\n              )}\n              {generalSetting && branchesEnabled && (\n                <div className=\"huge-spacer-top branch-baseline-selector\">\n                  <hr />\n                  <h2>{translate('project_baseline.configure_branches')}</h2>\n                  <BranchList\n                    branchLikes={branchLikes}\n                    component={component}\n                    inheritedSetting={\n                      currentSetting\n                        ? {\n                            type: currentSetting,\n                            value: currentSettingValue\n                          }\n                        : generalSetting\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport App from './App';\n\nconst mapStateToProps = (state: Store) => ({\n  branchesEnabled: getAppState(state).branchesEnabled,\n  canAdmin: getAppState(state).canAdmin\n});\n\nexport default connect(mapStateToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport const formatterOption = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nexport default function DateTimeFormatter({ children, date }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...formatterOption}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as startOfDay from 'date-fns/start_of_day';\nimport { chunk, flatMap, groupBy, isEqual, sortBy } from 'lodash';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsDate,\n  parseAsString,\n  serializeDate,\n  serializeString,\n  serializeStringArray\n} from 'sonar-ui-common/helpers/query';\nimport { get } from 'sonar-ui-common/helpers/storage';\n\nexport interface Query {\n  category: string;\n  customMetrics: string[];\n  from?: Date;\n  graph: string;\n  project: string;\n  selectedDate?: Date;\n  to?: Date;\n}\n\nexport interface Point {\n  x: Date;\n  y: number | string | undefined;\n}\n\nexport interface Serie {\n  data: Point[];\n  name: string;\n  translatedName: string;\n  type: string;\n}\n\nexport interface HistoryItem {\n  date: Date;\n  value?: string;\n}\n\nexport interface MeasureHistory {\n  metric: string;\n  history: HistoryItem[];\n}\n\nexport const EVENT_TYPES = ['VERSION', 'QUALITY_GATE', 'QUALITY_PROFILE', 'OTHER'];\nexport const APPLICATION_EVENT_TYPES = ['QUALITY_GATE', 'DEFINITION_CHANGE', 'OTHER'];\nexport const DEFAULT_GRAPH = 'issues';\nexport const GRAPH_TYPES = ['issues', 'coverage', 'duplications', 'custom'];\nexport const GRAPHS_METRICS_DISPLAYED: T.Dict<string[]> = {\n  issues: ['bugs', 'code_smells', 'vulnerabilities'],\n  coverage: ['lines_to_cover', 'uncovered_lines'],\n  duplications: ['ncloc', 'duplicated_lines']\n};\nexport const GRAPHS_METRICS: T.Dict<string[]> = {\n  issues: GRAPHS_METRICS_DISPLAYED['issues'].concat([\n    'reliability_rating',\n    'security_rating',\n    'sqale_rating'\n  ]),\n  coverage: GRAPHS_METRICS_DISPLAYED['coverage'].concat(['coverage']),\n  duplications: GRAPHS_METRICS_DISPLAYED['duplications'].concat(['duplicated_lines_density'])\n};\n\nexport const PROJECT_ACTIVITY_GRAPH = 'sonar_project_activity.graph';\nexport const PROJECT_ACTIVITY_GRAPH_CUSTOM = 'sonar_project_activity.graph.custom';\n\nexport function activityQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.category !== nextQuery.category || datesQueryChanged(prevQuery, nextQuery);\n}\n\nexport function customMetricsChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.customMetrics, nextQuery.customMetrics);\n}\n\nexport function datesQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.from, nextQuery.from) || !isEqual(prevQuery.to, nextQuery.to);\n}\n\nexport function hasDataValues(serie: Serie) {\n  return serie.data.some(point => Boolean(point.y || point.y === 0));\n}\n\nexport function hasHistoryData(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1);\n}\n\nexport function hasHistoryDataValue(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1 && hasDataValues(serie));\n}\n\nexport function historyQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.graph !== nextQuery.graph;\n}\n\nexport function isCustomGraph(graph: string) {\n  return graph === 'custom';\n}\n\nexport function selectedDateQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.selectedDate, nextQuery.selectedDate);\n}\n\nexport function generateCoveredLinesMetric(\n  uncoveredLines: MeasureHistory,\n  measuresHistory: MeasureHistory[]\n) {\n  const linesToCover = measuresHistory.find(measure => measure.metric === 'lines_to_cover');\n  return {\n    data: linesToCover\n      ? uncoveredLines.history.map((analysis, idx) => ({\n          x: analysis.date,\n          y: Number(linesToCover.history[idx].value) - Number(analysis.value)\n        }))\n      : [],\n    name: 'covered_lines',\n    translatedName: translate('project_activity.custom_metric.covered_lines'),\n    type: 'INT'\n  };\n}\n\nfunction findMetric(key: string, metrics: T.Metric[] | T.Dict<T.Metric>) {\n  if (Array.isArray(metrics)) {\n    return metrics.find(metric => metric.key === key);\n  }\n  return metrics[key];\n}\n\nexport function generateSeries(\n  measuresHistory: MeasureHistory[],\n  graph: string,\n  metrics: T.Metric[] | T.Dict<T.Metric>,\n  displayedMetrics: string[]\n): Serie[] {\n  if (displayedMetrics.length <= 0 || typeof measuresHistory === 'undefined') {\n    return [];\n  }\n  return sortBy(\n    measuresHistory\n      .filter(measure => displayedMetrics.indexOf(measure.metric) >= 0)\n      .map(measure => {\n        if (measure.metric === 'uncovered_lines' && !isCustomGraph(graph)) {\n          return generateCoveredLinesMetric(measure, measuresHistory);\n        }\n        const metric = findMetric(measure.metric, metrics);\n        return {\n          data: measure.history.map(analysis => ({\n            x: analysis.date,\n            y: metric && metric.type === 'LEVEL' ? analysis.value : Number(analysis.value)\n          })),\n          name: measure.metric,\n          translatedName: metric ? getLocalizedMetricName(metric) : measure.metric,\n          type: metric ? metric.type : 'INT'\n        };\n      }),\n    serie =>\n      displayedMetrics.indexOf(serie.name === 'covered_lines' ? 'uncovered_lines' : serie.name)\n  );\n}\n\nexport function splitSeriesInGraphs(series: Serie[], maxGraph: number, maxSeries: number) {\n  return flatMap(groupBy(series, serie => serie.type), type => chunk(type, maxSeries)).slice(\n    0,\n    maxGraph\n  );\n}\n\nexport function getSeriesMetricType(series: Serie[]) {\n  return series.length > 0 ? series[0].type : 'INT';\n}\n\ninterface AnalysesByDay {\n  byDay: T.Dict<T.ParsedAnalysis[]>;\n  version: string | null;\n  key: string | null;\n}\n\nexport function getAnalysesByVersionByDay(analyses: T.ParsedAnalysis[], query: Query) {\n  return analyses.reduce<AnalysesByDay[]>((acc, analysis) => {\n    let currentVersion = acc[acc.length - 1];\n    const versionEvent = analysis.events.find(event => event.category === 'VERSION');\n    if (versionEvent) {\n      const newVersion = { version: versionEvent.name, key: versionEvent.key, byDay: {} };\n      if (!currentVersion || Object.keys(currentVersion.byDay).length > 0) {\n        acc.push(newVersion);\n      } else {\n        acc[acc.length - 1] = newVersion;\n      }\n      currentVersion = newVersion;\n    } else if (!currentVersion) {\n      // APPs don't have version events, so let's create a fake one\n      currentVersion = { version: null, key: null, byDay: {} };\n      acc.push(currentVersion);\n    }\n\n    const day = startOfDay(parseDate(analysis.date))\n      .getTime()\n      .toString();\n\n    let matchFilters = true;\n    if (query.category || query.from || query.to) {\n      const isAfterFrom = !query.from || analysis.date >= query.from;\n      const isBeforeTo = !query.to || analysis.date <= query.to;\n      const hasSelectedCategoryEvents =\n        !query.category || analysis.events.find(event => event.category === query.category) != null;\n      matchFilters = isAfterFrom && isBeforeTo && hasSelectedCategoryEvents;\n    }\n\n    if (matchFilters) {\n      if (!currentVersion.byDay[day]) {\n        currentVersion.byDay[day] = [];\n      }\n      currentVersion.byDay[day].push(analysis);\n    }\n    return acc;\n  }, []);\n}\n\nexport function getDisplayedHistoryMetrics(graph: string, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS_DISPLAYED[graph];\n}\n\nexport function getHistoryMetrics(graph: string, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS[graph];\n}\n\nexport function getProjectActivityGraph(project: string) {\n  const customGraphs = get(PROJECT_ACTIVITY_GRAPH_CUSTOM, project);\n  return {\n    graph: get(PROJECT_ACTIVITY_GRAPH, project) || 'issues',\n    customGraphs: customGraphs ? customGraphs.split(',') : []\n  };\n}\n\nfunction parseGraph(value?: string) {\n  const graph = parseAsString(value);\n  return GRAPH_TYPES.includes(graph) ? graph : DEFAULT_GRAPH;\n}\n\nfunction serializeGraph(value: string) {\n  return value === DEFAULT_GRAPH ? undefined : value;\n}\n\nexport function parseQuery(urlQuery: T.RawQuery): Query {\n  return {\n    category: parseAsString(urlQuery['category']),\n    customMetrics: parseAsArray(urlQuery['custom_metrics'], parseAsString),\n    from: parseAsDate(urlQuery['from']),\n    graph: parseGraph(urlQuery['graph']),\n    project: parseAsString(urlQuery['id']),\n    to: parseAsDate(urlQuery['to']),\n    selectedDate: parseAsDate(urlQuery['selected_date'])\n  };\n}\n\nexport function serializeQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    from: serializeDate(query.from),\n    project: serializeString(query.project),\n    to: serializeDate(query.to)\n  });\n}\n\nexport function serializeUrlQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    custom_metrics: serializeStringArray(query.customMetrics),\n    from: serializeDate(query.from),\n    graph: serializeGraph(query.graph),\n    id: serializeString(query.project),\n    to: serializeDate(query.to),\n    selected_date: serializeDate(query.selectedDate)\n  });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n"],"sourceRoot":""}