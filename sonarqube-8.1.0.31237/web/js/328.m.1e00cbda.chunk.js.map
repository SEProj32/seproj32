{"version":3,"sources":["webpack:///./node_modules/sonar-ui-common/components/icons/ExpandSnippetIcon.js","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/utils.ts","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/SnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/ComponentSourceSnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/CrossComponentSourceViewerWrapper.tsx","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/sonar-ui-common/components/icons/FavoriteIcon.js","webpack:///./node_modules/sonar-ui-common/components/controls/FavoriteButton.js","webpack:///./node_modules/lodash/intersection.js","webpack:///./node_modules/lodash/_baseIntersection.js","webpack:///./node_modules/lodash/_castArrayLikeObject.js","webpack:///./node_modules/lodash/times.js"],"names":["Object","defineProperty","exports","value","React","__webpack_require__","Icon_1","default","_a","className","_b","fill","size","createElement","fillRule","d","stroke","strokeWidth","transform","LINES_ABOVE","LINES_BELOW","MERGE_DISTANCE","LINES_BELOW_ISSUE","EXPAND_BY_LINES","collision","_ref","_ref2","_ref3","_slicedToArray","startA","endA","_ref4","startB","getPrimaryLocation","issue","component","textRange","endLine","endOffset","startLine","startOffset","createSnippets","params","locations","addIssueLocation","reduce","snippets","loc","index","startIndex","Math","max","endIndex","locationEnd","issueEndLine","addLinesBellow","firstCollision","filter","snippet","start","end","keep","min","undefined","push","groupLocationsByComponent","components","currentGroup","currentComponent","groups","forEach","_objectSpread","key","measures","path","project","projectName","q","uuid","sources","unknownComponent","SCROLL_LEFT_OFFSET","SnippetViewer_SnippetViewer","index_js_exposed","[object Object]","props","super","this","doScroll","element","scroll","parent","snippetNodeRef","current","scrolling","leftOffset","rightOffset","getBoundingClientRect","width","scrollToLastExpandedRow","snippetNode","rows","querySelectorAll","lastRow","length","expandBlock","direction","then","displayDuplications","issuesForLine","issueLocations","line","symbols","verticalBuffer","secondaryIssueLocations","helpers_issueLocations","_this$props","duplications","duplicationsByLine","duplicationsCount","lineDuplications","isSinkLine","some","i","Line","branchLike","displayAllIssues","displayCoverage","displayIssues","displayLocationMarkers","highlighted","highlightedLocationMessage","helpers_lines","highlightedSymbols","issuePopup","issues","last","linePopup","loadDuplications","onIssueChange","onIssuePopupToggle","onIssueSelect","onIssueUnselect","onIssuesClose","handleCloseIssues","onIssuesOpen","handleOpenIssues","onLinePopupToggle","handleLinePopupToggle","onLocationSelect","onSymbolClick","handleSymbolClick","openIssues","openIssuesByLine","previousLine","renderDuplicationPopup","selectedIssue","_this$props2","_this$props2$issuesBy","issuesByLine","locationsByLine","lastLine","lines","parseInt","indexing","bottomLine","issueLine","lowestVisibleIssue","keys","map","k","l","inSnippet","s","duplicated","ref","aria-label","l10n","onClick","type","ExpandSnippetIcon_default","a","classnames_default","expand-up","expand-down","renderLine","ComponentSourceSnippetViewer_ComponentSourceSnippetViewer","mounted","rootNodeRef","state","additionalLines","loading","snippetIndex","snippetGroup","find","Promise","reject","extension","range","from","to","api_components","ComponentSourceSnippetViewer_objectSpread","branch_like","lineMap","coverageStatus","getCoverageStatus","newLinesMapped","animateBlockExpansion","expandComponent","setState","createSnippetsFromProps","secondaryLocations","root","querySelector","concat","wrapper","table","firstChild","nodes","getNodes","style","marginTop","maxHeight","up","arguments","height","startHeight","transition","setTimeout","newSnippets","_ref5","snippetToExpand","Error","toDelete","expandSnippet","deletedSnippets","setMaxHeight","resolve","cleanDom","_this$props3","_this$state","fullyShown","snippetLines","componentLines","linesForSnippets","classnames","source-duplications-expanded","SourceViewerHeaderSlim","expandable","onExpand","sourceViewerFile","id","renderSnippet","CrossComponentSourceViewerWrapper_CrossComponentSourceViewerWrapper","fetchDuplications","CrossComponentSourceViewerWrapper_objectSpread","r","duplicatedFiles","files","name","handleIssuePopupToggle","popupName","open","samePopup","handleCloseLinePopup","blocks","helpers_duplications","context","Consumer","openComponent","DuplicationPopup","inRemovedComponent","onClose","fetchIssueFlowSnippets","newProps","issueKey","onLoaded","DeferredSpinner_default","_this$state2","issuesByComponent","locationsByComponent","componentProps","SourceViewerContext","Provider","selectedFlowIndex","file","assign","baseAssignValue","createAggregator","hasOwnProperty","prototype","groupBy","result","call","module","classNames","theme_1","favorite","ThemeConsumer","theme","is-filled","color","colors","orange","extendStatics","__extends","b","setPrototypeOf","__proto__","Array","p","__","constructor","create","l10n_1","FavoriteIcon_1","buttons_1","Tooltip_1","FavoriteButton","_super","apply","render","qualifier","toggleFavorite","tooltip","translate","ariaLabel","overlay","ButtonLink","PureComponent","arrayMap","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","iteratee","comparator","includes","othLength","othIndex","caches","maxLength","Infinity","array","seen","outer","computed","cache","isArrayLikeObject","n"],"mappings":"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","file":"js/328.m.1e00cbda.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Icon_1 = require(\"./Icon\");\nfunction ExpandSnippetIcon(_a) {\n    var className = _a.className, _b = _a.fill, fill = _b === void 0 ? 'currentColor' : _b, size = _a.size;\n    return (React.createElement(Icon_1.default, { className: className, size: size },\n        React.createElement(\"g\", { fill: \"none\", fillRule: \"evenodd\" },\n            React.createElement(\"path\", { d: \"M8 1v4H4\", stroke: fill, strokeWidth: \"2\", transform: \"scale(-.83333 -.84583) rotate(45 7.66 -19.75)\" }),\n            React.createElement(\"path\", { d: \"M3 5.78h10v1.7H3z\", fill: fill }),\n            React.createElement(\"path\", { d: \"M7.17 2.4h1.66v5.07H7.17z\", fill: fill }),\n            React.createElement(\"g\", null,\n                React.createElement(\"path\", { d: \"M8.16 1.81V6.1H3.9\", stroke: fill, strokeWidth: \"2\", transform: \"scale(.83333 .84583) rotate(45 -4.2 13.2)\" }),\n                React.createElement(\"path\", { d: \"M13 10.01H3v-1.7h10z\", fill: fill }),\n                React.createElement(\"path\", { d: \"M8.83 13.4H7.17V9.15h1.66z\", fill: fill })))));\n}\nexports.default = ExpandSnippetIcon;\n//# sourceMappingURL=ExpandSnippetIcon.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nconst LINES_ABOVE = 5;\nconst LINES_BELOW = 5;\nexport const MERGE_DISTANCE = 11; // Merge if snippets are eleven lines away (separated by 10 lines) or fewer\nexport const LINES_BELOW_ISSUE = 9;\nexport const EXPAND_BY_LINES = 50;\n\nfunction unknownComponent(key: string): T.SnippetsByComponent {\n  return {\n    component: {\n      key,\n      measures: {},\n      path: '',\n      project: '',\n      projectName: '',\n      q: 'FIL',\n      uuid: ''\n    },\n    sources: []\n  };\n}\n\nfunction collision([startA, endA]: number[], [startB, endB]: number[]) {\n  return !(startA > endB + MERGE_DISTANCE || endA < startB - MERGE_DISTANCE);\n}\n\nfunction getPrimaryLocation(issue: T.Issue): T.FlowLocation {\n  return {\n    component: issue.component,\n    textRange: issue.textRange || {\n      endLine: 0,\n      endOffset: 0,\n      startLine: 0,\n      startOffset: 0\n    }\n  };\n}\n\nfunction addLinesBellow(params: { issue: T.Issue; locationEnd: number }) {\n  const { issue, locationEnd } = params;\n  const issueEndLine = (issue.textRange && issue.textRange.endLine) || 0;\n\n  if (!issueEndLine || issueEndLine === locationEnd) {\n    return locationEnd + LINES_BELOW_ISSUE;\n  }\n\n  return locationEnd + LINES_BELOW;\n}\n\nexport function createSnippets(params: {\n  locations: T.FlowLocation[];\n  issue: T.Issue;\n  addIssueLocation: boolean;\n}): T.Snippet[] {\n  const { locations, issue, addIssueLocation } = params;\n  // For each location's range (2 above and 2 below), and then compare with other ranges\n  // to merge snippets that collide.\n  return (addIssueLocation ? [getPrimaryLocation(issue), ...locations] : locations).reduce(\n    (snippets: T.Snippet[], loc, index) => {\n      const startIndex = Math.max(1, loc.textRange.startLine - LINES_ABOVE);\n      const endIndex = addLinesBellow({ issue, locationEnd: loc.textRange.endLine });\n\n      let firstCollision: { start: number; end: number } | undefined;\n\n      // Remove ranges that collide into the first collision\n      snippets = snippets.filter(snippet => {\n        if (collision([snippet.start, snippet.end], [startIndex, endIndex])) {\n          let keep = false;\n          // Check if we've already collided\n          if (!firstCollision) {\n            firstCollision = snippet;\n            keep = true;\n          }\n          // Merge with first collision:\n          firstCollision.start = Math.min(startIndex, snippet.start, firstCollision.start);\n          firstCollision.end = Math.max(endIndex, snippet.end, firstCollision.end);\n\n          // remove the range if it was not the first collision\n          return keep;\n        }\n        return true;\n      });\n\n      if (firstCollision === undefined) {\n        snippets.push({\n          start: startIndex,\n          end: endIndex,\n          index\n        });\n      }\n\n      return snippets;\n    },\n    []\n  );\n}\n\nexport function linesForSnippets(snippets: T.Snippet[], componentLines: T.LineMap) {\n  return snippets\n    .map(snippet => {\n      const lines = [];\n      for (let i = snippet.start; i <= snippet.end; i++) {\n        if (componentLines[i]) {\n          lines.push(componentLines[i]);\n        }\n      }\n      return lines;\n    })\n    .filter(snippet => snippet.length > 0);\n}\n\nexport function groupLocationsByComponent(\n  locations: T.FlowLocation[],\n  components: { [key: string]: T.SnippetsByComponent }\n) {\n  let currentComponent = '';\n  let currentGroup: T.SnippetGroup;\n  const groups: T.SnippetGroup[] = [];\n\n  locations.forEach((loc, index) => {\n    if (loc.component !== currentComponent) {\n      currentGroup = {\n        ...(components[loc.component] || unknownComponent(loc.component)),\n        locations: []\n      };\n      groups.push(currentGroup);\n      currentComponent = loc.component;\n    }\n    loc.index = index;\n    currentGroup.locations.push(loc);\n  });\n\n  return groups;\n}\n\nexport function expandSnippet({\n  direction,\n  snippetIndex,\n  snippets\n}: {\n  direction: T.ExpandDirection;\n  snippetIndex: number;\n  snippets: T.Snippet[];\n}) {\n  const snippetToExpand = snippets.find(s => s.index === snippetIndex);\n  if (!snippetToExpand) {\n    throw new Error(`Snippet ${snippetIndex} not found`);\n  }\n\n  snippetToExpand.start = Math.max(\n    0,\n    snippetToExpand.start - (direction === 'up' ? EXPAND_BY_LINES : 0)\n  );\n  snippetToExpand.end += direction === 'down' ? EXPAND_BY_LINES : 0;\n\n  return snippets.map(snippet => {\n    if (snippet.index === snippetIndex) {\n      return snippetToExpand;\n    }\n    if (collision([snippet.start, snippet.end], [snippetToExpand.start, snippetToExpand.end])) {\n      // Merge with expanded snippet\n      snippetToExpand.start = Math.min(snippet.start, snippetToExpand.start);\n      snippetToExpand.end = Math.max(snippet.end, snippetToExpand.end);\n      snippet.toDelete = true;\n    }\n    return snippet;\n  });\n}\n\nexport function inSnippet(line: number, snippet: T.SourceLine[]) {\n  return line >= snippet[0].line && line <= snippet[snippet.length - 1].line;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport ExpandSnippetIcon from 'sonar-ui-common/components/icons/ExpandSnippetIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollHorizontally } from 'sonar-ui-common/helpers/scrolling';\nimport Line from '../../../components/SourceViewer/components/Line';\nimport { symbolsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport { getSecondaryIssueLocationsForLine } from '../../../components/SourceViewer/helpers/issueLocations';\nimport {\n  optimizeHighlightedSymbols,\n  optimizeLocationMessage,\n  optimizeSelectedIssue\n} from '../../../components/SourceViewer/helpers/lines';\nimport { BranchLike } from '../../../types/branch-like';\nimport { inSnippet, LINES_BELOW_ISSUE } from './utils';\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  component: T.SourceViewerFile;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  expandBlock: (snippetIndex: number, direction: T.ExpandDirection) => Promise<void>;\n  handleCloseIssues: (line: T.SourceLine) => void;\n  handleLinePopupToggle: (line: T.SourceLine) => void;\n  handleOpenIssues: (line: T.SourceLine) => void;\n  handleSymbolClick: (symbols: string[]) => void;\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  highlightedSymbols: string[];\n  index: number;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLocationSelect: (index: number) => void;\n  openIssuesByLine: T.Dict<boolean>;\n  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;\n  scroll?: (element: HTMLElement, offset?: number) => void;\n  snippet: T.SourceLine[];\n}\n\nconst SCROLL_LEFT_OFFSET = 32;\n\nexport default class SnippetViewer extends React.PureComponent<Props> {\n  snippetNodeRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: Props) {\n    super(props);\n    this.snippetNodeRef = React.createRef();\n  }\n\n  doScroll = (element: HTMLElement) => {\n    if (this.props.scroll) {\n      this.props.scroll(element);\n    }\n    const parent = this.snippetNodeRef.current as Element;\n\n    if (parent) {\n      scrollHorizontally(element, {\n        leftOffset: SCROLL_LEFT_OFFSET,\n        rightOffset: parent.getBoundingClientRect().width - SCROLL_LEFT_OFFSET,\n        parent\n      });\n    }\n  };\n\n  scrollToLastExpandedRow = () => {\n    if (this.props.scroll) {\n      const snippetNode = this.snippetNodeRef.current as Element;\n      if (!snippetNode) {\n        return;\n      }\n      const rows = snippetNode.querySelectorAll('tr');\n      const lastRow = rows[rows.length - 1];\n      this.props.scroll(lastRow, 100);\n    }\n  };\n\n  expandBlock = (direction: T.ExpandDirection) => () =>\n    this.props.expandBlock(this.props.index, direction).then(() => {\n      if (direction === 'down') {\n        this.scrollToLastExpandedRow();\n      }\n    });\n\n  renderLine({\n    displayDuplications,\n    index,\n    issuesForLine,\n    issueLocations,\n    line,\n    snippet,\n    symbols,\n    verticalBuffer\n  }: {\n    displayDuplications: boolean;\n    index: number;\n    issuesForLine: T.Issue[];\n    issueLocations: T.LinearIssueLocation[];\n    line: T.SourceLine;\n    snippet: T.SourceLine[];\n    symbols: string[];\n    verticalBuffer: number;\n  }) {\n    const secondaryIssueLocations = getSecondaryIssueLocationsForLine(line, this.props.locations);\n\n    const { duplications, duplicationsByLine } = this.props;\n    const duplicationsCount = duplications ? duplications.length : 0;\n    const lineDuplications =\n      (duplicationsCount && duplicationsByLine && duplicationsByLine[line.line]) || [];\n\n    const isSinkLine = issuesForLine.some(i => i.key === this.props.issue.key);\n\n    return (\n      <Line\n        branchLike={this.props.branchLike}\n        displayAllIssues={false}\n        displayCoverage={true}\n        displayDuplications={displayDuplications}\n        displayIssues={!isSinkLine || issuesForLine.length > 1}\n        displayLocationMarkers={true}\n        duplications={lineDuplications}\n        duplicationsCount={duplicationsCount}\n        highlighted={false}\n        highlightedLocationMessage={optimizeLocationMessage(\n          this.props.highlightedLocationMessage,\n          secondaryIssueLocations\n        )}\n        highlightedSymbols={optimizeHighlightedSymbols(symbols, this.props.highlightedSymbols)}\n        issueLocations={issueLocations}\n        issuePopup={this.props.issuePopup}\n        issues={issuesForLine}\n        key={line.line}\n        last={false}\n        line={line}\n        linePopup={this.props.linePopup}\n        loadDuplications={this.props.loadDuplications}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onIssueSelect={() => {}}\n        onIssueUnselect={() => {}}\n        onIssuesClose={this.props.handleCloseIssues}\n        onIssuesOpen={this.props.handleOpenIssues}\n        onLinePopupToggle={this.props.handleLinePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        onSymbolClick={this.props.handleSymbolClick}\n        openIssues={this.props.openIssuesByLine[line.line]}\n        previousLine={index > 0 ? snippet[index - 1] : undefined}\n        renderDuplicationPopup={this.props.renderDuplicationPopup}\n        scroll={this.doScroll}\n        secondaryIssueLocations={secondaryIssueLocations}\n        selectedIssue={optimizeSelectedIssue(this.props.issue.key, issuesForLine)}\n        verticalBuffer={verticalBuffer}\n      />\n    );\n  }\n\n  render() {\n    const {\n      component,\n      issue,\n      issuesByLine = {},\n      last,\n      locationsByLine,\n      openIssuesByLine,\n      snippet\n    } = this.props;\n    const lastLine =\n      component.measures && component.measures.lines && parseInt(component.measures.lines, 10);\n\n    const symbols = symbolsByLine(snippet);\n\n    const bottomLine = snippet[snippet.length - 1].line;\n    const issueLine = issue.textRange ? issue.textRange.endLine : issue.line;\n    const lowestVisibleIssue = Math.max(\n      ...Object.keys(issuesByLine)\n        .map(k => parseInt(k, 10))\n        .filter(l => inSnippet(l, snippet) && (l === issueLine || openIssuesByLine[l]))\n    );\n    const verticalBuffer = last\n      ? Math.max(0, LINES_BELOW_ISSUE - (bottomLine - lowestVisibleIssue))\n      : 0;\n\n    const displayDuplications = snippet.some(s => !!s.duplicated);\n\n    return (\n      <div className=\"source-viewer-code snippet\" ref={this.snippetNodeRef}>\n        <div>\n          {snippet[0].line > 1 && (\n            <div className=\"expand-block expand-block-above\">\n              <button\n                aria-label={translate('source_viewer.expand_above')}\n                onClick={this.expandBlock('up')}\n                type=\"button\">\n                <ExpandSnippetIcon />\n              </button>\n            </div>\n          )}\n          <table\n            className={classNames('source-table', {\n              'expand-up': snippet[0].line > 1,\n              'expand-down': !lastLine || snippet[snippet.length - 1].line < lastLine\n            })}>\n            <tbody>\n              {snippet.map((line, index) =>\n                this.renderLine({\n                  displayDuplications,\n                  index,\n                  issuesForLine: issuesByLine[line.line] || [],\n                  issueLocations: locationsByLine[line.line] || [],\n                  line,\n                  snippet,\n                  symbols: symbols[line.line],\n                  verticalBuffer: index === snippet.length - 1 ? verticalBuffer : 0\n                })\n              )}\n            </tbody>\n          </table>\n          {(!lastLine || snippet[snippet.length - 1].line < lastLine) && (\n            <div className=\"expand-block expand-block-below\">\n              <button\n                aria-label={translate('source_viewer.expand_below')}\n                onClick={this.expandBlock('down')}\n                type=\"button\">\n                <ExpandSnippetIcon />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { getSources } from '../../../api/components';\nimport getCoverageStatus from '../../../components/SourceViewer/helpers/getCoverageStatus';\nimport { locationsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport SourceViewerHeaderSlim from '../../../components/SourceViewer/SourceViewerHeaderSlim';\nimport { getBranchLikeQuery } from '../../../helpers/branch-like';\nimport { BranchLike } from '../../../types/branch-like';\nimport SnippetViewer from './SnippetViewer';\nimport {\n  createSnippets,\n  expandSnippet,\n  EXPAND_BY_LINES,\n  linesForSnippets,\n  MERGE_DISTANCE\n} from './utils';\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (component: string, line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLinePopupToggle: (linePopup: T.LinePopup & { component: string }) => void;\n  onLocationSelect: (index: number) => void;\n  renderDuplicationPopup: (\n    component: T.SourceViewerFile,\n    index: number,\n    line: number\n  ) => React.ReactNode;\n  scroll?: (element: HTMLElement, offset: number) => void;\n  snippetGroup: T.SnippetGroup;\n}\n\ninterface State {\n  additionalLines: { [line: number]: T.SourceLine };\n  highlightedSymbols: string[];\n  loading: boolean;\n  openIssuesByLine: T.Dict<boolean>;\n  snippets: T.Snippet[];\n}\n\nexport default class ComponentSourceSnippetViewer extends React.PureComponent<Props, State> {\n  mounted = false;\n  rootNodeRef = React.createRef<HTMLDivElement>();\n  state: State = {\n    additionalLines: {},\n    highlightedSymbols: [],\n    loading: false,\n    openIssuesByLine: {},\n    snippets: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.createSnippetsFromProps();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  createSnippetsFromProps() {\n    const snippets = createSnippets({\n      locations: this.props.snippetGroup.locations,\n      issue: this.props.issue,\n      addIssueLocation: this.props.issue.secondaryLocations.length > 0\n    });\n\n    this.setState({ snippets });\n  }\n\n  getNodes(index: number): { wrapper: HTMLElement; table: HTMLElement } | undefined {\n    const root = this.rootNodeRef.current;\n    if (!root) {\n      return undefined;\n    }\n    const element = root.querySelector(`#snippet-wrapper-${index}`);\n    if (!element) {\n      return undefined;\n    }\n    const wrapper = element.querySelector<HTMLElement>('.snippet');\n    if (!wrapper) {\n      return undefined;\n    }\n    const table = wrapper.firstChild as HTMLElement;\n    if (!table) {\n      return undefined;\n    }\n\n    return { wrapper, table };\n  }\n\n  /*\n   * Clean after animation\n   */\n  cleanDom(index: number) {\n    const nodes = this.getNodes(index);\n\n    if (!nodes) {\n      return;\n    }\n\n    const { wrapper, table } = nodes;\n\n    table.style.marginTop = '';\n    wrapper.style.maxHeight = '';\n  }\n\n  setMaxHeight(index: number, value?: number, up = false) {\n    const nodes = this.getNodes(index);\n\n    if (!nodes) {\n      return;\n    }\n\n    const { wrapper, table } = nodes;\n\n    const maxHeight = value !== undefined ? value : table.getBoundingClientRect().height;\n\n    if (up) {\n      const startHeight = wrapper.getBoundingClientRect().height;\n      table.style.transition = 'none';\n      table.style.marginTop = `${startHeight - maxHeight}px`;\n\n      // animate!\n      setTimeout(() => {\n        table.style.transition = '';\n        table.style.marginTop = '0px';\n        wrapper.style.maxHeight = `${maxHeight + 20}px`;\n      }, 0);\n    } else {\n      wrapper.style.maxHeight = `${maxHeight + 20}px`;\n    }\n  }\n\n  expandBlock = (snippetIndex: number, direction: T.ExpandDirection): Promise<void> => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n    const { snippets } = this.state;\n    const snippet = snippets.find(s => s.index === snippetIndex);\n    if (!snippet) {\n      return Promise.reject();\n    }\n    // Extend by EXPAND_BY_LINES and add buffer for merging snippets\n    const extension = EXPAND_BY_LINES + MERGE_DISTANCE - 1;\n    const range =\n      direction === 'up'\n        ? {\n            from: Math.max(1, snippet.start - extension),\n            to: snippet.start - 1\n          }\n        : {\n            from: snippet.end + 1,\n            to: snippet.end + extension\n          };\n    return getSources({\n      key,\n      ...range,\n      ...getBranchLikeQuery(branchLike)\n    })\n      .then(lines =>\n        lines.reduce((lineMap: T.Dict<T.SourceLine>, line) => {\n          line.coverageStatus = getCoverageStatus(line);\n          lineMap[line.line] = line;\n          return lineMap;\n        }, {})\n      )\n      .then(newLinesMapped => this.animateBlockExpansion(snippetIndex, direction, newLinesMapped));\n  };\n\n  animateBlockExpansion(\n    snippetIndex: number,\n    direction: T.ExpandDirection,\n    newLinesMapped: T.Dict<T.SourceLine>\n  ): Promise<void> {\n    if (this.mounted) {\n      const { snippets } = this.state;\n\n      const newSnippets = expandSnippet({\n        direction,\n        snippetIndex,\n        snippets\n      });\n\n      const deletedSnippets = newSnippets.filter(s => s.toDelete);\n\n      // set max-height to current height for CSS transitions\n      deletedSnippets.forEach(s => this.setMaxHeight(s.index));\n      this.setMaxHeight(snippetIndex);\n\n      return new Promise(resolve => {\n        this.setState(\n          ({ additionalLines, snippets }) => {\n            const combinedLines = { ...additionalLines, ...newLinesMapped };\n            return {\n              additionalLines: combinedLines,\n              snippets\n            };\n          },\n          () => {\n            // Set max-height 0 to trigger CSS transitions\n            deletedSnippets.forEach(s => {\n              this.setMaxHeight(s.index, 0);\n            });\n            this.setMaxHeight(snippetIndex, undefined, direction === 'up');\n\n            // Wait for transition to finish before updating dom\n            setTimeout(() => {\n              this.setState({ snippets: newSnippets.filter(s => !s.toDelete) }, resolve);\n              this.cleanDom(snippetIndex);\n            }, 200);\n          }\n        );\n      });\n    }\n    return Promise.resolve();\n  }\n\n  expandComponent = () => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n\n    this.setState({ loading: true });\n\n    getSources({ key, ...getBranchLikeQuery(branchLike) }).then(\n      lines => {\n        if (this.mounted) {\n          this.setState(({ additionalLines }) => {\n            const combinedLines = { ...additionalLines, ...lines };\n            return {\n              additionalLines: combinedLines,\n              loading: false,\n              snippets: [{ start: 0, end: lines[lines.length - 1].line, index: -1 }]\n            };\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleLinePopupToggle = (linePopup: T.LinePopup) => {\n    this.props.onLinePopupToggle({\n      ...linePopup,\n      component: this.props.snippetGroup.component.key\n    });\n  };\n\n  handleOpenIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: true }\n    }));\n  };\n\n  handleCloseIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: false }\n    }));\n  };\n\n  handleSymbolClick = (highlightedSymbols: string[]) => {\n    this.setState({ highlightedSymbols });\n  };\n\n  loadDuplications = (line: T.SourceLine) => {\n    this.props.loadDuplications(this.props.snippetGroup.component.key, line);\n  };\n\n  renderDuplicationPopup = (index: number, line: number) => {\n    return this.props.renderDuplicationPopup(this.props.snippetGroup.component, index, line);\n  };\n\n  renderSnippet({\n    index,\n    issuesByLine,\n    last,\n    locationsByLine,\n    snippet\n  }: {\n    index: number;\n    issuesByLine: T.IssuesByLine;\n    last: boolean;\n    locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n    snippet: T.SourceLine[];\n  }) {\n    return (\n      <SnippetViewer\n        branchLike={this.props.branchLike}\n        component={this.props.snippetGroup.component}\n        expandBlock={this.expandBlock}\n        handleCloseIssues={this.handleCloseIssues}\n        handleLinePopupToggle={this.handleLinePopupToggle}\n        handleOpenIssues={this.handleOpenIssues}\n        handleSymbolClick={this.handleSymbolClick}\n        highlightedLocationMessage={this.props.highlightedLocationMessage}\n        highlightedSymbols={this.state.highlightedSymbols}\n        index={index}\n        issue={this.props.issue}\n        issuePopup={this.props.issuePopup}\n        issuesByLine={issuesByLine}\n        last={last}\n        linePopup={this.props.linePopup}\n        loadDuplications={this.loadDuplications}\n        locations={this.props.locations}\n        locationsByLine={locationsByLine}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        openIssuesByLine={this.state.openIssuesByLine}\n        renderDuplicationPopup={this.renderDuplicationPopup}\n        scroll={this.props.scroll}\n        snippet={snippet}\n      />\n    );\n  }\n\n  render() {\n    const { branchLike, duplications, issue, issuesByLine, last, snippetGroup } = this.props;\n    const { additionalLines, loading, snippets } = this.state;\n    const locations = locationsByLine([issue]);\n\n    const fullyShown =\n      snippets.length === 1 &&\n      snippetGroup.component.measures &&\n      snippets[0].end - snippets[0].start ===\n        parseInt(snippetGroup.component.measures.lines || '', 10);\n\n    const snippetLines = linesForSnippets(snippets, {\n      ...snippetGroup.sources,\n      ...additionalLines\n    });\n\n    return (\n      <div\n        className={classNames('component-source-container', {\n          'source-duplications-expanded': duplications && duplications.length > 0\n        })}\n        ref={this.rootNodeRef}>\n        <SourceViewerHeaderSlim\n          branchLike={branchLike}\n          expandable={!fullyShown}\n          loading={loading}\n          onExpand={this.expandComponent}\n          sourceViewerFile={snippetGroup.component}\n        />\n        {snippetLines.map((snippet, index) => (\n          <div id={`snippet-wrapper-${snippets[index].index}`} key={snippets[index].index}>\n            {this.renderSnippet({\n              snippet,\n              index: snippets[index].index,\n              issuesByLine: last ? issuesByLine : {},\n              locationsByLine: last && index === snippets.length - 1 ? locations : {},\n              last: last && index === snippets.length - 1\n            })}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { getDuplications } from '../../../api/components';\nimport { getIssueFlowSnippets } from '../../../api/issues';\nimport DuplicationPopup from '../../../components/SourceViewer/components/DuplicationPopup';\nimport {\n  filterDuplicationBlocksByLine,\n  getDuplicationBlocksForIndex,\n  isDuplicationBlockInRemovedComponent\n} from '../../../components/SourceViewer/helpers/duplications';\nimport {\n  duplicationsByLine,\n  issuesByComponentAndLine\n} from '../../../components/SourceViewer/helpers/indexing';\nimport { SourceViewerContext } from '../../../components/SourceViewer/SourceViewerContext';\nimport { WorkspaceContext } from '../../../components/workspace/context';\nimport { getBranchLikeQuery } from '../../../helpers/branch-like';\nimport { BranchLike } from '../../../types/branch-like';\nimport ComponentSourceSnippetViewer from './ComponentSourceSnippetViewer';\nimport { groupLocationsByComponent } from './utils';\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  highlightedLocationMessage?: { index: number; text: string | undefined };\n  issue: T.Issue;\n  issues: T.Issue[];\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onLoaded?: () => void;\n  onLocationSelect: (index: number) => void;\n  scroll?: (element: HTMLElement) => void;\n  selectedFlowIndex: number | undefined;\n}\n\ninterface State {\n  components: T.Dict<T.SnippetsByComponent>;\n  duplicatedFiles?: T.Dict<T.DuplicatedFile>;\n  duplications?: T.Duplication[];\n  duplicationsByLine: { [line: number]: number[] };\n  issuePopup?: { issue: string; name: string };\n  linePopup?: T.LinePopup & { component: string };\n  loading: boolean;\n}\n\nexport default class CrossComponentSourceViewerWrapper extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    components: {},\n    duplicationsByLine: {},\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIssueFlowSnippets(this.props.issue.key);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (newProps.issue.key !== this.props.issue.key) {\n      this.fetchIssueFlowSnippets(newProps.issue.key);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDuplications = (component: string, line: T.SourceLine) => {\n    getDuplications({\n      key: component,\n      ...getBranchLikeQuery(this.props.branchLike)\n    }).then(\n      r => {\n        if (this.mounted) {\n          this.setState(state => ({\n            duplicatedFiles: r.files,\n            duplications: r.duplications,\n            duplicationsByLine: duplicationsByLine(r.duplications),\n            linePopup:\n              r.duplications.length === 1\n                ? { component, index: 0, line: line.line, name: 'duplications' }\n                : state.linePopup\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchIssueFlowSnippets(issueKey: string) {\n    this.setState({ loading: true });\n    getIssueFlowSnippets(issueKey).then(\n      components => {\n        if (this.mounted) {\n          this.setState({\n            components,\n            issuePopup: undefined,\n            linePopup: undefined,\n            loading: false\n          });\n          if (this.props.onLoaded) {\n            this.props.onLoaded();\n          }\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleIssuePopupToggle = (issue: string, popupName: string, open?: boolean) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.issuePopup && state.issuePopup.name === popupName && state.issuePopup.issue === issue;\n      if (open !== false && !samePopup) {\n        return { issuePopup: { issue, name: popupName } };\n      } else if (open !== true && samePopup) {\n        return { issuePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleLinePopupToggle = ({\n    component,\n    index,\n    line,\n    name,\n    open\n  }: T.LinePopup & { component: string }) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.linePopup !== undefined &&\n        state.linePopup.line === line &&\n        state.linePopup.name === name &&\n        state.linePopup.component === component &&\n        state.linePopup.index === index;\n      if (open !== false && !samePopup) {\n        return { linePopup: { component, index, line, name } };\n      } else if (open !== true && samePopup) {\n        return { linePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleCloseLinePopup = () => {\n    this.setState({ linePopup: undefined });\n  };\n\n  renderDuplicationPopup = (component: T.SourceViewerFile, index: number, line: number) => {\n    const { duplicatedFiles, duplications } = this.state;\n\n    if (!component || !duplicatedFiles) {\n      return null;\n    }\n\n    const blocks = getDuplicationBlocksForIndex(duplications, index);\n\n    return (\n      <WorkspaceContext.Consumer>\n        {({ openComponent }) => (\n          <DuplicationPopup\n            blocks={filterDuplicationBlocksByLine(blocks, line)}\n            branchLike={this.props.branchLike}\n            duplicatedFiles={duplicatedFiles}\n            inRemovedComponent={isDuplicationBlockInRemovedComponent(blocks)}\n            onClose={this.handleCloseLinePopup}\n            openComponent={openComponent}\n            sourceViewerFile={component}\n          />\n        )}\n      </WorkspaceContext.Consumer>\n    );\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    if (loading) {\n      return (\n        <div>\n          <DeferredSpinner />\n        </div>\n      );\n    }\n\n    const { components, duplications, duplicationsByLine, linePopup } = this.state;\n    const issuesByComponent = issuesByComponentAndLine(this.props.issues);\n    const locationsByComponent = groupLocationsByComponent(this.props.locations, components);\n\n    return (\n      <div>\n        {locationsByComponent.map((snippetGroup, i) => {\n          let componentProps = {};\n          if (linePopup && snippetGroup.component.key === linePopup.component) {\n            componentProps = {\n              duplications,\n              duplicationsByLine,\n              linePopup: { index: linePopup.index, line: linePopup.line, name: linePopup.name }\n            };\n          }\n          return (\n            <SourceViewerContext.Provider\n              key={`${this.props.issue.key}-${this.props.selectedFlowIndex || 0}-${i}`}\n              value={{ branchLike: this.props.branchLike, file: snippetGroup.component }}>\n              <ComponentSourceSnippetViewer\n                branchLike={this.props.branchLike}\n                highlightedLocationMessage={this.props.highlightedLocationMessage}\n                issue={this.props.issue}\n                issuePopup={this.state.issuePopup}\n                issuesByLine={issuesByComponent[snippetGroup.component.key] || {}}\n                last={i === locationsByComponent.length - 1}\n                loadDuplications={this.fetchDuplications}\n                locations={snippetGroup.locations || []}\n                onIssueChange={this.props.onIssueChange}\n                onIssuePopupToggle={this.handleIssuePopupToggle}\n                onLinePopupToggle={this.handleLinePopupToggle}\n                onLocationSelect={this.props.onLocationSelect}\n                renderDuplicationPopup={this.renderDuplicationPopup}\n                scroll={this.props.scroll}\n                snippetGroup={snippetGroup}\n                {...componentProps}\n              />\n            </SourceViewerContext.Provider>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar theme_1 = require(\"../theme\");\nvar Icon_1 = require(\"./Icon\");\nfunction FavoriteIcon(_a) {\n    var className = _a.className, favorite = _a.favorite, fill = _a.fill, size = _a.size;\n    return (React.createElement(theme_1.ThemeConsumer, null, function (theme) { return (React.createElement(Icon_1.default, { className: classNames('icon-outline', { 'is-filled': favorite }, className), size: size, style: { color: fill || theme.colors.orange } },\n        React.createElement(\"g\", { transform: \"matrix(0.988024,0,0,0.988024,0.0957953,0.717719)\" },\n            React.createElement(\"path\", { d: \"M15.428,5.777C15.428,5.908 15.35,6.051 15.195,6.205L11.954,9.366L12.722,13.83C12.728,13.872 12.731,13.932 12.731,14.009C12.731,14.134 12.7,14.24 12.637,14.326C12.575,14.412 12.484,14.455 12.365,14.455C12.252,14.455 12.133,14.42 12.008,14.348L7.999,12.241L3.99,14.348C3.859,14.42 3.74,14.455 3.633,14.455C3.508,14.455 3.414,14.412 3.352,14.326C3.289,14.24 3.258,14.134 3.258,14.009C3.258,13.973 3.264,13.914 3.276,13.83L4.044,9.366L0.794,6.205C0.645,6.045 0.57,5.902 0.57,5.777C0.57,5.557 0.737,5.42 1.07,5.366L5.552,4.714L7.561,0.652C7.674,0.408 7.82,0.286 7.999,0.286C8.177,0.286 8.323,0.408 8.436,0.652L10.445,4.714L14.927,5.366C15.261,5.42 15.427,5.557 15.427,5.777L15.428,5.777Z\" })))); }));\n}\nexports.default = FavoriteIcon;\n//# sourceMappingURL=FavoriteIcon.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar l10n_1 = require(\"../../helpers/l10n\");\nvar FavoriteIcon_1 = require(\"../icons/FavoriteIcon\");\nvar buttons_1 = require(\"./buttons\");\nvar Tooltip_1 = require(\"./Tooltip\");\nvar FavoriteButton = (function (_super) {\n    __extends(FavoriteButton, _super);\n    function FavoriteButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FavoriteButton.prototype.render = function () {\n        var _a = this.props, className = _a.className, favorite = _a.favorite, qualifier = _a.qualifier, toggleFavorite = _a.toggleFavorite;\n        var tooltip = favorite\n            ? l10n_1.translate('favorite.current', qualifier)\n            : l10n_1.translate('favorite.check', qualifier);\n        var ariaLabel = l10n_1.translate('favorite.action', favorite ? 'remove' : 'add');\n        return (React.createElement(Tooltip_1.default, { overlay: tooltip },\n            React.createElement(buttons_1.ButtonLink, { \"aria-label\": ariaLabel, className: classNames('favorite-link', 'link-no-underline', className), onClick: toggleFavorite },\n                React.createElement(FavoriteIcon_1.default, { favorite: favorite }))));\n    };\n    return FavoriteButton;\n}(React.PureComponent));\nexports.default = FavoriteButton;\n//# sourceMappingURL=FavoriteButton.js.map","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n"],"sourceRoot":""}