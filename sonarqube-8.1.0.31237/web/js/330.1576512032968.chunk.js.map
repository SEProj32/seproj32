{"version":3,"sources":["webpack:///./node_modules/lodash/intersection.js","webpack:///./node_modules/lodash/_baseIntersection.js","webpack:///./node_modules/lodash/_castArrayLikeObject.js","webpack:///./node_modules/lodash/times.js","webpack:///./node_modules/sonar-ui-common/components/icons/ExpandSnippetIcon.js","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/utils.ts","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/SnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/ComponentSourceSnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/CrossComponentSourceViewerWrapper.tsx","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/sonar-ui-common/components/icons/FavoriteIcon.js","webpack:///./node_modules/sonar-ui-common/components/controls/FavoriteButton.js"],"names":["arrayMap","__webpack_require__","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","length","module","exports","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","Math","min","iteratee","comparator","includes","othLength","othIndex","caches","Array","maxLength","Infinity","result","array","undefined","index","seen","outer","value","computed","cache","push","isArrayLikeObject","n","Object","defineProperty","React","Icon_1","default","_a","className","_b","fill","size","createElement","fillRule","d","stroke","strokeWidth","transform","LINES_ABOVE","LINES_BELOW","MERGE_DISTANCE","LINES_BELOW_ISSUE","EXPAND_BY_LINES","collision","startA","endA","startB","getPrimaryLocation","issue","component","textRange","endLine","endOffset","startLine","startOffset","createSnippets","params","locations","addIssueLocation","__spreadArrays","reduce","snippets","loc","firstCollision","startIndex","max","endIndex","locationEnd","issueEndLine","addLinesBellow","filter","snippet","start","end","keep","SCROLL_LEFT_OFFSET","_super","SnippetViewer","props","_this","call","this","doScroll","element","scroll","parent","snippetNodeRef","current","scrolling","leftOffset","rightOffset","getBoundingClientRect","width","scrollToLastExpandedRow","snippetNode","rows","querySelectorAll","lastRow","expandBlock","direction","then","index_js_exposed","__extends","prototype","renderLine","displayDuplications","issuesForLine","issueLocations","line","symbols","verticalBuffer","secondaryIssueLocations","helpers_issueLocations","duplications","duplicationsByLine","duplicationsCount","lineDuplications","isSinkLine","some","i","key","Line","branchLike","displayAllIssues","displayCoverage","displayIssues","displayLocationMarkers","highlighted","highlightedLocationMessage","helpers_lines","highlightedSymbols","issuePopup","issues","last","linePopup","loadDuplications","onIssueChange","onIssuePopupToggle","onIssueSelect","onIssueUnselect","onIssuesClose","handleCloseIssues","onIssuesOpen","handleOpenIssues","onLinePopupToggle","handleLinePopupToggle","onLocationSelect","onSymbolClick","handleSymbolClick","openIssues","openIssuesByLine","previousLine","renderDuplicationPopup","selectedIssue","render","issuesByLine","locationsByLine","lastLine","measures","lines","parseInt","indexing","bottomLine","issueLine","lowestVisibleIssue","apply","keys","map","k","l","inSnippet","s","duplicated","ref","aria-label","l10n","onClick","type","ExpandSnippetIcon_default","a","classnames_default","expand-up","expand-down","ComponentSourceSnippetViewer","arguments","mounted","rootNodeRef","state","additionalLines","loading","snippetIndex","snippetGroup","find","Promise","reject","extension","range","from","to","api_components","ComponentSourceSnippetViewer_assign","branch_like","lineMap","coverageStatus","getCoverageStatus","newLinesMapped","animateBlockExpansion","expandComponent","setState","ComponentSourceSnippetViewer_extends","componentDidMount","createSnippetsFromProps","componentWillUnmount","secondaryLocations","getNodes","root","querySelector","wrapper","table","firstChild","cleanDom","nodes","style","marginTop","maxHeight","setMaxHeight","up","height","startHeight","transition","setTimeout","newSnippets_1","snippetToExpand","Error","toDelete","expandSnippet","deletedSnippets_1","forEach","resolve","renderSnippet","crossComponentSourceViewer_SnippetViewer","fullyShown","snippetLines","componentLines","linesForSnippets","sources","classnames","source-duplications-expanded","SourceViewerHeaderSlim","expandable","onExpand","sourceViewerFile","id","CrossComponentSourceViewerWrapper_CrossComponentSourceViewerWrapper","CrossComponentSourceViewerWrapper","components","fetchDuplications","CrossComponentSourceViewerWrapper_assign","r","duplicatedFiles","files","name","handleIssuePopupToggle","popupName","open","samePopup","handleCloseLinePopup","blocks","helpers_duplications","context","Consumer","openComponent","DuplicationPopup","inRemovedComponent","onClose","CrossComponentSourceViewerWrapper_extends","fetchIssueFlowSnippets","componentWillReceiveProps","newProps","issueKey","onLoaded","DeferredSpinner_default","issuesByComponent","locationsByComponent","currentGroup","currentComponent","groups","__assign","path","project","projectName","q","uuid","groupLocationsByComponent","componentProps","SourceViewerContext","Provider","selectedFlowIndex","file","crossComponentSourceViewer_ComponentSourceSnippetViewer","baseAssignValue","createAggregator","hasOwnProperty","groupBy","classNames","theme_1","favorite","ThemeConsumer","theme","is-filled","color","colors","orange","extendStatics","b","setPrototypeOf","__proto__","p","__","constructor","create","l10n_1","FavoriteIcon_1","buttons_1","Tooltip_1","FavoriteButton","qualifier","toggleFavorite","tooltip","translate","ariaLabel","overlay","ButtonLink","PureComponent"],"mappings":"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","file":"js/330.1576512032968.chunk.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar Icon_1 = require(\"./Icon\");\nfunction ExpandSnippetIcon(_a) {\n    var className = _a.className, _b = _a.fill, fill = _b === void 0 ? 'currentColor' : _b, size = _a.size;\n    return (React.createElement(Icon_1.default, { className: className, size: size },\n        React.createElement(\"g\", { fill: \"none\", fillRule: \"evenodd\" },\n            React.createElement(\"path\", { d: \"M8 1v4H4\", stroke: fill, strokeWidth: \"2\", transform: \"scale(-.83333 -.84583) rotate(45 7.66 -19.75)\" }),\n            React.createElement(\"path\", { d: \"M3 5.78h10v1.7H3z\", fill: fill }),\n            React.createElement(\"path\", { d: \"M7.17 2.4h1.66v5.07H7.17z\", fill: fill }),\n            React.createElement(\"g\", null,\n                React.createElement(\"path\", { d: \"M8.16 1.81V6.1H3.9\", stroke: fill, strokeWidth: \"2\", transform: \"scale(.83333 .84583) rotate(45 -4.2 13.2)\" }),\n                React.createElement(\"path\", { d: \"M13 10.01H3v-1.7h10z\", fill: fill }),\n                React.createElement(\"path\", { d: \"M8.83 13.4H7.17V9.15h1.66z\", fill: fill })))));\n}\nexports.default = ExpandSnippetIcon;\n//# sourceMappingURL=ExpandSnippetIcon.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nconst LINES_ABOVE = 5;\nconst LINES_BELOW = 5;\nexport const MERGE_DISTANCE = 11; // Merge if snippets are eleven lines away (separated by 10 lines) or fewer\nexport const LINES_BELOW_ISSUE = 9;\nexport const EXPAND_BY_LINES = 50;\n\nfunction unknownComponent(key: string): T.SnippetsByComponent {\n  return {\n    component: {\n      key,\n      measures: {},\n      path: '',\n      project: '',\n      projectName: '',\n      q: 'FIL',\n      uuid: ''\n    },\n    sources: []\n  };\n}\n\nfunction collision([startA, endA]: number[], [startB, endB]: number[]) {\n  return !(startA > endB + MERGE_DISTANCE || endA < startB - MERGE_DISTANCE);\n}\n\nfunction getPrimaryLocation(issue: T.Issue): T.FlowLocation {\n  return {\n    component: issue.component,\n    textRange: issue.textRange || {\n      endLine: 0,\n      endOffset: 0,\n      startLine: 0,\n      startOffset: 0\n    }\n  };\n}\n\nfunction addLinesBellow(params: { issue: T.Issue; locationEnd: number }) {\n  const { issue, locationEnd } = params;\n  const issueEndLine = (issue.textRange && issue.textRange.endLine) || 0;\n\n  if (!issueEndLine || issueEndLine === locationEnd) {\n    return locationEnd + LINES_BELOW_ISSUE;\n  }\n\n  return locationEnd + LINES_BELOW;\n}\n\nexport function createSnippets(params: {\n  locations: T.FlowLocation[];\n  issue: T.Issue;\n  addIssueLocation: boolean;\n}): T.Snippet[] {\n  const { locations, issue, addIssueLocation } = params;\n  // For each location's range (2 above and 2 below), and then compare with other ranges\n  // to merge snippets that collide.\n  return (addIssueLocation ? [getPrimaryLocation(issue), ...locations] : locations).reduce(\n    (snippets: T.Snippet[], loc, index) => {\n      const startIndex = Math.max(1, loc.textRange.startLine - LINES_ABOVE);\n      const endIndex = addLinesBellow({ issue, locationEnd: loc.textRange.endLine });\n\n      let firstCollision: { start: number; end: number } | undefined;\n\n      // Remove ranges that collide into the first collision\n      snippets = snippets.filter(snippet => {\n        if (collision([snippet.start, snippet.end], [startIndex, endIndex])) {\n          let keep = false;\n          // Check if we've already collided\n          if (!firstCollision) {\n            firstCollision = snippet;\n            keep = true;\n          }\n          // Merge with first collision:\n          firstCollision.start = Math.min(startIndex, snippet.start, firstCollision.start);\n          firstCollision.end = Math.max(endIndex, snippet.end, firstCollision.end);\n\n          // remove the range if it was not the first collision\n          return keep;\n        }\n        return true;\n      });\n\n      if (firstCollision === undefined) {\n        snippets.push({\n          start: startIndex,\n          end: endIndex,\n          index\n        });\n      }\n\n      return snippets;\n    },\n    []\n  );\n}\n\nexport function linesForSnippets(snippets: T.Snippet[], componentLines: T.LineMap) {\n  return snippets\n    .map(snippet => {\n      const lines = [];\n      for (let i = snippet.start; i <= snippet.end; i++) {\n        if (componentLines[i]) {\n          lines.push(componentLines[i]);\n        }\n      }\n      return lines;\n    })\n    .filter(snippet => snippet.length > 0);\n}\n\nexport function groupLocationsByComponent(\n  locations: T.FlowLocation[],\n  components: { [key: string]: T.SnippetsByComponent }\n) {\n  let currentComponent = '';\n  let currentGroup: T.SnippetGroup;\n  const groups: T.SnippetGroup[] = [];\n\n  locations.forEach((loc, index) => {\n    if (loc.component !== currentComponent) {\n      currentGroup = {\n        ...(components[loc.component] || unknownComponent(loc.component)),\n        locations: []\n      };\n      groups.push(currentGroup);\n      currentComponent = loc.component;\n    }\n    loc.index = index;\n    currentGroup.locations.push(loc);\n  });\n\n  return groups;\n}\n\nexport function expandSnippet({\n  direction,\n  snippetIndex,\n  snippets\n}: {\n  direction: T.ExpandDirection;\n  snippetIndex: number;\n  snippets: T.Snippet[];\n}) {\n  const snippetToExpand = snippets.find(s => s.index === snippetIndex);\n  if (!snippetToExpand) {\n    throw new Error(`Snippet ${snippetIndex} not found`);\n  }\n\n  snippetToExpand.start = Math.max(\n    0,\n    snippetToExpand.start - (direction === 'up' ? EXPAND_BY_LINES : 0)\n  );\n  snippetToExpand.end += direction === 'down' ? EXPAND_BY_LINES : 0;\n\n  return snippets.map(snippet => {\n    if (snippet.index === snippetIndex) {\n      return snippetToExpand;\n    }\n    if (collision([snippet.start, snippet.end], [snippetToExpand.start, snippetToExpand.end])) {\n      // Merge with expanded snippet\n      snippetToExpand.start = Math.min(snippet.start, snippetToExpand.start);\n      snippetToExpand.end = Math.max(snippet.end, snippetToExpand.end);\n      snippet.toDelete = true;\n    }\n    return snippet;\n  });\n}\n\nexport function inSnippet(line: number, snippet: T.SourceLine[]) {\n  return line >= snippet[0].line && line <= snippet[snippet.length - 1].line;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport ExpandSnippetIcon from 'sonar-ui-common/components/icons/ExpandSnippetIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollHorizontally } from 'sonar-ui-common/helpers/scrolling';\nimport Line from '../../../components/SourceViewer/components/Line';\nimport { symbolsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport { getSecondaryIssueLocationsForLine } from '../../../components/SourceViewer/helpers/issueLocations';\nimport {\n  optimizeHighlightedSymbols,\n  optimizeLocationMessage,\n  optimizeSelectedIssue\n} from '../../../components/SourceViewer/helpers/lines';\nimport { BranchLike } from '../../../types/branch-like';\nimport { inSnippet, LINES_BELOW_ISSUE } from './utils';\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  component: T.SourceViewerFile;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  expandBlock: (snippetIndex: number, direction: T.ExpandDirection) => Promise<void>;\n  handleCloseIssues: (line: T.SourceLine) => void;\n  handleLinePopupToggle: (line: T.SourceLine) => void;\n  handleOpenIssues: (line: T.SourceLine) => void;\n  handleSymbolClick: (symbols: string[]) => void;\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  highlightedSymbols: string[];\n  index: number;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLocationSelect: (index: number) => void;\n  openIssuesByLine: T.Dict<boolean>;\n  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;\n  scroll?: (element: HTMLElement, offset?: number) => void;\n  snippet: T.SourceLine[];\n}\n\nconst SCROLL_LEFT_OFFSET = 32;\n\nexport default class SnippetViewer extends React.PureComponent<Props> {\n  snippetNodeRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: Props) {\n    super(props);\n    this.snippetNodeRef = React.createRef();\n  }\n\n  doScroll = (element: HTMLElement) => {\n    if (this.props.scroll) {\n      this.props.scroll(element);\n    }\n    const parent = this.snippetNodeRef.current as Element;\n\n    if (parent) {\n      scrollHorizontally(element, {\n        leftOffset: SCROLL_LEFT_OFFSET,\n        rightOffset: parent.getBoundingClientRect().width - SCROLL_LEFT_OFFSET,\n        parent\n      });\n    }\n  };\n\n  scrollToLastExpandedRow = () => {\n    if (this.props.scroll) {\n      const snippetNode = this.snippetNodeRef.current as Element;\n      if (!snippetNode) {\n        return;\n      }\n      const rows = snippetNode.querySelectorAll('tr');\n      const lastRow = rows[rows.length - 1];\n      this.props.scroll(lastRow, 100);\n    }\n  };\n\n  expandBlock = (direction: T.ExpandDirection) => () =>\n    this.props.expandBlock(this.props.index, direction).then(() => {\n      if (direction === 'down') {\n        this.scrollToLastExpandedRow();\n      }\n    });\n\n  renderLine({\n    displayDuplications,\n    index,\n    issuesForLine,\n    issueLocations,\n    line,\n    snippet,\n    symbols,\n    verticalBuffer\n  }: {\n    displayDuplications: boolean;\n    index: number;\n    issuesForLine: T.Issue[];\n    issueLocations: T.LinearIssueLocation[];\n    line: T.SourceLine;\n    snippet: T.SourceLine[];\n    symbols: string[];\n    verticalBuffer: number;\n  }) {\n    const secondaryIssueLocations = getSecondaryIssueLocationsForLine(line, this.props.locations);\n\n    const { duplications, duplicationsByLine } = this.props;\n    const duplicationsCount = duplications ? duplications.length : 0;\n    const lineDuplications =\n      (duplicationsCount && duplicationsByLine && duplicationsByLine[line.line]) || [];\n\n    const isSinkLine = issuesForLine.some(i => i.key === this.props.issue.key);\n\n    return (\n      <Line\n        branchLike={this.props.branchLike}\n        displayAllIssues={false}\n        displayCoverage={true}\n        displayDuplications={displayDuplications}\n        displayIssues={!isSinkLine || issuesForLine.length > 1}\n        displayLocationMarkers={true}\n        duplications={lineDuplications}\n        duplicationsCount={duplicationsCount}\n        highlighted={false}\n        highlightedLocationMessage={optimizeLocationMessage(\n          this.props.highlightedLocationMessage,\n          secondaryIssueLocations\n        )}\n        highlightedSymbols={optimizeHighlightedSymbols(symbols, this.props.highlightedSymbols)}\n        issueLocations={issueLocations}\n        issuePopup={this.props.issuePopup}\n        issues={issuesForLine}\n        key={line.line}\n        last={false}\n        line={line}\n        linePopup={this.props.linePopup}\n        loadDuplications={this.props.loadDuplications}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onIssueSelect={() => {}}\n        onIssueUnselect={() => {}}\n        onIssuesClose={this.props.handleCloseIssues}\n        onIssuesOpen={this.props.handleOpenIssues}\n        onLinePopupToggle={this.props.handleLinePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        onSymbolClick={this.props.handleSymbolClick}\n        openIssues={this.props.openIssuesByLine[line.line]}\n        previousLine={index > 0 ? snippet[index - 1] : undefined}\n        renderDuplicationPopup={this.props.renderDuplicationPopup}\n        scroll={this.doScroll}\n        secondaryIssueLocations={secondaryIssueLocations}\n        selectedIssue={optimizeSelectedIssue(this.props.issue.key, issuesForLine)}\n        verticalBuffer={verticalBuffer}\n      />\n    );\n  }\n\n  render() {\n    const {\n      component,\n      issue,\n      issuesByLine = {},\n      last,\n      locationsByLine,\n      openIssuesByLine,\n      snippet\n    } = this.props;\n    const lastLine =\n      component.measures && component.measures.lines && parseInt(component.measures.lines, 10);\n\n    const symbols = symbolsByLine(snippet);\n\n    const bottomLine = snippet[snippet.length - 1].line;\n    const issueLine = issue.textRange ? issue.textRange.endLine : issue.line;\n    const lowestVisibleIssue = Math.max(\n      ...Object.keys(issuesByLine)\n        .map(k => parseInt(k, 10))\n        .filter(l => inSnippet(l, snippet) && (l === issueLine || openIssuesByLine[l]))\n    );\n    const verticalBuffer = last\n      ? Math.max(0, LINES_BELOW_ISSUE - (bottomLine - lowestVisibleIssue))\n      : 0;\n\n    const displayDuplications = snippet.some(s => !!s.duplicated);\n\n    return (\n      <div className=\"source-viewer-code snippet\" ref={this.snippetNodeRef}>\n        <div>\n          {snippet[0].line > 1 && (\n            <div className=\"expand-block expand-block-above\">\n              <button\n                aria-label={translate('source_viewer.expand_above')}\n                onClick={this.expandBlock('up')}\n                type=\"button\">\n                <ExpandSnippetIcon />\n              </button>\n            </div>\n          )}\n          <table\n            className={classNames('source-table', {\n              'expand-up': snippet[0].line > 1,\n              'expand-down': !lastLine || snippet[snippet.length - 1].line < lastLine\n            })}>\n            <tbody>\n              {snippet.map((line, index) =>\n                this.renderLine({\n                  displayDuplications,\n                  index,\n                  issuesForLine: issuesByLine[line.line] || [],\n                  issueLocations: locationsByLine[line.line] || [],\n                  line,\n                  snippet,\n                  symbols: symbols[line.line],\n                  verticalBuffer: index === snippet.length - 1 ? verticalBuffer : 0\n                })\n              )}\n            </tbody>\n          </table>\n          {(!lastLine || snippet[snippet.length - 1].line < lastLine) && (\n            <div className=\"expand-block expand-block-below\">\n              <button\n                aria-label={translate('source_viewer.expand_below')}\n                onClick={this.expandBlock('down')}\n                type=\"button\">\n                <ExpandSnippetIcon />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { getSources } from '../../../api/components';\nimport getCoverageStatus from '../../../components/SourceViewer/helpers/getCoverageStatus';\nimport { locationsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport SourceViewerHeaderSlim from '../../../components/SourceViewer/SourceViewerHeaderSlim';\nimport { getBranchLikeQuery } from '../../../helpers/branch-like';\nimport { BranchLike } from '../../../types/branch-like';\nimport SnippetViewer from './SnippetViewer';\nimport {\n  createSnippets,\n  expandSnippet,\n  EXPAND_BY_LINES,\n  linesForSnippets,\n  MERGE_DISTANCE\n} from './utils';\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (component: string, line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLinePopupToggle: (linePopup: T.LinePopup & { component: string }) => void;\n  onLocationSelect: (index: number) => void;\n  renderDuplicationPopup: (\n    component: T.SourceViewerFile,\n    index: number,\n    line: number\n  ) => React.ReactNode;\n  scroll?: (element: HTMLElement, offset: number) => void;\n  snippetGroup: T.SnippetGroup;\n}\n\ninterface State {\n  additionalLines: { [line: number]: T.SourceLine };\n  highlightedSymbols: string[];\n  loading: boolean;\n  openIssuesByLine: T.Dict<boolean>;\n  snippets: T.Snippet[];\n}\n\nexport default class ComponentSourceSnippetViewer extends React.PureComponent<Props, State> {\n  mounted = false;\n  rootNodeRef = React.createRef<HTMLDivElement>();\n  state: State = {\n    additionalLines: {},\n    highlightedSymbols: [],\n    loading: false,\n    openIssuesByLine: {},\n    snippets: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.createSnippetsFromProps();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  createSnippetsFromProps() {\n    const snippets = createSnippets({\n      locations: this.props.snippetGroup.locations,\n      issue: this.props.issue,\n      addIssueLocation: this.props.issue.secondaryLocations.length > 0\n    });\n\n    this.setState({ snippets });\n  }\n\n  getNodes(index: number): { wrapper: HTMLElement; table: HTMLElement } | undefined {\n    const root = this.rootNodeRef.current;\n    if (!root) {\n      return undefined;\n    }\n    const element = root.querySelector(`#snippet-wrapper-${index}`);\n    if (!element) {\n      return undefined;\n    }\n    const wrapper = element.querySelector<HTMLElement>('.snippet');\n    if (!wrapper) {\n      return undefined;\n    }\n    const table = wrapper.firstChild as HTMLElement;\n    if (!table) {\n      return undefined;\n    }\n\n    return { wrapper, table };\n  }\n\n  /*\n   * Clean after animation\n   */\n  cleanDom(index: number) {\n    const nodes = this.getNodes(index);\n\n    if (!nodes) {\n      return;\n    }\n\n    const { wrapper, table } = nodes;\n\n    table.style.marginTop = '';\n    wrapper.style.maxHeight = '';\n  }\n\n  setMaxHeight(index: number, value?: number, up = false) {\n    const nodes = this.getNodes(index);\n\n    if (!nodes) {\n      return;\n    }\n\n    const { wrapper, table } = nodes;\n\n    const maxHeight = value !== undefined ? value : table.getBoundingClientRect().height;\n\n    if (up) {\n      const startHeight = wrapper.getBoundingClientRect().height;\n      table.style.transition = 'none';\n      table.style.marginTop = `${startHeight - maxHeight}px`;\n\n      // animate!\n      setTimeout(() => {\n        table.style.transition = '';\n        table.style.marginTop = '0px';\n        wrapper.style.maxHeight = `${maxHeight + 20}px`;\n      }, 0);\n    } else {\n      wrapper.style.maxHeight = `${maxHeight + 20}px`;\n    }\n  }\n\n  expandBlock = (snippetIndex: number, direction: T.ExpandDirection): Promise<void> => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n    const { snippets } = this.state;\n    const snippet = snippets.find(s => s.index === snippetIndex);\n    if (!snippet) {\n      return Promise.reject();\n    }\n    // Extend by EXPAND_BY_LINES and add buffer for merging snippets\n    const extension = EXPAND_BY_LINES + MERGE_DISTANCE - 1;\n    const range =\n      direction === 'up'\n        ? {\n            from: Math.max(1, snippet.start - extension),\n            to: snippet.start - 1\n          }\n        : {\n            from: snippet.end + 1,\n            to: snippet.end + extension\n          };\n    return getSources({\n      key,\n      ...range,\n      ...getBranchLikeQuery(branchLike)\n    })\n      .then(lines =>\n        lines.reduce((lineMap: T.Dict<T.SourceLine>, line) => {\n          line.coverageStatus = getCoverageStatus(line);\n          lineMap[line.line] = line;\n          return lineMap;\n        }, {})\n      )\n      .then(newLinesMapped => this.animateBlockExpansion(snippetIndex, direction, newLinesMapped));\n  };\n\n  animateBlockExpansion(\n    snippetIndex: number,\n    direction: T.ExpandDirection,\n    newLinesMapped: T.Dict<T.SourceLine>\n  ): Promise<void> {\n    if (this.mounted) {\n      const { snippets } = this.state;\n\n      const newSnippets = expandSnippet({\n        direction,\n        snippetIndex,\n        snippets\n      });\n\n      const deletedSnippets = newSnippets.filter(s => s.toDelete);\n\n      // set max-height to current height for CSS transitions\n      deletedSnippets.forEach(s => this.setMaxHeight(s.index));\n      this.setMaxHeight(snippetIndex);\n\n      return new Promise(resolve => {\n        this.setState(\n          ({ additionalLines, snippets }) => {\n            const combinedLines = { ...additionalLines, ...newLinesMapped };\n            return {\n              additionalLines: combinedLines,\n              snippets\n            };\n          },\n          () => {\n            // Set max-height 0 to trigger CSS transitions\n            deletedSnippets.forEach(s => {\n              this.setMaxHeight(s.index, 0);\n            });\n            this.setMaxHeight(snippetIndex, undefined, direction === 'up');\n\n            // Wait for transition to finish before updating dom\n            setTimeout(() => {\n              this.setState({ snippets: newSnippets.filter(s => !s.toDelete) }, resolve);\n              this.cleanDom(snippetIndex);\n            }, 200);\n          }\n        );\n      });\n    }\n    return Promise.resolve();\n  }\n\n  expandComponent = () => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n\n    this.setState({ loading: true });\n\n    getSources({ key, ...getBranchLikeQuery(branchLike) }).then(\n      lines => {\n        if (this.mounted) {\n          this.setState(({ additionalLines }) => {\n            const combinedLines = { ...additionalLines, ...lines };\n            return {\n              additionalLines: combinedLines,\n              loading: false,\n              snippets: [{ start: 0, end: lines[lines.length - 1].line, index: -1 }]\n            };\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleLinePopupToggle = (linePopup: T.LinePopup) => {\n    this.props.onLinePopupToggle({\n      ...linePopup,\n      component: this.props.snippetGroup.component.key\n    });\n  };\n\n  handleOpenIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: true }\n    }));\n  };\n\n  handleCloseIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: false }\n    }));\n  };\n\n  handleSymbolClick = (highlightedSymbols: string[]) => {\n    this.setState({ highlightedSymbols });\n  };\n\n  loadDuplications = (line: T.SourceLine) => {\n    this.props.loadDuplications(this.props.snippetGroup.component.key, line);\n  };\n\n  renderDuplicationPopup = (index: number, line: number) => {\n    return this.props.renderDuplicationPopup(this.props.snippetGroup.component, index, line);\n  };\n\n  renderSnippet({\n    index,\n    issuesByLine,\n    last,\n    locationsByLine,\n    snippet\n  }: {\n    index: number;\n    issuesByLine: T.IssuesByLine;\n    last: boolean;\n    locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n    snippet: T.SourceLine[];\n  }) {\n    return (\n      <SnippetViewer\n        branchLike={this.props.branchLike}\n        component={this.props.snippetGroup.component}\n        expandBlock={this.expandBlock}\n        handleCloseIssues={this.handleCloseIssues}\n        handleLinePopupToggle={this.handleLinePopupToggle}\n        handleOpenIssues={this.handleOpenIssues}\n        handleSymbolClick={this.handleSymbolClick}\n        highlightedLocationMessage={this.props.highlightedLocationMessage}\n        highlightedSymbols={this.state.highlightedSymbols}\n        index={index}\n        issue={this.props.issue}\n        issuePopup={this.props.issuePopup}\n        issuesByLine={issuesByLine}\n        last={last}\n        linePopup={this.props.linePopup}\n        loadDuplications={this.loadDuplications}\n        locations={this.props.locations}\n        locationsByLine={locationsByLine}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        openIssuesByLine={this.state.openIssuesByLine}\n        renderDuplicationPopup={this.renderDuplicationPopup}\n        scroll={this.props.scroll}\n        snippet={snippet}\n      />\n    );\n  }\n\n  render() {\n    const { branchLike, duplications, issue, issuesByLine, last, snippetGroup } = this.props;\n    const { additionalLines, loading, snippets } = this.state;\n    const locations = locationsByLine([issue]);\n\n    const fullyShown =\n      snippets.length === 1 &&\n      snippetGroup.component.measures &&\n      snippets[0].end - snippets[0].start ===\n        parseInt(snippetGroup.component.measures.lines || '', 10);\n\n    const snippetLines = linesForSnippets(snippets, {\n      ...snippetGroup.sources,\n      ...additionalLines\n    });\n\n    return (\n      <div\n        className={classNames('component-source-container', {\n          'source-duplications-expanded': duplications && duplications.length > 0\n        })}\n        ref={this.rootNodeRef}>\n        <SourceViewerHeaderSlim\n          branchLike={branchLike}\n          expandable={!fullyShown}\n          loading={loading}\n          onExpand={this.expandComponent}\n          sourceViewerFile={snippetGroup.component}\n        />\n        {snippetLines.map((snippet, index) => (\n          <div id={`snippet-wrapper-${snippets[index].index}`} key={snippets[index].index}>\n            {this.renderSnippet({\n              snippet,\n              index: snippets[index].index,\n              issuesByLine: last ? issuesByLine : {},\n              locationsByLine: last && index === snippets.length - 1 ? locations : {},\n              last: last && index === snippets.length - 1\n            })}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { getDuplications } from '../../../api/components';\nimport { getIssueFlowSnippets } from '../../../api/issues';\nimport DuplicationPopup from '../../../components/SourceViewer/components/DuplicationPopup';\nimport {\n  filterDuplicationBlocksByLine,\n  getDuplicationBlocksForIndex,\n  isDuplicationBlockInRemovedComponent\n} from '../../../components/SourceViewer/helpers/duplications';\nimport {\n  duplicationsByLine,\n  issuesByComponentAndLine\n} from '../../../components/SourceViewer/helpers/indexing';\nimport { SourceViewerContext } from '../../../components/SourceViewer/SourceViewerContext';\nimport { WorkspaceContext } from '../../../components/workspace/context';\nimport { getBranchLikeQuery } from '../../../helpers/branch-like';\nimport { BranchLike } from '../../../types/branch-like';\nimport ComponentSourceSnippetViewer from './ComponentSourceSnippetViewer';\nimport { groupLocationsByComponent } from './utils';\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  highlightedLocationMessage?: { index: number; text: string | undefined };\n  issue: T.Issue;\n  issues: T.Issue[];\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onLoaded?: () => void;\n  onLocationSelect: (index: number) => void;\n  scroll?: (element: HTMLElement) => void;\n  selectedFlowIndex: number | undefined;\n}\n\ninterface State {\n  components: T.Dict<T.SnippetsByComponent>;\n  duplicatedFiles?: T.Dict<T.DuplicatedFile>;\n  duplications?: T.Duplication[];\n  duplicationsByLine: { [line: number]: number[] };\n  issuePopup?: { issue: string; name: string };\n  linePopup?: T.LinePopup & { component: string };\n  loading: boolean;\n}\n\nexport default class CrossComponentSourceViewerWrapper extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    components: {},\n    duplicationsByLine: {},\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIssueFlowSnippets(this.props.issue.key);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (newProps.issue.key !== this.props.issue.key) {\n      this.fetchIssueFlowSnippets(newProps.issue.key);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDuplications = (component: string, line: T.SourceLine) => {\n    getDuplications({\n      key: component,\n      ...getBranchLikeQuery(this.props.branchLike)\n    }).then(\n      r => {\n        if (this.mounted) {\n          this.setState(state => ({\n            duplicatedFiles: r.files,\n            duplications: r.duplications,\n            duplicationsByLine: duplicationsByLine(r.duplications),\n            linePopup:\n              r.duplications.length === 1\n                ? { component, index: 0, line: line.line, name: 'duplications' }\n                : state.linePopup\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchIssueFlowSnippets(issueKey: string) {\n    this.setState({ loading: true });\n    getIssueFlowSnippets(issueKey).then(\n      components => {\n        if (this.mounted) {\n          this.setState({\n            components,\n            issuePopup: undefined,\n            linePopup: undefined,\n            loading: false\n          });\n          if (this.props.onLoaded) {\n            this.props.onLoaded();\n          }\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleIssuePopupToggle = (issue: string, popupName: string, open?: boolean) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.issuePopup && state.issuePopup.name === popupName && state.issuePopup.issue === issue;\n      if (open !== false && !samePopup) {\n        return { issuePopup: { issue, name: popupName } };\n      } else if (open !== true && samePopup) {\n        return { issuePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleLinePopupToggle = ({\n    component,\n    index,\n    line,\n    name,\n    open\n  }: T.LinePopup & { component: string }) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.linePopup !== undefined &&\n        state.linePopup.line === line &&\n        state.linePopup.name === name &&\n        state.linePopup.component === component &&\n        state.linePopup.index === index;\n      if (open !== false && !samePopup) {\n        return { linePopup: { component, index, line, name } };\n      } else if (open !== true && samePopup) {\n        return { linePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleCloseLinePopup = () => {\n    this.setState({ linePopup: undefined });\n  };\n\n  renderDuplicationPopup = (component: T.SourceViewerFile, index: number, line: number) => {\n    const { duplicatedFiles, duplications } = this.state;\n\n    if (!component || !duplicatedFiles) {\n      return null;\n    }\n\n    const blocks = getDuplicationBlocksForIndex(duplications, index);\n\n    return (\n      <WorkspaceContext.Consumer>\n        {({ openComponent }) => (\n          <DuplicationPopup\n            blocks={filterDuplicationBlocksByLine(blocks, line)}\n            branchLike={this.props.branchLike}\n            duplicatedFiles={duplicatedFiles}\n            inRemovedComponent={isDuplicationBlockInRemovedComponent(blocks)}\n            onClose={this.handleCloseLinePopup}\n            openComponent={openComponent}\n            sourceViewerFile={component}\n          />\n        )}\n      </WorkspaceContext.Consumer>\n    );\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    if (loading) {\n      return (\n        <div>\n          <DeferredSpinner />\n        </div>\n      );\n    }\n\n    const { components, duplications, duplicationsByLine, linePopup } = this.state;\n    const issuesByComponent = issuesByComponentAndLine(this.props.issues);\n    const locationsByComponent = groupLocationsByComponent(this.props.locations, components);\n\n    return (\n      <div>\n        {locationsByComponent.map((snippetGroup, i) => {\n          let componentProps = {};\n          if (linePopup && snippetGroup.component.key === linePopup.component) {\n            componentProps = {\n              duplications,\n              duplicationsByLine,\n              linePopup: { index: linePopup.index, line: linePopup.line, name: linePopup.name }\n            };\n          }\n          return (\n            <SourceViewerContext.Provider\n              key={`${this.props.issue.key}-${this.props.selectedFlowIndex || 0}-${i}`}\n              value={{ branchLike: this.props.branchLike, file: snippetGroup.component }}>\n              <ComponentSourceSnippetViewer\n                branchLike={this.props.branchLike}\n                highlightedLocationMessage={this.props.highlightedLocationMessage}\n                issue={this.props.issue}\n                issuePopup={this.state.issuePopup}\n                issuesByLine={issuesByComponent[snippetGroup.component.key] || {}}\n                last={i === locationsByComponent.length - 1}\n                loadDuplications={this.fetchDuplications}\n                locations={snippetGroup.locations || []}\n                onIssueChange={this.props.onIssueChange}\n                onIssuePopupToggle={this.handleIssuePopupToggle}\n                onLinePopupToggle={this.handleLinePopupToggle}\n                onLocationSelect={this.props.onLocationSelect}\n                renderDuplicationPopup={this.renderDuplicationPopup}\n                scroll={this.props.scroll}\n                snippetGroup={snippetGroup}\n                {...componentProps}\n              />\n            </SourceViewerContext.Provider>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar theme_1 = require(\"../theme\");\nvar Icon_1 = require(\"./Icon\");\nfunction FavoriteIcon(_a) {\n    var className = _a.className, favorite = _a.favorite, fill = _a.fill, size = _a.size;\n    return (React.createElement(theme_1.ThemeConsumer, null, function (theme) { return (React.createElement(Icon_1.default, { className: classNames('icon-outline', { 'is-filled': favorite }, className), size: size, style: { color: fill || theme.colors.orange } },\n        React.createElement(\"g\", { transform: \"matrix(0.988024,0,0,0.988024,0.0957953,0.717719)\" },\n            React.createElement(\"path\", { d: \"M15.428,5.777C15.428,5.908 15.35,6.051 15.195,6.205L11.954,9.366L12.722,13.83C12.728,13.872 12.731,13.932 12.731,14.009C12.731,14.134 12.7,14.24 12.637,14.326C12.575,14.412 12.484,14.455 12.365,14.455C12.252,14.455 12.133,14.42 12.008,14.348L7.999,12.241L3.99,14.348C3.859,14.42 3.74,14.455 3.633,14.455C3.508,14.455 3.414,14.412 3.352,14.326C3.289,14.24 3.258,14.134 3.258,14.009C3.258,13.973 3.264,13.914 3.276,13.83L4.044,9.366L0.794,6.205C0.645,6.045 0.57,5.902 0.57,5.777C0.57,5.557 0.737,5.42 1.07,5.366L5.552,4.714L7.561,0.652C7.674,0.408 7.82,0.286 7.999,0.286C8.177,0.286 8.323,0.408 8.436,0.652L10.445,4.714L14.927,5.366C15.261,5.42 15.427,5.557 15.427,5.777L15.428,5.777Z\" })))); }));\n}\nexports.default = FavoriteIcon;\n//# sourceMappingURL=FavoriteIcon.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar l10n_1 = require(\"../../helpers/l10n\");\nvar FavoriteIcon_1 = require(\"../icons/FavoriteIcon\");\nvar buttons_1 = require(\"./buttons\");\nvar Tooltip_1 = require(\"./Tooltip\");\nvar FavoriteButton = (function (_super) {\n    __extends(FavoriteButton, _super);\n    function FavoriteButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FavoriteButton.prototype.render = function () {\n        var _a = this.props, className = _a.className, favorite = _a.favorite, qualifier = _a.qualifier, toggleFavorite = _a.toggleFavorite;\n        var tooltip = favorite\n            ? l10n_1.translate('favorite.current', qualifier)\n            : l10n_1.translate('favorite.check', qualifier);\n        var ariaLabel = l10n_1.translate('favorite.action', favorite ? 'remove' : 'add');\n        return (React.createElement(Tooltip_1.default, { overlay: tooltip },\n            React.createElement(buttons_1.ButtonLink, { \"aria-label\": ariaLabel, className: classNames('favorite-link', 'link-no-underline', className), onClick: toggleFavorite },\n                React.createElement(FavoriteIcon_1.default, { favorite: favorite }))));\n    };\n    return FavoriteButton;\n}(React.PureComponent));\nexports.default = FavoriteButton;\n//# sourceMappingURL=FavoriteButton.js.map"],"sourceRoot":""}