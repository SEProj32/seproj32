{"version":3,"sources":["webpack:///./node_modules/sonar-ui-common/components/charts/DonutChart.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-shape/src/index.js"],"names":["Object","defineProperty","exports","value","d3_shape_1","__webpack_require__","React","Sector","props","d","arc","outerRadius","radius","innerRadius","thickness","data","createElement","style","fill","default","height","_a","padding","width","availableWidth","availableHeight","size","Math","min","floor","pie","sort","undefined","padAngle","sectors","map","i","key","className","transform","pi","PI","tau","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","src_path","constant","atan2","max","math_epsilon","math_pi","halfPi","math_tau","asin","arcInnerRadius","arcOuterRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x10","y10","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","src_arc","cornerRadius","padRadius","context","buffer","r0","apply","arguments","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","x3","y3","x32","y32","t","intersect","ax","ay","bx","by","kc","lc","centroid","a","length","Linear","_context","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","point","linear","point_x","p","point_y","src_line","defined","curve","output","line","n","defined0","src_area","area","j","k","x0z","Array","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending","b","identity","src_pie","sortValues","v","sum","index","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","c","angle","src_lineRadial","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","slice","linkSource","source","linkTarget","target","link_link","link","argv","call","s","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","circle","draw","cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","type","symbol","noop","that","Basis","basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","basisClosed","BasisOpen","basisOpen","Bundle","beta","_basis","_beta","_x","_y","push","curve_bundle","custom","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","m","CatmullRom","alpha","_alpha","x23","y23","pow","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","create","px","py","i0","i1","natural","Step","_t","step","stepBefore","stepAfter","none","series","order","isNaN","order_none","o","stackValue","src_stack","keys","offset","stack","oz","kz","sz","sij","ki","si","expand","diverging","yp","yn","silhouette","wiggle","s2","sij0","s3","sk","ascending","sums","ascending_sum","order_descending","reverse","insideOut","top","bottom","tops","bottoms","concat","__webpack_exports__"],"mappings":"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","file":"js/369.1576512032968.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar d3_shape_1 = require(\"d3-shape\");\nvar React = require(\"react\");\nfunction DonutChart(props) {\n    var height = props.height, _a = props.padding, padding = _a === void 0 ? [0, 0, 0, 0] : _a, width = props.width;\n    var availableWidth = width - padding[1] - padding[3];\n    var availableHeight = height - padding[0] - padding[2];\n    var size = Math.min(availableWidth, availableHeight);\n    var radius = Math.floor(size / 2);\n    var pie = d3_shape_1.pie()\n        .sort(null)\n        .value(function (d) { return d.value; });\n    if (props.padAngle !== undefined) {\n        pie.padAngle(props.padAngle);\n    }\n    var sectors = pie(props.data).map(function (d, i) {\n        return (React.createElement(Sector, { data: d, fill: props.data[i].fill, key: i, radius: radius, thickness: props.thickness }));\n    });\n    return (React.createElement(\"svg\", { className: \"donut-chart\", height: height, width: width },\n        React.createElement(\"g\", { transform: \"translate(\" + padding[3] + \", \" + padding[0] + \")\" },\n            React.createElement(\"g\", { transform: \"translate(\" + radius + \", \" + radius + \")\" }, sectors))));\n}\nexports.default = DonutChart;\nfunction Sector(props) {\n    var arc = d3_shape_1.arc()\n        .outerRadius(props.radius)\n        .innerRadius(props.radius - props.thickness);\n    var d = arc(props.data);\n    return React.createElement(\"path\", { d: d, style: { fill: props.fill } });\n}\n//# sourceMappingURL=DonutChart.js.map","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export {default as arc} from \"./arc\";\nexport {default as area} from \"./area\";\nexport {default as line} from \"./line\";\nexport {default as pie} from \"./pie\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial\";\nexport {linkHorizontal, linkVertical, linkRadial} from \"./link/index\";\n\nexport {default as symbol, symbols} from \"./symbol\";\nexport {default as symbolCircle} from \"./symbol/circle\";\nexport {default as symbolCross} from \"./symbol/cross\";\nexport {default as symbolDiamond} from \"./symbol/diamond\";\nexport {default as symbolSquare} from \"./symbol/square\";\nexport {default as symbolStar} from \"./symbol/star\";\nexport {default as symbolTriangle} from \"./symbol/triangle\";\nexport {default as symbolWye} from \"./symbol/wye\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen\";\nexport {default as curveBasis} from \"./curve/basis\";\nexport {default as curveBundle} from \"./curve/bundle\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen\";\nexport {default as curveCardinal} from \"./curve/cardinal\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed\";\nexport {default as curveLinear} from \"./curve/linear\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone\";\nexport {default as curveNatural} from \"./curve/natural\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step\";\n\nexport {default as stack} from \"./stack\";\nexport {default as stackOffsetExpand} from \"./offset/expand\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging\";\nexport {default as stackOffsetNone} from \"./offset/none\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle\";\nexport {default as stackOrderAscending} from \"./order/ascending\";\nexport {default as stackOrderDescending} from \"./order/descending\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut\";\nexport {default as stackOrderNone} from \"./order/none\";\nexport {default as stackOrderReverse} from \"./order/reverse\";\n"],"sourceRoot":""}