{"version":3,"sources":["webpack:///./src/main/js/apps/settings/side-tabs.css?20b1","webpack:///./src/main/js/apps/settings/side-tabs.css","webpack:///./src/main/js/apps/settings/styles.css?600d","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/api/almSettings.ts","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AlmPRDecorationFormModalRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AlmPRDecorationFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AlmPRDecorationTable.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AlmDefinitionFormField.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AzureFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/TabHeader.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AzureTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AzureTab.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/BitbucketFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/BitbucketTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/BitbucketTab.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GithubFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GithubTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GithubTab.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GitlabFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GitlabTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GitlabTab.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/PRDecorationTabs.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/PullRequestDecoration.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","handleError","key","dispatch","response","Object","settingsPage","request","then","message","Promise","reject","LANGUAGES_CATEGORY","DefinitionActions_DefinitionActions","index_js_exposed","[object Object]","this","state","reseting","handleClose","setState","handleReset","handleSubmit","props","onReset","header","l10n","Modal_default","a","contentLabel","onRequestClose","className","onSubmit","buttons","onClick","_this$props","setting","isDefault","changedValue","hasValueChanged","hasValueToResetTo","utils","definition","hasBeenChangedToEmptyValue","showReset","style","lineHeight","disabled","hasError","onSave","onCancel","renderModal","SimpleInput_SimpleInput","handleInputChange","event","onChange","currentTarget","value","handleKeyDown","keyCode","classnames","name","onKeyDown","type","InputForNumber","assign","InputForSingleSelectList_InputForSingleSelectList","_ref","map","option","label","Select_default","clearable","InputForString","typeMapping","STRING","TEXT","target","rows","PASSWORD","changing","handleChangeClick","nextProps","autoComplete","autoFocus","renderInput","LockIcon_default","fill","theme","gray60","BOOLEAN","displayedValue","Toggle_default","INTEGER","LONG","FLOAT","PrimitiveInput_PrimitiveInput","other","_objectWithoutProperties","InputComponent","MultiValueInput_MultiValueInput","ensureValue","handleSingleInputChange","index","newValue","splice","handleDeleteValue","isLast","_objectSpread","multiValues","values","length","PropertySetInput_PropertySetInput","fieldKey","emptyValue","newFields","PropertySetInput_objectSpread","fieldValues","fields","field","width","minWidth","marginTop","description","renderFields","Input","mapDispatchToProps","cancelChange","changeValue","checkValue","getState","rootReducer","defaultValue","passValidation","resetValue","component","api_settings","keys","store_values","catch","saveValue","components_Definition","es","ownProps","loading","validationMessage","mounted","success","handleChange","clearTimeout","timeout","handleCheck","componentKey","safeSetState","window","setTimeout","handleCancel","handleSave","_this$props2","changes","_this$props3","propertyName","effectiveValue","classnames_default","settings-definition-changed","data-key","title","dangerouslySetInnerHTML","__html","AlertErrorIcon_default","AlertSuccessIcon_default","DefinitionsList","settings","components_EmailForm","withCurrentUser","super","error","handleFormSubmit","preventDefault","_this$state","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","Alert","variant","htmlFor","id","required","DeferredSpinner_default","CategoryDefinitionsList_mapDispatchToProps","fetchValues","globalMessages","CategoryDefinitionsList","category","renderEmailForm","subCategoryKey","prevProps","prevKeys","isEqual_default","join","bySubCategory","groupBy_default","subCategory","subCategories","sortedSubCategories","sortBy_default","toLowerCase","AnalysisScope","selectedCategory","react_router_es","to","CATEGORY_OVERRIDES","abap","apex","c / c++ / objective-c","c#","cobol","css","flex","go","html","java","javascript","kotlin","php","pl/i","pl/sql","python","rpg","ruby","scala","swift","t-sql","typescript","vb.net","visual basic","xml","components_Languages","withRouter","categories","location","router","_getLanguages","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","availableLanguages","filter","c","originalValue","selectedLanguage","find","getLanguages","data-test","newOption","Languages_objectSpread","query","placeholder","DEFAULT_SETTING","NewCodePeriod_NewCodePeriod","days","saving","onSelectDays","onSelectSetting","selected","currentSetting","currentSettingValue","String","e","newCodePeriod","fetchNewCodePeriodSetting","_ref2","_ref3","_this$state2","isChanged","isValid","projectBaseline_utils","index_es","defaultMessage","link","BaselineSettingPreviousVersion","onSelect","BaselineSettingDays","onChangeDays","ALM_KEYS","getAlmSettings","project","almSettings","throwGlobalError","AlmPRDecorationFormModalRenderer","alm","children","originalKey","GITLAB","SimpleModal_default","onClose","size","onCloseClick","onFormSubmit","submitting","canSubmit","AlmPRDecorationFormModal_AlmPRDecorationFormModal","handleFieldChange","fieldId","formData","AlmPRDecorationFormModal_objectSpread","bindingDefinition","reduce","result","onFieldChange","AlmPRDecorationTable","additionalColumnsHeaders","definitions","h","colSpan","additionalColumns","onEdit","EditIcon_default","onDelete","AlmDefinitionFormField","help","isTextArea","maxLength","propKey","HelpTooltip_default","overlay","placement","AzureFormModal","personalAccessToken","pullRequestDecoration_TabHeader","withAppState","multipleAlmEnabled","appState","definitionCount","showButton","concat","onCreate","AzureTabRenderer","editedDefinition","AZURE","childProps","AzureTab_AzureTab","handleCreate","handleEdit","definitionKey","d","config","data","updateAzureConfiguration","AzureTab_objectSpread","newKey","createAzureConfiguration","onUpdateDefinitions","BitbucketFormModal","example","url","BitbucketTabRenderer","BITBUCKET","BitbucketTab_BitbucketTab","updateBitbucketConfiguration","BitbucketTab_objectSpread","createBitbucketConfiguration","DeleteModal","projectCount","ConfirmModal_default","confirmButtonText","confirmData","isDestructive","onConfirm","showProjectCountWarning","GithubFormModal","appId","privateKey","GithubTabRenderer","GITHUB","GithubTab_GithubTab","updateGithubConfiguration","GithubTab_objectSpread","createGithubConfiguration","pullRequestDecoration_GitlabFormModal","GitlabTabRenderer","GitlabTab_GitlabTab","updateGitlabConfiguration","GitlabTab_objectSpread","createGitlabConfiguration","almName","PRDecorationTabs","definitionKeyForDeletion","currentAlm","BoxedTabs_default","onSelectAlm","tabs","alt","height","src","urls","azure","bitbucket","github","gitlab","onConfirmDelete","PullRequestDecoration_PullRequestDecoration","deleteConfiguration","fetchPullRequestDecorationSetting","handleSelectAlm","handleDelete","almSetting","projects","countBindedProjects","optionRenderer","instance","renderField","helpParams","PRDecorationBindingRenderer","_props$formData","repository","slug","instances","originalData","_ref$repository","_ref$slug","_ref2$key","oKey","_ref2$repository","oRepository","_ref2$slug","isDataSame","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","FIELDS_BY_ALM","PRDecorationBinding_PRDecorationBinding","fetchDefinitions","all","getProjectBinding","_slicedToArray","newFormData","validateForm","catchError","deleteProjectAlmBinding","_this$state$formData","additionalFields","PRDecorationBinding_objectWithoutProperties","submitProjectAlmBinding","_ref4","PRDecorationBinding_objectSpread","_ref5","Boolean","getProjectAlmBinding","status","resolve","almSpecificFields","_almSpecificFields$re","_almSpecificFields$sl","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding","ADDITIONAL_CATEGORIES","renderComponent","availableGlobally","availableForProject","displayTab","requiresBranchesEnabled","AllCategoriesList","branchesEnabled","defaultCategory","pathname","active","categoriesWithName","sortedCategories","renderLink","PageHeader","InstanceMessage","AppContainer_App","fetchSettings","stopLoading","originalCategory","foundAdditionalCategory","find_default","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","Helmet_default","AppContainer_mapDispatchToProps","filtered","store_definitions","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","WrappedComponent","Wrapper","displayName","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","validateDays","parsed","parseInt","isNaN","getSettingValue","analysis","validateSetting","_state$analysis","overrideGeneralSetting","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1___default","n","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","isInvalid","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"js/319.m.9eacbb03.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".side-tabs-layout{display:flex;justify-content:space-between;align-items:stretch}.modal .side-tabs-layout{padding-left:10px;background-color:#f3f3f3}.side-tabs-main{position:relative;z-index:2;flex-grow:1;padding:15px 20px;border:1px solid #e6e6e6;box-sizing:border-box;background-color:#fff;overflow:auto}.modal .side-tabs-main{border-top:none;border-bottom:none;border-right:none}.side-tabs-side{position:relative;z-index:3;width:160px;flex-shrink:0;padding:10px 0;box-sizing:border-box;transform:translateX(1px)}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#444;cursor:default}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".settings-layout{margin-bottom:60px}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#777}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_CATEGORY = 'pull_request_decoration';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: T.Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<T.SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in T.SettingType]?: React.ComponentType<DefaultSpecializedInputProps>\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited,\n  sanitizeTranslation\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: T.Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              dangerouslySetInnerHTML={{ __html: sanitizeTranslation(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: T.Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success: boolean;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false,\n      success: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: false, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: true, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {this.state.success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters(\n                  'email_configuration.test.email_was_sent_to_x',\n                  this.state.recipient\n                )}\n              </Alert>\n            </div>\n          )}\n\n          {this.state.error != null && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{this.state.error}</Alert>\n            </div>\n          )}\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={this.state.recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={this.state.subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={this.state.message}\n            />\n          </div>\n\n          <SubmitButton disabled={this.state.loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {this.state.loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { getSubCategoryDescription, getSubCategoryName, sanitizeTranslation } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<T.Setting & { definition: T.SettingCategoryDefinition }>;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {sortedSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                dangerouslySetInnerHTML={{ __html: sanitizeTranslation(subCategory.description) }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nexport const CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum ALM_KEYS {\n  AZURE = 'azure',\n  BITBUCKET = 'bitbucket',\n  GITHUB = 'github',\n  GITLAB = 'gitlab'\n}\n\nexport interface AlmSettingsBinding {\n  key: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: ALM_KEYS;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  azure: AzureBindingDefinition[];\n  bitbucket: BitbucketBindingDefinition[];\n  github: GithubBindingDefinition[];\n  gitlab: GitlabBindingDefinition[];\n}\n\nexport interface AzureBindingDefinition extends AlmSettingsBinding {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmSettingsBinding {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmSettingsBinding {\n  appId: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmSettingsBinding {\n  personalAccessToken: string;\n}\n\nexport interface ProjectAlmBinding {\n  key: string;\n  repository?: string;\n  slug?: string;\n}\n\nexport interface AzureProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n\nexport interface BitbucketProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n}\n\nexport interface GitlabProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBinding,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBinding,\n  GithubBindingDefinition,\n  GithubProjectAlmBinding,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBinding,\n  ProjectAlmBinding\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions').catch(throwGlobalError);\n}\n\nexport function getAlmSettings(project: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBinding> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBinding) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBinding) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBinding) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBinding) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_KEYS } from '../../../../types/alm-settings';\n\nexport interface AlmPRDecorationFormModalProps {\n  alm: ALM_KEYS;\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  onCancel: () => void;\n  onSubmit: () => void;\n  originalKey: string;\n}\n\nexport default function AlmPRDecorationFormModalRenderer(props: AlmPRDecorationFormModalProps) {\n  const { alm, children, originalKey } = props;\n  const header = translate(\n    'settings',\n    alm === ALM_KEYS.GITLAB ? 'mr_decoration' : 'pr_decoration',\n    'form.header',\n    originalKey ? 'edit' : 'create'\n  );\n\n  return (\n    <SimpleModal header={header} onClose={props.onCancel} onSubmit={props.onSubmit} size=\"medium\">\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form className=\"views-form\" onSubmit={onFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body modal-container\">{children}</div>\n\n          <div className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton disabled={submitting || !props.canSubmit()}>\n              {translate('settings.pr_decoration.form.save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n          </div>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AlmSettingsBinding, ALM_KEYS } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModalRenderer from './AlmPRDecorationFormModalRenderer';\n\ninterface ChildrenProps<AlmBindingDefinitionType> {\n  formData: AlmBindingDefinitionType;\n  onFieldChange: (fieldId: keyof AlmBindingDefinitionType, value: string) => void;\n}\n\ninterface Props<B> {\n  alm: ALM_KEYS;\n  children: (props: ChildrenProps<B>) => React.ReactNode;\n  bindingDefinition: B;\n  onCancel: () => void;\n  onSubmit: (data: B, originalKey: string) => void;\n}\n\ninterface State<AlmBindingDefinitionType> {\n  formData: AlmBindingDefinitionType;\n}\n\nexport default class AlmPRDecorationFormModal<\n  B extends AlmSettingsBinding\n> extends React.PureComponent<Props<B>, State<B>> {\n  constructor(props: Props<B>) {\n    super(props);\n\n    this.state = { formData: props.bindingDefinition };\n  }\n\n  handleFieldChange = (fieldId: keyof B, value: string) => {\n    this.setState(({ formData }) => ({\n      formData: {\n        ...formData,\n        [fieldId]: value\n      }\n    }));\n  };\n\n  handleFormSubmit = () => {\n    this.props.onSubmit(this.state.formData, this.props.bindingDefinition.key);\n  };\n\n  canSubmit = () => {\n    return Object.values(this.state.formData).reduce(\n      (result, value) => result && value.length > 0,\n      true\n    );\n  };\n\n  render() {\n    const { alm, children, bindingDefinition } = this.props;\n    const { formData } = this.state;\n\n    return (\n      <AlmPRDecorationFormModalRenderer\n        alm={alm}\n        canSubmit={this.canSubmit}\n        onCancel={this.props.onCancel}\n        onSubmit={this.handleFormSubmit}\n        originalKey={bindingDefinition.key}>\n        {children({\n          formData,\n          onFieldChange: this.handleFieldChange\n        })}\n      </AlmPRDecorationFormModalRenderer>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon, DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_KEYS } from '../../../../types/alm-settings';\n\nexport interface AlmPRDecorationTableProps {\n  additionalColumnsHeaders: Array<string>;\n  alm: ALM_KEYS;\n  definitions: Array<{\n    key: string;\n    additionalColumns: Array<string>;\n  }>;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n}\n\nexport default function AlmPRDecorationTable(props: AlmPRDecorationTableProps) {\n  const { additionalColumnsHeaders, alm, definitions } = props;\n\n  return (\n    <table className=\"data zebra fixed spacer-bottom\">\n      <thead>\n        <tr>\n          <th>{translate('settings.pr_decoration.table.column.name')}</th>\n          {additionalColumnsHeaders.map(h => (\n            <th key={h}>{h}</th>\n          ))}\n          <th className=\"action-small text-center\">\n            {translate('settings.pr_decoration.table.column.edit')}\n          </th>\n          <th className=\"action text-center\">\n            {translate('settings.pr_decoration.table.column.delete')}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {definitions.length === 0 ? (\n          <tr data-test=\"settings__alm-empty-table\">\n            <td colSpan={3 + additionalColumnsHeaders.length}>\n              {translate('settings.pr_decoration.table.empty', alm)}\n            </td>\n          </tr>\n        ) : (\n          definitions.map(({ key, additionalColumns }) => (\n            <tr data-test=\"settings__alm-table-row\" key={key}>\n              <td className=\"nowrap hide-overflow\" title={key}>\n                {key}\n              </td>\n              {additionalColumns.map(value => (\n                <td className=\"nowrap hide-overflow\" key={value} title={value}>\n                  {value}\n                </td>\n              ))}\n              <td className=\"text-center\" data-test=\"settings__alm-table-row-edit\">\n                <ButtonIcon onClick={() => props.onEdit(key)}>\n                  <EditIcon />\n                </ButtonIcon>\n              </td>\n              <td className=\"text-center\" data-test=\"settings__alm-table-row-delete\">\n                <DeleteButton onClick={() => props.onDelete(key)} />\n              </td>\n            </tr>\n          ))\n        )}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmSettingsBinding } from '../../../../types/alm-settings';\n\nexport interface AlmDefinitionFormFieldProps<B extends AlmSettingsBinding> {\n  autoFocus?: boolean;\n  help?: React.ReactNode;\n  id: string;\n  isTextArea?: boolean;\n  maxLength?: number;\n  onFieldChange: (id: keyof B, value: string) => void;\n  propKey: keyof B;\n  value: string;\n}\n\nexport function AlmDefinitionFormField<B extends AlmSettingsBinding>(\n  props: AlmDefinitionFormFieldProps<B>\n) {\n  const { autoFocus, help, id, isTextArea, maxLength, onFieldChange, propKey, value } = props;\n\n  return (\n    <div className=\"modal-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.pr_decoration.form', id)}\n        <em className=\"mandatory spacer-right\">*</em>\n        {help && <HelpTooltip overlay={help} placement=\"right\" />}\n      </label>\n      {isTextArea ? (\n        <textarea\n          className=\"settings-large-input\"\n          id={id}\n          maxLength={maxLength || 2000}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          required={true}\n          rows={5}\n          value={value}\n        />\n      ) : (\n        <input\n          autoFocus={autoFocus}\n          className=\"input-super-large\"\n          id={id}\n          maxLength={maxLength || 100}\n          name={id}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          size={50}\n          type=\"text\"\n          value={value}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmDefinitionFormField } from './AlmDefinitionFormField';\n\nexport interface AzureFormModalProps {\n  formData: AzureBindingDefinition;\n  onFieldChange: (fieldId: keyof AzureBindingDefinition, value: string) => void;\n}\n\nexport default function AzureFormModal(props: AzureFormModalProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.pr_decoration.form.name.azure.help')}\n        id=\"name.azure\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmDefinitionFormField\n        help={translate('settings.pr_decoration.form.personal_access_token.azure.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { ALM_KEYS } from '../../../../types/alm-settings';\n\nexport interface TabHeaderProps {\n  alm: ALM_KEYS;\n  appState: Pick<T.AppState, 'multipleAlmEnabled'>;\n  definitionCount: number;\n  onCreate: () => void;\n}\n\nexport function TabHeader(props: TabHeaderProps) {\n  const {\n    alm,\n    appState: { multipleAlmEnabled },\n    definitionCount\n  } = props;\n  const showButton = multipleAlmEnabled || definitionCount === 0;\n  return (\n    <>\n      <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n        <FormattedMessage\n          defaultMessage={translate(`settings.pr_decoration.${alm}.info`)}\n          id={`settings.pr_decoration.${alm}.info`}\n          values={{\n            link: (\n              <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n                {translate('learn_more')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n\n      <div className=\"big-spacer-bottom display-flex-space-between\">\n        <h4 className=\"display-inline\">\n          {translate(\n            'settings',\n            alm === ALM_KEYS.GITLAB ? 'mr_decoration' : 'pr_decoration',\n            'table.title'\n          )}\n        </h4>\n        {showButton && (\n          <Button data-test=\"settings__alm-create\" onClick={props.onCreate}>\n            {translate('settings.pr_decoration.table.create')}\n          </Button>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default withAppState(TabHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { ALM_KEYS, AzureBindingDefinition } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModal from './AlmPRDecorationFormModal';\nimport AlmPRDecorationTable from './AlmPRDecorationTable';\nimport AzureFormModal from './AzureFormModal';\nimport TabHeader from './TabHeader';\n\nexport interface AzureTabRendererProps {\n  editedDefinition?: AzureBindingDefinition;\n  definitions: AzureBindingDefinition[];\n  loading: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: AzureBindingDefinition, originalKey: string) => void;\n}\n\nexport default function AzureTabRenderer(props: AzureTabRendererProps) {\n  const { definitions, editedDefinition, loading } = props;\n  return (\n    <>\n      <TabHeader\n        alm={ALM_KEYS.AZURE}\n        definitionCount={definitions.length}\n        onCreate={props.onCreate}\n      />\n\n      <DeferredSpinner loading={loading}>\n        <AlmPRDecorationTable\n          additionalColumnsHeaders={[]}\n          alm={ALM_KEYS.AZURE}\n          definitions={definitions.map(({ key }) => ({\n            key,\n            additionalColumns: []\n          }))}\n          onDelete={props.onDelete}\n          onEdit={props.onEdit}\n        />\n      </DeferredSpinner>\n\n      {editedDefinition && (\n        <AlmPRDecorationFormModal\n          alm={ALM_KEYS.AZURE}\n          bindingDefinition={editedDefinition}\n          onCancel={props.onCancel}\n          onSubmit={props.onSubmit}>\n          {childProps => <AzureFormModal {...childProps} />}\n        </AlmPRDecorationFormModal>\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { createAzureConfiguration, updateAzureConfiguration } from '../../../../api/almSettings';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport AzureTabRenderer from './AzureTabRenderer';\n\ninterface Props {\n  definitions: AzureBindingDefinition[];\n  loading: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: AzureBindingDefinition;\n  projectCount?: number;\n}\n\nexport default class AzureTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: { key: '', personalAccessToken: '' } });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition });\n  };\n\n  handleSubmit = (config: AzureBindingDefinition, originalKey: string) => {\n    const call = originalKey\n      ? updateAzureConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : createAzureConfiguration(config);\n    return call.then(this.props.onUpdateDefinitions).then(() => {\n      if (this.mounted) {\n        this.setState({ editedDefinition: undefined });\n      }\n    });\n  };\n\n  render() {\n    const { definitions, loading } = this.props;\n    const { editedDefinition } = this.state;\n    return (\n      <AzureTabRenderer\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        loading={loading}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmDefinitionFormField } from './AlmDefinitionFormField';\n\nexport interface BitbucketFormModalProps {\n  formData: BitbucketBindingDefinition;\n  onFieldChange: (fieldId: keyof BitbucketBindingDefinition, value: string) => void;\n}\n\nexport default function BitbucketFormModal(props: BitbucketFormModalProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.pr_decoration.form.name.bitbucket.help')}\n        id=\"name.bitbucket\"\n        maxLength={100}\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmDefinitionFormField\n        help={\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.form.url.bitbucket.help')}\n            id=\"settings.pr_decoration.form.url.bitbucket.help\"\n            values={{ example: 'https://bitbucket-server.your-company.com' }}\n          />\n        }\n        id=\"url.bitbucket\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url}\n      />\n      <AlmDefinitionFormField\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_KEYS, BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModal from './AlmPRDecorationFormModal';\nimport AlmPRDecorationTable from './AlmPRDecorationTable';\nimport BitbucketFormModal from './BitbucketFormModal';\nimport TabHeader from './TabHeader';\n\nexport interface BitbucketTabRendererProps {\n  editedDefinition?: BitbucketBindingDefinition;\n  definitions: BitbucketBindingDefinition[];\n  loading: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: BitbucketBindingDefinition, originalKey: string) => void;\n}\n\nexport default function BitbucketTabRenderer(props: BitbucketTabRendererProps) {\n  const { definitions, editedDefinition, loading } = props;\n  return (\n    <>\n      <TabHeader\n        alm={ALM_KEYS.BITBUCKET}\n        definitionCount={definitions.length}\n        onCreate={props.onCreate}\n      />\n\n      <DeferredSpinner loading={loading}>\n        <AlmPRDecorationTable\n          additionalColumnsHeaders={[\n            translate(`settings.pr_decoration.table.column.bitbucket.url`)\n          ]}\n          alm={ALM_KEYS.BITBUCKET}\n          definitions={definitions.map(({ key, url }) => ({\n            key,\n            additionalColumns: [url]\n          }))}\n          onDelete={props.onDelete}\n          onEdit={props.onEdit}\n        />\n      </DeferredSpinner>\n\n      {editedDefinition && (\n        <AlmPRDecorationFormModal\n          alm={ALM_KEYS.BITBUCKET}\n          bindingDefinition={editedDefinition}\n          onCancel={props.onCancel}\n          onSubmit={props.onSubmit}>\n          {childProps => <BitbucketFormModal {...childProps} />}\n        </AlmPRDecorationFormModal>\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  createBitbucketConfiguration,\n  updateBitbucketConfiguration\n} from '../../../../api/almSettings';\nimport { BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport BitbucketTabRenderer from './BitbucketTabRenderer';\n\ninterface Props {\n  definitions: BitbucketBindingDefinition[];\n  loading: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: BitbucketBindingDefinition;\n  projectCount?: number;\n}\n\nexport default class BitbucketTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: { key: '', url: '', personalAccessToken: '' } });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition });\n  };\n\n  handleSubmit = (config: BitbucketBindingDefinition, originalKey: string) => {\n    const call = originalKey\n      ? updateBitbucketConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : createBitbucketConfiguration(config);\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ editedDefinition: undefined });\n        }\n      })\n      .then(this.props.onUpdateDefinitions);\n  };\n\n  render() {\n    const { definitions, loading } = this.props;\n    const { editedDefinition } = this.state;\n    return (\n      <BitbucketTabRenderer\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        loading={loading}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.pr_decoration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.pr_decoration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.pr_decoration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.delete.message')}\n            id=\"settings.pr_decoration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmDefinitionFormField } from './AlmDefinitionFormField';\n\nexport interface GithubFormModalProps {\n  formData: GithubBindingDefinition;\n  onFieldChange: (fieldId: keyof GithubBindingDefinition, value: string) => void;\n}\n\nexport default function GithubFormModal(props: GithubFormModalProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.pr_decoration.form.name.github.help')}\n        id=\"name.github\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmDefinitionFormField\n        help={\n          <>\n            {translate('settings.pr_decoration.form.url.github.help1')}\n            <br />\n            <em>https://github.company.com/api/v3</em>\n            <br />\n            <br />\n            {translate('settings.pr_decoration.form.url.github.help2')}\n            <br />\n            <em>https://api.github.com/</em>\n          </>\n        }\n        id=\"url.github\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url}\n      />\n      <AlmDefinitionFormField\n        id=\"app_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"appId\"\n        value={formData.appId}\n      />\n      <AlmDefinitionFormField\n        id=\"private_key\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"privateKey\"\n        value={formData.privateKey}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_KEYS, GithubBindingDefinition } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModal from './AlmPRDecorationFormModal';\nimport AlmPRDecorationTable from './AlmPRDecorationTable';\nimport GithubFormModal from './GithubFormModal';\nimport TabHeader from './TabHeader';\n\nexport interface GithubTabRendererProps {\n  editedDefinition?: GithubBindingDefinition;\n  definitions: GithubBindingDefinition[];\n  loading: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: GithubBindingDefinition, originalKey: string) => void;\n}\n\nexport default function GithubTabRenderer(props: GithubTabRendererProps) {\n  const { definitions, editedDefinition, loading } = props;\n  return (\n    <>\n      <TabHeader\n        alm={ALM_KEYS.GITHUB}\n        definitionCount={definitions.length}\n        onCreate={props.onCreate}\n      />\n\n      <DeferredSpinner loading={loading}>\n        <AlmPRDecorationTable\n          additionalColumnsHeaders={[\n            translate(`settings.pr_decoration.table.column.github.url`),\n            translate('settings.pr_decoration.table.column.app_id')\n          ]}\n          alm={ALM_KEYS.GITHUB}\n          definitions={definitions.map(({ key, appId, url }) => ({\n            key,\n            additionalColumns: [url, appId]\n          }))}\n          onDelete={props.onDelete}\n          onEdit={props.onEdit}\n        />\n      </DeferredSpinner>\n\n      {editedDefinition && (\n        <AlmPRDecorationFormModal\n          alm={ALM_KEYS.GITHUB}\n          bindingDefinition={editedDefinition}\n          onCancel={props.onCancel}\n          onSubmit={props.onSubmit}>\n          {childProps => <GithubFormModal {...childProps} />}\n        </AlmPRDecorationFormModal>\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { createGithubConfiguration, updateGithubConfiguration } from '../../../../api/almSettings';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport GithubTabRenderer from './GithubTabRenderer';\n\ninterface Props {\n  definitions: GithubBindingDefinition[];\n  loading: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: GithubBindingDefinition;\n  projectCount?: number;\n}\n\nexport default class GithubTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: { key: '', appId: '', url: '', privateKey: '' } });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition });\n  };\n\n  handleSubmit = (config: GithubBindingDefinition, originalKey: string) => {\n    const call = originalKey\n      ? updateGithubConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : createGithubConfiguration(config);\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ editedDefinition: undefined });\n        }\n      })\n      .then(this.props.onUpdateDefinitions);\n  };\n\n  render() {\n    const { definitions, loading } = this.props;\n    const { editedDefinition } = this.state;\n    return (\n      <GithubTabRenderer\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        loading={loading}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmDefinitionFormField } from './AlmDefinitionFormField';\n\nexport interface GitlabFormModalProps {\n  formData: GitlabBindingDefinition;\n  onFieldChange: (fieldId: keyof GitlabBindingDefinition, value: string) => void;\n}\n\nexport function GitlabFormModal(props: GitlabFormModalProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.pr_decoration.form.name.gitlab.help')}\n        id=\"name.gitlab\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmDefinitionFormField\n        help={translate('settings.pr_decoration.form.personal_access_token.gitlab.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n\nexport default React.memo(GitlabFormModal);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { ALM_KEYS, GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModal from './AlmPRDecorationFormModal';\nimport AlmPRDecorationTable from './AlmPRDecorationTable';\nimport GitlabFormModal from './GitlabFormModal';\nimport TabHeader from './TabHeader';\n\nexport interface GitlabTabRendererProps {\n  editedDefinition?: GitlabBindingDefinition;\n  definitions: GitlabBindingDefinition[];\n  loading: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: GitlabBindingDefinition, originalKey: string) => void;\n}\n\nexport default function GitlabTabRenderer(props: GitlabTabRendererProps) {\n  const { definitions, editedDefinition, loading } = props;\n  return (\n    <>\n      <TabHeader\n        alm={ALM_KEYS.GITLAB}\n        definitionCount={definitions.length}\n        onCreate={props.onCreate}\n      />\n\n      <DeferredSpinner loading={loading}>\n        <AlmPRDecorationTable\n          additionalColumnsHeaders={[]}\n          alm={ALM_KEYS.GITLAB}\n          definitions={definitions.map(({ key }) => ({\n            key,\n            additionalColumns: []\n          }))}\n          onDelete={props.onDelete}\n          onEdit={props.onEdit}\n        />\n      </DeferredSpinner>\n\n      {editedDefinition && (\n        <AlmPRDecorationFormModal\n          alm={ALM_KEYS.GITLAB}\n          bindingDefinition={editedDefinition}\n          onCancel={props.onCancel}\n          onSubmit={props.onSubmit}>\n          {childProps => <GitlabFormModal {...childProps} />}\n        </AlmPRDecorationFormModal>\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { createGitlabConfiguration, updateGitlabConfiguration } from '../../../../api/almSettings';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport GitlabTabRenderer from './GitlabTabRenderer';\n\ninterface Props {\n  definitions: GitlabBindingDefinition[];\n  loading: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: GitlabBindingDefinition;\n  projectCount?: number;\n}\n\nexport default class GitlabTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition });\n  };\n\n  handleSubmit = (config: GitlabBindingDefinition, originalKey: string) => {\n    const call = originalKey\n      ? updateGitlabConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : createGitlabConfiguration(config);\n    return call.then(this.props.onUpdateDefinitions).then(() => {\n      if (this.mounted) {\n        this.setState({ editedDefinition: undefined });\n      }\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: { key: '', personalAccessToken: '' } });\n  };\n\n  render() {\n    const { definitions, loading } = this.props;\n    const { editedDefinition } = this.state;\n    return (\n      <GitlabTabRenderer\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        loading={loading}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmSettingsBindingDefinitions, ALM_KEYS } from '../../../../types/alm-settings';\nimport AzureTab from './AzureTab';\nimport BitbucketTab from './BitbucketTab';\nimport DeleteModal from './DeleteModal';\nimport GithubTab from './GithubTab';\nimport GitlabTab from './GitlabTab';\n\nexport interface PRDecorationTabsProps {\n  currentAlm: ALM_KEYS;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loading: boolean;\n  onCancel: () => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlm: (alm: ALM_KEYS) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nexport const almName = {\n  [ALM_KEYS.AZURE]: 'Azure DevOps Server',\n  [ALM_KEYS.BITBUCKET]: 'Bitbucket Server',\n  [ALM_KEYS.GITHUB]: 'GitHub',\n  [ALM_KEYS.GITLAB]: 'GitLab'\n};\n\nexport default function PRDecorationTabs(props: PRDecorationTabsProps) {\n  const { definitionKeyForDeletion, definitions, currentAlm, loading, projectCount } = props;\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.description')}\n      </div>\n      <BoxedTabs\n        onSelect={props.onSelectAlm}\n        selected={currentAlm}\n        tabs={[\n          {\n            key: ALM_KEYS.GITHUB,\n            label: (\n              <>\n                <img\n                  alt=\"github\"\n                  className=\"spacer-right\"\n                  height={16}\n                  src={`${getBaseUrl()}/images/alm/github.svg`}\n                />\n                {almName[ALM_KEYS.GITHUB]}\n              </>\n            )\n          },\n          {\n            key: ALM_KEYS.BITBUCKET,\n            label: (\n              <>\n                <img\n                  alt=\"bitbucket\"\n                  className=\"spacer-right\"\n                  height={16}\n                  src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n                />\n                {almName[ALM_KEYS.BITBUCKET]}\n              </>\n            )\n          },\n          {\n            key: ALM_KEYS.AZURE,\n            label: (\n              <>\n                <img\n                  alt=\"azure\"\n                  className=\"spacer-right\"\n                  height={16}\n                  src={`${getBaseUrl()}/images/alm/azure.svg`}\n                />\n                {almName[ALM_KEYS.AZURE]}\n              </>\n            )\n          },\n          {\n            key: ALM_KEYS.GITLAB,\n            label: (\n              <>\n                <img\n                  alt=\"gitlab\"\n                  className=\"spacer-right\"\n                  height={16}\n                  src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n                />\n                {almName[ALM_KEYS.GITLAB]}\n              </>\n            )\n          }\n        ]}\n      />\n\n      <div className=\"boxed-group boxed-group-inner\">\n        {currentAlm === ALM_KEYS.AZURE && (\n          <AzureTab\n            definitions={definitions.azure}\n            loading={loading}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n          />\n        )}\n        {currentAlm === ALM_KEYS.BITBUCKET && (\n          <BitbucketTab\n            definitions={definitions.bitbucket}\n            loading={loading}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n          />\n        )}\n        {currentAlm === ALM_KEYS.GITHUB && (\n          <GithubTab\n            definitions={definitions.github}\n            loading={loading}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n          />\n        )}\n        {currentAlm === ALM_KEYS.GITLAB && (\n          <GitlabTab\n            definitions={definitions.gitlab}\n            loading={loading}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n          />\n        )}\n      </div>\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancel}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions\n} from '../../../../api/almSettings';\nimport { AlmSettingsBindingDefinitions, ALM_KEYS } from '../../../../types/alm-settings';\nimport PRDecorationTabs from './PRDecorationTabs';\n\ninterface State {\n  currentAlm: ALM_KEYS;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loading: boolean;\n  projectCount?: number;\n}\n\nexport default class PullRequestDecoration extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    currentAlm: ALM_KEYS.GITHUB,\n    definitions: {\n      [ALM_KEYS.AZURE]: [],\n      [ALM_KEYS.BITBUCKET]: [],\n      [ALM_KEYS.GITHUB]: [],\n      [ALM_KEYS.GITLAB]: []\n    },\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchPullRequestDecorationSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  deleteConfiguration = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    this.setState({ loading: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlm: ALM_KEYS) => {\n    this.setState({ currentAlm });\n  };\n\n  handleCancel = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    return countBindedProjects(definitionKey).then(projectCount => {\n      if (this.mounted) {\n        this.setState({\n          definitionKeyForDeletion: definitionKey,\n          projectCount\n        });\n      }\n    });\n  };\n\n  render() {\n    return (\n      <PRDecorationTabs\n        onCancel={this.handleCancel}\n        onConfirmDelete={this.deleteConfiguration}\n        onDelete={this.handleDelete}\n        onSelectAlm={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        {...this.state}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmSettingsInstance, ALM_KEYS, ProjectAlmBinding } from '../../../../types/alm-settings';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: ProjectAlmBinding;\n  instances: AlmSettingsInstance[];\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBinding, value: string) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  originalData?: ProjectAlmBinding;\n  saving: boolean;\n  success: boolean;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nfunction renderField(props: {\n  help?: boolean;\n  helpParams?: { [key: string]: string | JSX.Element };\n  id: string;\n  onFieldChange: (id: keyof ProjectAlmBinding, value: string) => void;\n  propKey: keyof ProjectAlmBinding;\n  value: string;\n}) {\n  const { help, helpParams, id, propKey, value, onFieldChange } = props;\n  return (\n    <div className=\"form-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.pr_decoration.binding.form', id)}\n        <em className=\"mandatory spacer-right\">*</em>\n        {help && (\n          <HelpTooltip\n            overlay={\n              <FormattedMessage\n                defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n                id={`settings.pr_decoration.binding.form.${id}.help`}\n                values={helpParams}\n              />\n            }\n            placement=\"right\"\n          />\n        )}\n      </label>\n      <input\n        className=\"input-super-large\"\n        id={id}\n        maxLength={256}\n        name={id}\n        onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nfunction isDataSame(\n  { key, repository = '', slug = '' }: ProjectAlmBinding,\n  { key: oKey = '', repository: oRepository = '', slug: oSlug = '' }: ProjectAlmBinding\n) {\n  return key === oKey && repository === oRepository && slug === oSlug;\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData: { key, repository, slug },\n    instances,\n    isValid,\n    loading,\n    originalData,\n    saving,\n    success\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.binding.no_bindings')}\n            id=\"settings.pr_decoration.binding.no_bindings\"\n            values={{\n              link: (\n                <Link to=\"/documentation/analysis/pull-request/#pr-decoration\">\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = key && instances.find(i => i.key === key);\n  const alm = selected && selected.alm;\n\n  const isChanged = !isDataSame({ key, repository, slug }, originalData || { key: '' });\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <div className=\"form-field\">\n          <label htmlFor=\"name\">\n            {translate('settings.pr_decoration.binding.form.name')}\n            <em className=\"mandatory spacer-right\">*</em>\n          </label>\n          <Select\n            autosize={true}\n            className=\"abs-width-400\"\n            clearable={false}\n            id=\"name\"\n            menuContainerStyle={{\n              maxWidth: '210%' /* Allow double the width of the select */,\n              width: 'auto'\n            }}\n            onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n            optionRenderer={optionRenderer}\n            options={instances}\n            searchable={false}\n            value={key}\n            valueKey=\"key\"\n            valueRenderer={optionRenderer}\n          />\n        </div>\n\n        {alm === ALM_KEYS.BITBUCKET && (\n          <>\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/'}\n                    <strong>{'{KEY}'}</strong>\n                    {'/repos/{SLUG}/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.repository',\n              onFieldChange: props.onFieldChange,\n              propKey: 'repository',\n              value: repository || ''\n            })}\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/{KEY}/repos/'}\n                    <strong>{'{SLUG}'}</strong>\n                    {'/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.slug',\n              onFieldChange: props.onFieldChange,\n              propKey: 'slug',\n              value: slug || ''\n            })}\n          </>\n        )}\n\n        {alm === ALM_KEYS.GITHUB &&\n          renderField({\n            help: true,\n            helpParams: { example: 'SonarSource/sonarqube' },\n            id: 'github.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n\n        <div className=\"display-flex-center\">\n          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={saving || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n            </SubmitButton>\n          )}\n          {originalData && (\n            <Button className=\"spacer-right\" onClick={props.onReset}>\n              <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n            </Button>\n          )}\n          {!saving && success && (\n            <span className=\"text-success\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding\n} from '../../../../api/almSettings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport { AlmSettingsInstance, ALM_KEYS, ProjectAlmBinding } from '../../../../types/alm-settings';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ninterface Props {\n  component: T.Component;\n}\n\ninterface State {\n  formData: ProjectAlmBinding;\n  instances: AlmSettingsInstance[];\n  isValid: boolean;\n  loading: boolean;\n  originalData?: ProjectAlmBinding;\n  saving: boolean;\n  success: boolean;\n}\n\nconst FIELDS_BY_ALM: { [almKey in ALM_KEYS]: Array<keyof T.Omit<ProjectAlmBinding, 'key'>> } = {\n  [ALM_KEYS.AZURE]: [],\n  [ALM_KEYS.BITBUCKET]: ['repository', 'slug'],\n  [ALM_KEYS.GITHUB]: ['repository'],\n  [ALM_KEYS.GITLAB]: []\n};\n\nexport default class PRDecorationBinding extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '' },\n    instances: [],\n    isValid: false,\n    loading: true,\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances,\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              originalData\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBinding | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === 404) {\n        return Promise.resolve(undefined);\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ saving: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ saving: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: ''\n            },\n            originalData: undefined,\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: ALM_KEYS,\n    key: string,\n    almSpecificFields?: T.Omit<ProjectAlmBinding, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n\n    switch (alm) {\n      case ALM_KEYS.AZURE:\n        return setProjectAzureBinding({\n          almSetting,\n          project\n        });\n      case ALM_KEYS.BITBUCKET: {\n        if (!almSpecificFields) {\n          return Promise.reject();\n        }\n        const { repository = '', slug = '' } = almSpecificFields;\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug\n        });\n      }\n      case ALM_KEYS.GITHUB: {\n        const repository = almSpecificFields && almSpecificFields.repository;\n        if (!repository) {\n          return Promise.reject();\n        }\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository\n        });\n      }\n\n      case ALM_KEYS.GITLAB:\n        return setProjectGitlabBinding({\n          almSetting,\n          project\n        });\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ saving: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    if (key) {\n      this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n        .then(() => {\n          if (this.mounted) {\n            this.setState({\n              saving: false,\n              success: true\n            });\n          }\n        })\n        .then(this.fetchDefinitions)\n        .catch(this.catchError);\n    }\n  };\n\n  handleFieldChange = (id: keyof ProjectAlmBinding, value: string) => {\n    this.setState(({ formData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        success: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  render() {\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        {...this.state}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n  PULL_REQUEST_DECORATION_CATEGORY\n} from './AdditionalCategoryKeys';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecoration from './pullRequestDecoration/PullRequestDecoration';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_CATEGORY,\n    name: translate('settings.pr_decoration.category'),\n    renderComponent: getPullRequestDecorationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getPullRequestDecorationComponent() {\n  return <PullRequestDecoration />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\n\ninterface Category {\n  key: string;\n  name: string;\n}\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport class CategoriesList extends React.PureComponent<CategoriesListProps> {\n  renderLink(category: Category) {\n    const { component, defaultCategory, selectedCategory } = this.props;\n    const pathname = this.props.component ? '/project/settings' : '/settings';\n    const query = {\n      category: category.key !== defaultCategory ? category.key.toLowerCase() : undefined,\n      id: component && component.key\n    };\n    return (\n      <IndexLink\n        className={classNames({\n          active: category.key.toLowerCase() === selectedCategory.toLowerCase()\n        })}\n        title={category.name}\n        to={{ pathname, query }}>\n        {category.name}\n      </IndexLink>\n    );\n  }\n\n  render() {\n    const { branchesEnabled } = this.props;\n\n    const categoriesWithName = this.props.categories\n      .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n      .map(key => ({\n        key,\n        name: getCategoryName(key)\n      }))\n      .concat(\n        ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n          .filter(c =>\n            this.props.component\n              ? // Project settings\n                c.availableForProject\n              : // Global settings\n                c.availableGlobally\n          )\n          .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n      );\n    const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n    return (\n      <ul className=\"side-tabs-menu\">\n        {sortedCategories.map(category => (\n          <li key={category.key}>{this.renderLink(category)}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\ninterface Props {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: Props) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{title}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport '../side-tabs.css';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div className=\"page page-limited\" id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet title={translate('settings.page')} />\n\n        <PageHeader component={this.props.component} />\n\n        <div className=\"side-tabs-layout settings-layout\">\n          <div className=\"side-tabs-side\">\n            <AllCategoriesList\n              component={this.props.component}\n              defaultCategory={this.props.defaultCategory}\n              selectedCategory={selectedCategory}\n            />\n          </div>\n          <div className=\"side-tabs-main\">\n            {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n              foundAdditionalCategory.renderComponent({\n                component: this.props.component,\n                selectedCategory: originalCategory\n              })\n            ) : (\n              <CategoryDefinitionsList\n                category={selectedCategory}\n                component={this.props.component}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting?: boolean;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days));\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n"],"sourceRoot":""}