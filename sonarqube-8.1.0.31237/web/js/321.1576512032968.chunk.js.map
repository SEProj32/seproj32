{"version":3,"sources":["webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx","webpack:///./src/main/js/apps/settings/side-tabs.css?20b1","webpack:///./src/main/js/apps/settings/side-tabs.css","webpack:///./src/main/js/apps/settings/styles.css?600d","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/api/almSettings.ts","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AlmPRDecorationFormModalRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AlmPRDecorationFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AlmPRDecorationTable.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AlmDefinitionFormField.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AzureFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/TabHeader.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AzureTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/AzureTab.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/BitbucketFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/BitbucketTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/BitbucketTab.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GithubFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GithubTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GithubTab.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GitlabFormModal.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GitlabTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/GitlabTab.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/PRDecorationTabs.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecoration/PullRequestDecoration.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/hoc/withAppState.tsx"],"names":["__webpack_require__","d","__webpack_exports__","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","Object","catch","validateDays","days","parsed","parseInt","length","isNaN","String","getSettingValue","_a","analysis","type","validateSetting","state","currentSetting","currentSettingValue","selected","overrideGeneralSetting","isChanged","undefined","isValid","BaselineSettingDays","react__WEBPACK_IMPORTED_MODULE_0__","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1___default","n","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","props","className","disabled","onChangeDays","onSelect","a","onClick","title","error","id","isInvalid","label","required","onChange","e","currentTarget","value","BaselineSettingPreviousVersion","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","isDefault","content","module","i","options","hmr","transform","insertInto","locals","exports","push","handleError","key","dispatch","response","settingsPage","request","then","message","Promise","reject","LANGUAGES_CATEGORY","_super","DefinitionActions","_this","apply","this","arguments","reseting","handleClose","setState","handleReset","handleSubmit","onReset","__extends","prototype","renderModal","header","l10n","index_js_exposed","Modal_default","contentLabel","onRequestClose","onSubmit","buttons","render","setting","changedValue","hasValueChanged","hasValueToResetTo","utils","definition","hasBeenChangedToEmptyValue","showReset","style","lineHeight","hasError","onSave","onCancel","SimpleInput","handleInputChange","event","handleKeyDown","keyCode","SimpleInput_extends","classnames","name","onKeyDown","InputForNumber","inputs_SimpleInput","__assign","InputForPassword","changing","target","handleChangeClick","InputForPassword_extends","componentWillReceiveProps","nextProps","renderInput","autoComplete","autoFocus","LockIcon_default","fill","theme","gray60","InputForSingleSelectList","InputForSingleSelectList_extends","map","option","Select_default","clearable","InputForString","InputForString_assign","InputForText","InputForText_extends","rows","typeMapping","STRING","TEXT","inputs_InputForText","PASSWORD","inputs_InputForPassword","BOOLEAN","displayedValue","Toggle_default","INTEGER","LONG","FLOAT","PrimitiveInput","PrimitiveInput_extends","other","__rest","inputs_InputForSingleSelectList","PrimitiveInput_assign","InputComponent","MultiValueInput","ensureValue","handleSingleInputChange","index","newValue","__spreadArrays","splice","handleDeleteValue","MultiValueInput_extends","isLast","inputs_PrimitiveInput","MultiValueInput_assign","multiValues","values","PropertySetInput","PropertySetInput_spreadArrays","fieldKey","emptyValue","newFields","PropertySetInput_assign","PropertySetInput_extends","renderFields","fieldValues","fields","field","width","minWidth","marginTop","description","Input","inputs_MultiValueInput","Input_assign","inputs_PropertySetInput","Definition_Definition","Definition","mounted","success","handleChange","clearTimeout","timeout","changeValue","handleCheck","component","componentKey","resetValue","cancelChange","safeSetState","window","setTimeout","handleCancel","passValidation","checkValue","handleSave","saveValue","Definition_extends","componentDidMount","componentWillUnmount","changes","loading","validationMessage","propertyName","effectiveValue","classnames_default","settings-definition-changed","data-key","dangerouslySetInnerHTML","__html","AlertErrorIcon_default","AlertSuccessIcon_default","components_DefinitionActions","mapDispatchToProps","getState","rootReducer","defaultValue","api_settings","keys","store_values","components_Definition","es","ownProps","DefinitionsList","settings","EmailForm_EmailForm","EmailForm","call","handleFormSubmit","preventDefault","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","EmailForm_extends","Alert","variant","htmlFor","DeferredSpinner_default","components_EmailForm","withCurrentUser","SubCategoryDefinitionsList","renderEmailForm","subCategoryKey","category","SubCategoryDefinitionsList_extends","fetchValues","componentDidUpdate","prevProps","prevKeys","isEqual_default","join","bySubCategory","groupBy_default","subCategory","subCategories","sortedSubCategories","sortBy_default","toLowerCase","CategoryDefinitionsList_mapDispatchToProps","globalMessages","CategoryDefinitionsList","components_SubCategoryDefinitionsList","AnalysisScope","selectedCategory","react_router_es","to","CATEGORY_OVERRIDES","abap","apex","c / c++ / objective-c","c#","cobol","css","flex","go","html","java","javascript","kotlin","php","pl/i","pl/sql","python","rpg","ruby","scala","swift","t-sql","typescript","vb.net","visual basic","xml","ALM_KEYS","components_Languages","withRouter","categories","location","router","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","availableLanguages","filter","c","originalValue","selectedLanguage","find","getLanguages","data-test","newOption","Languages_assign","query","placeholder","NewCodePeriod","saving","onSelectDays","onSelectSetting","newCodePeriod","NewCodePeriod_extends","fetchNewCodePeriodSetting","projectBaseline_utils","index_es","defaultMessage","link","getAlmSettings","project","almSettings","throwGlobalError","AlmPRDecorationFormModalRenderer","alm","children","originalKey","GITLAB","SimpleModal_default","onClose","size","onCloseClick","onFormSubmit","submitting","canSubmit","AlmPRDecorationFormModal","handleFieldChange","fieldId","formData","AlmPRDecorationFormModal_assign","_b","bindingDefinition","reduce","result","AlmPRDecorationFormModal_extends","onFieldChange","AlmPRDecorationTable","additionalColumnsHeaders","definitions","h","colSpan","additionalColumns","onEdit","EditIcon_default","onDelete","AlmDefinitionFormField","help","isTextArea","maxLength","propKey","HelpTooltip_default","overlay","placement","AzureFormModal","personalAccessToken","pullRequestDecoration_TabHeader","withAppState","multipleAlmEnabled","appState","definitionCount","showButton","onCreate","AzureTabRenderer","editedDefinition","AZURE","pullRequestDecoration_AlmPRDecorationFormModal","childProps","AzureTabRenderer_assign","AzureTab","handleCreate","handleEdit","definitionKey","config","AzureTab_assign","newKey","createAzureConfiguration","onUpdateDefinitions","AzureTab_extends","BitbucketFormModal","example","url","BitbucketTabRenderer","BITBUCKET","BitbucketTabRenderer_assign","BitbucketTab","BitbucketTab_assign","createBitbucketConfiguration","BitbucketTab_extends","DeleteModal","projectCount","ConfirmModal_default","confirmButtonText","confirmData","isDestructive","onConfirm","showProjectCountWarning","GithubFormModal","appId","privateKey","GithubTabRenderer","GITHUB","GithubTabRenderer_assign","GithubTab","GithubTab_assign","createGithubConfiguration","GithubTab_extends","pullRequestDecoration_GitlabFormModal","GitlabTabRenderer","GitlabTabRenderer_assign","GitlabTab","GitlabTab_assign","createGitlabConfiguration","GitlabTab_extends","almName","PRDecorationTabs_a","PRDecorationTabs","definitionKeyForDeletion","currentAlm","BoxedTabs_default","onSelectAlm","tabs","alt","height","src","urls","pullRequestDecoration_AzureTab","azure","pullRequestDecoration_BitbucketTab","bitbucket","pullRequestDecoration_GithubTab","github","pullRequestDecoration_GitlabTab","gitlab","onConfirmDelete","PullRequestDecoration","deleteConfiguration","fetchPullRequestDecorationSetting","handleSelectAlm","handleDelete","almSetting","projects","PullRequestDecoration_extends","PullRequestDecoration_assign","optionRenderer","instance","renderField","helpParams","PRDecorationBindingRenderer","repository","slug","instances","originalData","_c","_d","_e","oKey","_f","oRepository","_g","isDataSame","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","FIELDS_BY_ALM","PRDecorationBinding_a","PRDecorationBinding","fetchDefinitions","all","getProjectBinding","newFormData","validateForm","catchError","additionalFields","PRDecorationBinding_rest","submitProjectAlmBinding","PRDecorationBinding_assign","Boolean","PRDecorationBinding_extends","getProjectAlmBinding","status","resolve","almSpecificFields","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding","ADDITIONAL_CATEGORIES","renderComponent","AdditionalCategories_assign","availableGlobally","availableForProject","displayTab","components_NewCodePeriod","pullRequestDecoration_PullRequestDecoration","requiresBranchesEnabled","pullRequestDecorationBinding_PRDecorationBinding","AllCategoriesList_CategoriesList","CategoriesList","AllCategoriesList_extends","renderLink","defaultCategory","pathname","active","branchesEnabled","categoriesWithName","concat","sortedCategories","AllCategoriesList","PageHeader","InstanceMessage","AppContainer_App","App","fetchSettings","stopLoading","AppContainer_extends","originalCategory","foundAdditionalCategory","find_default","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","Helmet_default","AppContainer_mapDispatchToProps","filtered","store_definitions","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","WrappedComponent","Wrapper","displayName","_utils__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"6FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAA,IAAAC,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAsBM,SAAUG,EAAiBM,GAI/B,OAAOC,OAAAH,EAAA,QAAAG,CAAQ,6BAA8BD,GAAME,MAAMH,EAAA,GAGrD,SAAUJ,EAAiBK,GAM/B,OAAOC,OAAAH,EAAA,KAAAG,CAAK,4BAA6BD,GAAME,MAAMH,EAAA,GAGjD,SAAUH,EAAmBI,GACjC,OAAOC,OAAAH,EAAA,KAAAG,CAAK,8BAA+BD,GAAME,MAAMH,EAAA,GAGnD,SAAUF,EAA0BG,GAGxC,OAAOC,OAAAH,EAAA,QAAAG,CAAQ,6BAA8BD,GAAME,MAAMH,EAAA,uCC1BrD,SAAUI,EAAaC,GAC3B,IAAMC,EAASC,SAASF,EAAM,IAE9B,QAASA,EAAKG,OAAS,GAAKC,MAAMH,IAAWA,EAAS,GAAKI,OAAOJ,KAAYD,GAG1E,SAAUM,EAAgBC,OAC9BC,EAAAD,EAAAC,SACAR,EAAAO,EAAAP,KAOA,OANAO,EAAAE,MAOE,IAAK,iBACH,OAAOT,EACT,IAAK,oBACH,OAAOQ,EACT,QACE,QAIA,SAAUE,EAAgBC,GAS5B,IAAAJ,EAAAI,EAAAH,gBAAA,IAAAD,EAAA,GAAAA,EACAK,EAAAD,EAAAC,eACAC,EAAAF,EAAAE,oBACAb,EAAAW,EAAAX,KACAc,EAAAH,EAAAG,SACAC,EAAAJ,EAAAI,uBAoBF,MAAO,CAAEC,UAhBJJ,QAA6CK,IAA3BF,GAIQ,IAA3BA,GACAD,IAAaF,GACC,mBAAbE,GAAiCd,IAASa,GAC7B,sBAAbC,GAAoCN,IAAaK,EANxCE,EAeMG,SALS,IAA3BH,GACa,qBAAbD,GACc,sBAAbA,GAAoCN,EAASL,OAAS,GACzC,mBAAbW,GAAiCf,EAAaC,IA5EnDb,EAAAC,EAAAC,EAAA,sBAAAU,IAAAZ,EAAAC,EAAAC,EAAA,sBAAAiB,IAAAnB,EAAAC,EAAAC,EAAA,sBAAAqB,uCCAAvB,EAAAC,EAAAC,EAAA,sBAAA8B,IAAA,IAAAC,EAAAjC,EAAA,IAAAkC,EAAAlC,EAAA,KAAAmC,EAAAnC,EAAAoC,EAAAF,GAAAG,EAAArC,EAAA,KAAAsC,EAAAtC,EAAAoC,EAAAC,GAAAE,EAAAvC,EAAA,IAmCc,SAAUgC,EAAoBQ,GAClC,IAAAC,EAAAD,EAAAC,UAAW5B,EAAA2B,EAAA3B,KAAM6B,EAAAF,EAAAE,SAAUb,EAAAW,EAAAX,UAAWE,EAAAS,EAAAT,QAASY,EAAAH,EAAAG,aAAcC,EAAAJ,EAAAI,SAAUjB,EAAAa,EAAAb,SAC/E,OACEM,EAAA,cAACE,EAAAU,EAAS,CACRJ,UAAWA,EACXC,SAAUA,EACVI,QAAS,WAAM,OAAAF,EAAA,mBACfjB,SAAUA,EACVoB,MAAOrC,OAAA6B,EAAA,UAAA7B,CAAU,yBACjBuB,EAAA,cAAAA,EAAA,cACEA,EAAA,mBAAGQ,UAAU,qBAAqB/B,OAAA6B,EAAA,UAAA7B,CAAU,qCAC3CiB,GACCM,EAAA,cAACK,EAAAO,EAAe,CACdG,WAAOlB,EACPmB,GAAG,0BACHC,UAAWrB,IAAcE,EACzBA,QAASF,GAAaE,EACtBoB,MAAOzC,OAAA6B,EAAA,UAAA7B,CAAU,yBACjB0C,UAAU,GACVnB,EAAA,uBAAOoB,SAAU,SAAAC,GAAK,OAAAX,EAAaW,EAAEC,cAAfC,QAAqClC,KAAK,OAAOkC,MAAO3C,2CCtD1Fb,EAAAC,EAAAC,EAAA,sBAAAuD,IAAA,IAAAxB,EAAAjC,EAAA,IAAAkC,EAAAlC,EAAA,KAAAmC,EAAAnC,EAAAoC,EAAAF,GAAAwB,EAAA1D,EAAA,IA8Bc,SAAUyD,EAA+BjB,GAC7C,IAAAE,EAAAF,EAAAE,SAAUiB,EAAAnB,EAAAmB,UAAWf,EAAAJ,EAAAI,SAAUjB,EAAAa,EAAAb,SACvC,OACEM,EAAA,cAACE,EAAAU,EAAS,CACRH,SAAUA,EACVI,QAAS,WAAM,OAAAF,EAAA,qBACfjB,SAAUA,EACVoB,MACErC,OAAAgD,EAAA,UAAAhD,CAAU,8BAAgCiD,EAAY,KAAKjD,OAAAgD,EAAA,UAAAhD,CAAU,WAAU,IAAM,KAEvFuB,EAAA,uBAAIvB,OAAAgD,EAAA,UAAAhD,CAAU,kECvCpB,IAAAkD,EAAc5D,EAAQ,MAEtB,iBAAA4D,MAAA,EAA4CC,EAAAC,EAASF,EAAA,MAOrD,IAAAG,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAApC,GAEa9B,EAAQ,IAARA,CAAoE4D,EAAAG,GAEjFH,EAAAO,SAAAN,EAAAO,QAAAR,EAAAO,+BCjBAN,EAAAO,QAA2BpE,EAAQ,IAARA,EAAoE,IAE/FqE,KAAA,CAAcR,EAAAC,EAAS,w8BAAw8B,2BCD/9B,IAAAF,EAAc5D,EAAQ,MAEtB,iBAAA4D,MAAA,EAA4CC,EAAAC,EAASF,EAAA,MAOrD,IAAAG,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAApC,GAEa9B,EAAQ,IAARA,CAAoE4D,EAAAG,GAEjFH,EAAAO,SAAAN,EAAAO,QAAAR,EAAAO,+BCjBAN,EAAAO,QAA2BpE,EAAQ,IAARA,EAAoE,IAE/FqE,KAAA,CAAcR,EAAAC,EAAS,svCAAsvC,6MC4H7wC,SAASQ,EAAYC,EAAaC,GAChC,OAAO,SAACC,GAEN,OADAD,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAY6D,IACd7D,OAAAiE,EAAA,WAAAjE,CAAW+D,GAAUG,KAAK,SAAAC,GAE/B,OADAL,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAe6D,EAAKM,IACtBC,QAAQC,0BC9GRC,EAAqB,kdCiBlC,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA3D,MAAe,CAAE+D,UAAU,GAE3BJ,EAAAK,YAAc,WACZL,EAAKM,SAAS,CAAEF,UAAU,KAG5BJ,EAAAO,YAAc,WACZP,EAAKM,SAAS,CAAEF,UAAU,KAG5BJ,EAAAQ,aAAe,WACbR,EAAK3C,MAAMoD,UACXT,EAAKK,iBA0ET,OAvF+CK,EAAAX,EAAAD,GAgB7CC,EAAAY,UAAAC,YAAA,WACE,IAAMC,EAAStF,OAAAuF,EAAA,UAAAvF,CAAU,gCACzB,OACEwF,EAAA,cAACC,EAAAtD,EAAK,CAACuD,aAAcJ,EAAQK,eAAgBhB,KAAKG,aAChDU,EAAA,wBAAQzD,UAAU,cAChByD,EAAA,wBAAKF,IAEPE,EAAA,sBAAMI,SAAUjB,KAAKM,cACnBO,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,uBAAIxF,OAAAuF,EAAA,UAAAvF,CAAU,wCAEhBwF,EAAA,wBAAQzD,UAAU,cAChByD,EAAA,cAACK,EAAA,aAAY,CAAC9D,UAAU,cAAc/B,OAAAuF,EAAA,UAAAvF,CAAU,eAChDwF,EAAA,cAACK,EAAA,gBAAe,CAACzD,QAASuC,KAAKG,aAAc9E,OAAAuF,EAAA,UAAAvF,CAAU,eAOjEwE,EAAAY,UAAAU,OAAA,WACQ,IAAApF,EAAAiE,KAAA7C,MAAEiE,EAAArF,EAAAqF,QAAS9C,EAAAvC,EAAAuC,UAAW+C,EAAAtF,EAAAsF,aAAcC,EAAAvF,EAAAuF,gBAEpCC,GAAqBlG,OAAAmG,EAAA,EAAAnG,CAAa+F,EAAQK,WAAYpG,OAAAmG,EAAA,EAAAnG,CAAgB+F,IACtEM,EACY,MAAhBL,GAAwBhG,OAAAmG,EAAA,EAAAnG,CAAa+F,EAAQK,WAAYJ,GACrDM,EACJJ,IAAsBG,IAAgCpD,IAAcgD,GAEtE,OACET,EAAA,cAAAA,EAAA,cACGvC,IAAcgD,GACbT,EAAA,qBAAKzD,UAAU,kBAAkBwE,MAAO,CAAEC,WAAY,SACnDxG,OAAAuF,EAAA,UAAAvF,CAAU,sBAGfwF,EAAA,qBAAKzD,UAAU,sCACZkE,GACCT,EAAA,cAACK,EAAA,OAAM,CACL9D,UAAU,8BACVC,SAAU2C,KAAK7C,MAAM2E,SACrBrE,QAASuC,KAAK7C,MAAM4E,QACnB1G,OAAAuF,EAAA,UAAAvF,CAAU,SAIdsG,GACCd,EAAA,cAACK,EAAA,OAAM,CAAC9D,UAAU,eAAeK,QAASuC,KAAKK,aAC5ChF,OAAAuF,EAAA,UAAAvF,CAAU,eAIdiG,GACCT,EAAA,cAACK,EAAA,gBAAe,CAAC9D,UAAU,eAAeK,QAASuC,KAAK7C,MAAM6E,UAC3D3G,OAAAuF,EAAA,UAAAvF,CAAU,WAIdsG,GACCd,EAAA,sBAAMzD,UAAU,QACb/B,OAAAuF,EAAA,UAAAvF,CAAU,WACV,KACAA,OAAAmG,EAAA,EAAAnG,CAAgB+F,IAIpBpB,KAAK7D,MAAM+D,UAAYF,KAAKU,iBAKvCb,EAvFA,CAA+CgB,EAAA,mXCT/C,SAAAjB,GAAA,SAAAqC,IAAA,IAAAnC,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAAoC,kBAAoB,SAACC,GACnBrC,EAAK3C,MAAMa,SAASmE,EAAMjE,cAAcC,QAG1C2B,EAAAsC,cAAgB,SAACD,GACO,KAAlBA,EAAME,SAAkBvC,EAAK3C,MAAM4E,OACrCjC,EAAK3C,MAAM4E,SACgB,KAAlBI,EAAME,SAAkBvC,EAAK3C,MAAM6E,UAC5ClC,EAAK3C,MAAM6E,cAgBjB,OAzByCM,EAAAL,EAAArC,GAavCqC,EAAAxB,UAAAU,OAAA,WACE,OACEN,EAAA,uBACEzD,UAAWmF,EAAW,WAAYvC,KAAK7C,MAAMC,WAC7CoF,KAAMxC,KAAK7C,MAAMqF,KACjBxE,SAAUgC,KAAKkC,kBACfO,UAAWzC,KAAKoC,cAChBnG,KAAM+D,KAAK7C,MAAMlB,KACjBkC,MAAO6B,KAAK7C,MAAMgB,OAAS,MAInC8D,EAzBA,CAAyCpB,EAAA,8NCN3B,SAAU6B,EAAevF,GACrC,OAAO0D,EAAA,cAAC8B,EAAWC,EAAA,GAAKzF,EAAK,CAAEC,UAAU,cAAcnB,KAAK,uXCM9D,SAAA2D,GAAA,SAAAiD,IAAA,IAAA/C,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YAIEF,EAAA3D,MAAe,CACb2G,UAAWhD,EAAK3C,MAAMgB,OAkBxB2B,EAAAoC,kBAAoB,SAACC,GACnBrC,EAAK3C,MAAMa,SAASmE,EAAMY,OAAO5E,QAGnC2B,EAAAkD,kBAAoB,WAClBlD,EAAKM,SAAS,CAAE0C,UAAU,OAkC9B,OA9D8CG,EAAAJ,EAAAjD,GAQ5CiD,EAAApC,UAAAyC,0BAAA,SAA0BC,IAQrBnD,KAAK7C,MAAMmE,iBAAmBtB,KAAK7C,MAAMgB,QAAUgF,EAAUhF,OAC7DgF,EAAU7B,iBAEXtB,KAAKI,SAAS,CAAE0C,UAAWK,EAAUhF,SAYzC0E,EAAApC,UAAA2C,YAAA,WACE,OACEvC,EAAA,0BACEA,EAAA,uBAAOzD,UAAU,SAASnB,KAAK,aAC/B4E,EAAA,uBACEwC,aAAa,MACbC,UAAWtD,KAAK7D,MAAM2G,UAAY9C,KAAK7C,MAAMgB,MAC7Cf,UAAU,kDACVoF,KAAMxC,KAAK7C,MAAMqF,KACjBxE,SAAUgC,KAAKkC,kBACfjG,KAAK,WACLkC,MAAO6B,KAAK7C,MAAMgB,UAM1B0E,EAAApC,UAAAU,OAAA,WACE,OAAInB,KAAK7D,MAAM2G,SACN9C,KAAKoD,cAIZvC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC0C,EAAA/F,EAAQ,CAACJ,UAAU,+BAA+BoG,KAAMC,EAAA,OAAOC,SAChE7C,EAAA,cAACK,EAAA,OAAM,CAAC9D,UAAU,cAAcK,QAASuC,KAAKgD,mBAC3C3H,OAAAuF,EAAA,UAAAvF,CAAU,kBAKrBwH,EA9DA,CAA8ChC,EAAA,+WCL9C,SAAAjB,GAAA,SAAA+D,IAAA,IAAA7D,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAAoC,kBAAoB,SAACnG,OAAEoC,EAAApC,EAAAoC,MACrB2B,EAAK3C,MAAMa,SAASG,MAoBxB,OAtBsDyF,EAAAD,EAAA/D,GAKpD+D,EAAAlD,UAAAU,OAAA,WACE,IAAMzC,EAAUsB,KAAK7C,MAAMuB,QAAQmF,IAAI,SAAAC,GAAU,MAAC,CAChDhG,MAAOgG,EACP3F,MAAO2F,KAGT,OACEjD,EAAA,cAACkD,EAAAvG,EAAM,CACLJ,UAAU,uBACV4G,WAAW,EACXxB,KAAMxC,KAAK7C,MAAMqF,KACjBxE,SAAUgC,KAAKkC,kBACfxD,QAASA,EACTP,MAAO6B,KAAK7C,MAAMgB,SAI1BwF,EAtBA,CAAsD9C,EAAA,gOCFxC,SAAUoD,GAAe9G,GACrC,OAAO0D,EAAA,cAAC8B,EAAWuB,GAAA,GAAK/G,EAAK,CAAEC,UAAU,uBAAuBnB,KAAK,6VCFvE,SAAA2D,GAAA,SAAAuE,IAAA,IAAArE,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAAoC,kBAAoB,SAACC,GACnBrC,EAAK3C,MAAMa,SAASmE,EAAMY,OAAO5E,UAcrC,OAhB0CiG,GAAAD,EAAAvE,GAKxCuE,EAAA1D,UAAAU,OAAA,WACE,OACEN,EAAA,0BACEzD,UAAU,gCACVoF,KAAMxC,KAAK7C,MAAMqF,KACjBxE,SAAUgC,KAAKkC,kBACfmC,KAAM,EACNlG,MAAO6B,KAAK7C,MAAMgB,OAAS,MAInCgG,EAhBA,CAA0CtD,EAAA,y3BCWpCyD,GAEF,CACFC,OAAQN,GACRO,KAAMC,GACNC,SAAUC,EACVC,QCXY,SAA0B7I,OAAEiC,EAAAjC,EAAAiC,SAAUwE,EAAAzG,EAAAyG,KAAMrE,EAAApC,EAAAoC,MAClD0G,EAA0B,MAAT1G,GAAgBA,EACvC,OACE0C,EAAA,qBAAKzD,UAAU,iCACbyD,EAAA,cAACiE,EAAAtH,EAAM,CAACgF,KAAMA,EAAMxE,SAAUA,EAAUG,MAAO0G,IACrC,MAAT1G,GAAiB0C,EAAA,sBAAMzD,UAAU,oBAAoB/B,OAAAuF,EAAA,UAAAvF,CAAU,uBDOpE0J,QAASrC,EACTsC,KAAMtC,EACNuC,MAAOvC,MAOT,SAAA9C,GAAA,SAAAsF,mDAqBA,OArB4CC,GAAAD,EAAAtF,GAC1CsF,EAAAzE,UAAAU,OAAA,WACE,IAAMpF,EAAAiE,KAAA7C,MAAEiE,EAAArF,EAAAqF,QAASgE,EAAAC,GAAAtJ,EAAA,aACT0F,EAAAL,EAAAK,WAEFe,EAAOxC,KAAK7C,MAAMqF,MAAQnH,OAAAmG,EAAA,EAAAnG,CAAcoG,GAE9C,GAAwB,uBAApBA,EAAWxF,KACb,OACE4E,EAAA,cAACyE,GAAwBC,GAAA,CACvBjH,UAAWjD,OAAAmG,EAAA,EAAAnG,CAAqB+F,GAChCoB,KAAMA,EACN9D,QAAS+C,EAAW/C,SAChB0G,IAKV,IAAMI,EAAkB/D,EAAWxF,MAAQqI,GAAY7C,EAAWxF,OAAUgI,GAC5E,OAAOpD,EAAA,cAAC2E,EAAcD,GAAA,CAACjH,UAAWjD,OAAAmG,EAAA,EAAAnG,CAAqB+F,GAAUoB,KAAMA,GAAU4C,KAErFF,EArBA,CAA4CrE,EAAA,wuBEzB5C,SAAAjB,GAAA,SAAA6F,IAAA,IAAA3F,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA4F,YAAc,WACZ,OAAO5F,EAAK3C,MAAMgB,OAAS,IAG7B2B,EAAA6F,wBAA0B,SAACC,EAAezH,GACxC,IAAM0H,EAAQC,GAAOhG,EAAK4F,eAC1BG,EAASE,OAAOH,EAAO,EAAGzH,GAC1B2B,EAAK3C,MAAMa,SAAS6H,IAGtB/F,EAAAkG,kBAAoB,SAACJ,GACnB,IAAMC,EAAQC,GAAOhG,EAAK4F,eAC1BG,EAASE,OAAOH,EAAO,GACvB9F,EAAK3C,MAAMa,SAAS6H,MA0CxB,OAxD6CI,GAAAR,EAAA7F,GAiB3C6F,EAAAhF,UAAA2C,YAAA,SAAYjF,EAAYyH,EAAeM,GAAvC,IAAApG,EAAAE,KACUoB,EAAApB,KAAA7C,MAAAiE,QACR,OACEP,EAAA,oBAAIzD,UAAU,gBAAgB8B,IAAK0G,GACjC/E,EAAA,cAACsF,GAAc,CACb7E,gBAAiBtB,KAAK7C,MAAMmE,gBAC5BtD,SAAU,SAAAG,GAAS,OAAA2B,EAAK6F,wBAAwBC,EAA7BzH,IACnBiD,QAAOgF,MAAA,GACFhF,GAAO,CACVK,WAAU2E,MAAA,GAAOhF,EAAQK,YAAU,CAAE4E,aAAa,IAClDC,YAAQ7J,IAEV0B,MAAOA,KAGP+H,GACArF,EAAA,qBAAKzD,UAAU,oCACbyD,EAAA,cAACK,EAAA,aAAY,CACX9D,UAAU,kBACVK,QAAS,WAAM,OAAAqC,EAAKkG,kBAALJ,SAQ3BH,EAAAhF,UAAAU,OAAA,eAAArB,EAAAE,KACQ6E,EAAciB,GAAO9F,KAAK0F,cAAkBrK,OAAAmG,EAAA,EAAAnG,CAAc2E,KAAK7C,MAAMiE,QAAQK,aACnF,OACEZ,EAAA,yBACEA,EAAA,wBACGgE,EAAehB,IAAI,SAAC1F,EAAOyH,GAC1B,OAAA9F,EAAKsD,YAAYjF,EAAOyH,EAAOA,IAAUf,EAAelJ,OAAS,QAM7E8J,EAxDA,CAA6C5E,EAAA,wuBCA7C,SAAAjB,GAAA,SAAA2G,IAAA,IAAAzG,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YAKEF,EAAAkG,kBAAoB,SAACJ,GACnB,IAAMC,EAAQW,GAAO1G,EAAK4F,eAC1BG,EAASE,OAAOH,EAAO,GACvB9F,EAAK3C,MAAMa,SAAS6H,IAGtB/F,EAAAoC,kBAAoB,SAAC0D,EAAea,EAAkBtI,SAC9CuI,EAAarL,OAAAmG,EAAA,EAAAnG,CAAcyE,EAAK3C,MAAMiE,QAAQK,YAAY,GAC1DoE,EAAQW,GAAO1G,EAAK4F,eACpBiB,EAASC,SAAA,GAAQF,GAAeb,EAASD,MAAM7J,EAAA,IAAG0K,GAAWtI,EAAKpC,IAExE,OADA8J,EAASE,OAAOH,EAAO,EAAGe,GACnB7G,EAAK3C,MAAMa,SAAS6H,MAiE/B,OAjF8CgB,GAAAN,EAAA3G,GAC5C2G,EAAA9F,UAAAiF,YAAA,WACE,OAAO1F,KAAK7C,MAAMgB,OAAS,IAiB7BoI,EAAA9F,UAAAqG,aAAA,SAAaC,EAAkBnB,EAAeM,GAA9C,IAAApG,EAAAE,KACUoB,EAAApB,KAAA7C,MAAAiE,QACAK,EAAAL,EAAAK,WAER,OACEZ,EAAA,oBAAI3B,IAAK0G,GACNvK,OAAAmG,EAAA,EAAAnG,CAAqBoG,IACpBA,EAAWuF,OAAOnD,IAAI,SAAAoD,GAAS,OAC7BpG,EAAA,oBAAI3B,IAAK+H,EAAM/H,KACb2B,EAAA,cAACsF,GAAc,CACb7E,gBAAiBxB,EAAK3C,MAAMmE,gBAC5BkB,KAAMnH,OAAAmG,EAAA,EAAAnG,CAAcoG,EAAYwF,EAAM/H,KACtClB,SAAU,SAAAG,GAAS,OAAA2B,EAAKoC,kBAAkB0D,EAAOqB,EAAM/H,IAApCf,IACnBiD,QAAOwF,MAAA,GAAOxF,GAAO,CAAEK,WAAYwF,EAAO9I,MAAO4I,EAAYE,EAAM/H,OACnEf,MAAO4I,EAAYE,EAPM/H,UAWjC2B,EAAA,oBAAIzD,UAAU,4BACV8I,GACArF,EAAA,cAACK,EAAA,aAAY,CACX9D,UAAU,kBACVK,QAAS,WAAM,OAAAqC,EAAKkG,kBAALJ,SAQ3BW,EAAA9F,UAAAU,OAAA,eAAArB,EAAAE,KACUyB,EAAAzB,KAAA7C,MAAAiE,QAAAK,WACFoD,EAAc2B,GAAOxG,KAAK0F,cAAkBrK,OAAAmG,EAAA,EAAAnG,CAAcoG,IAEhE,OACEZ,EAAA,yBACEA,EAAA,uBACEzD,UAAU,oCACVwE,MAAO,CAAEsF,MAAO,OAAQC,SAAU,IAAKC,WAAY,KACnDvG,EAAA,2BACEA,EAAA,wBACGxF,OAAAmG,EAAA,EAAAnG,CAAqBoG,IACpBA,EAAWuF,OAAOnD,IAAI,SAAAoD,GAAS,OAC7BpG,EAAA,oBAAI3B,IAAK+H,EAAM/H,KACZ+H,EAAMzE,KACe,MAArByE,EAAMI,aACLxG,EAAA,sBAAMzD,UAAU,oBAAoB6J,EAJXI,gBAQjCxG,EAAA,+BAGJA,EAAA,2BACGgE,EAAehB,IAAI,SAACkD,EAAanB,GAChC,OAAA9F,EAAKgH,aAAaC,EAAanB,EAAOA,IAAUf,EAAelJ,OAAS,SAOtF4K,EAjFA,CAA8C1F,EAAA,gOCChC,SAAUyG,GAAMnK,GACpB,IAAAsE,EAAAtE,EAAAiE,QAAAK,WAER,OAAIpG,OAAAmG,EAAA,EAAAnG,CAAqBoG,IAAeA,EAAW4E,YAC1CxF,EAAA,cAAC0G,GAAeC,GAAA,GAAKrK,IAGN,iBAApBsE,EAAWxF,KACN4E,EAAA,cAAC4G,GAAgBD,GAAA,GAAKrK,IAGxB0D,EAAA,cAACsF,GAAcqB,GAAA,GAAKrK,oVCyB7BuK,GAAA,SAAA9H,GAAA,SAAA+H,IAAA,IAAA7H,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YAEEF,EAAA8H,SAAU,EACV9H,EAAA3D,MAAQ,CAAE0L,SAAS,GAgBnB/H,EAAAgI,aAAe,SAAC3J,GACd4J,aAAajI,EAAKkI,SAClBlI,EAAK3C,MAAM8K,YAAYnI,EAAK3C,MAAMiE,QAAQK,WAAWvC,IAAKf,GAC1D2B,EAAKoI,eAGPpI,EAAAO,YAAc,WACN,IAAAtE,EAAA+D,EAAA3C,MAAEgL,EAAApM,EAAAoM,UACA1G,EADW1F,EAAAqF,QACXK,WACF2G,EAAeD,GAAaA,EAAUjJ,IAC5C,OAAOY,EAAK3C,MAAMkL,WAAW5G,EAAWvC,IAAKkJ,GAAc7I,KAAK,WAC9DO,EAAK3C,MAAMmL,aAAa7G,EAAWvC,KACnCY,EAAKyI,aAAa,CAAEV,SAAS,IAC7B/H,EAAKkI,QAAUQ,OAAOC,WAAW,WAAM,OAAA3I,EAAKyI,aAAa,CAAEV,SAApB,KAAuC,QAIlF/H,EAAA4I,aAAe,WACL,IAAAtH,EAAAtB,EAAA3C,MAAAiE,QACRtB,EAAK3C,MAAMmL,aAAalH,EAAQK,WAAWvC,KAC3CY,EAAK3C,MAAMwL,eAAevH,EAAQK,WAAWvC,MAG/CY,EAAAoI,YAAc,WACJ,IAAA9G,EAAAtB,EAAA3C,MAAAiE,QACRtB,EAAK3C,MAAMyL,WAAWxH,EAAQK,WAAWvC,MAG3CY,EAAA+I,WAAa,WACX,GAA+B,MAA3B/I,EAAK3C,MAAMkE,aAAsB,CACnCvB,EAAKyI,aAAa,CAAEV,SAAS,IACvB,IAAA9L,EAAA+D,EAAA3C,MAAEgL,EAAApM,EAAAoM,UAAW/G,EAAArF,EAAAqF,QACnBtB,EAAK3C,MAAM2L,UAAU1H,EAAQK,WAAWvC,IAAKiJ,GAAaA,EAAUjJ,KAAKK,KACvE,WACEO,EAAKyI,aAAa,CAAEV,SAAS,IAC7B/H,EAAKkI,QAAUQ,OAAOC,WAAW,WAAM,OAAA3I,EAAKyI,aAAa,CAAEV,SAApB,KAAuC,MAEhF,kBAsFR,OA9IgCkB,GAAApB,EAAA/H,GAK9B+H,EAAAlH,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,GAGjBD,EAAAlH,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GAGjBD,EAAAlH,UAAA8H,aAAA,SAAaW,GACPlJ,KAAK4H,SACP5H,KAAKI,SAAS8I,IA8ClBvB,EAAAlH,UAAAU,OAAA,WACQ,IAAApF,EAAAiE,KAAA7C,MAAEkE,EAAAtF,EAAAsF,aAAc8H,EAAApN,EAAAoN,QAAS/H,EAAArF,EAAAqF,QAASgI,EAAArN,EAAAqN,kBAChC3H,EAAAL,EAAAK,WACF4H,EAAehO,OAAAmG,EAAA,EAAAnG,CAAgBoG,GAC/BK,EAAgC,MAArBsH,EACX9H,EAAkC,MAAhBD,EAClBiI,EAAiBhI,EAAkBD,EAAehG,OAAAmG,EAAA,EAAAnG,CAAgB+F,GAClE9C,EAAYjD,OAAAmG,EAAA,EAAAnG,CAAqB+F,GACjCiG,EAAchM,OAAAmG,EAAA,EAAAnG,CAAuBoG,GAC3C,OACEZ,EAAA,qBACEzD,UAAWmM,IAAW,sBAAuB,CAC3CC,8BAA+BlI,IAC/BmI,WACQhI,EAAWvC,KACrB2B,EAAA,qBAAKzD,UAAU,4BACbyD,EAAA,oBAAIzD,UAAU,2BAA2BM,MAAO2L,GAC7CA,GAGFhC,GACCxG,EAAA,qBACEzD,UAAU,4BACVsM,wBAAyB,CAAEC,OAAQtO,OAAAmG,EAAA,EAAAnG,CAAoBgM,MAI3DxG,EAAA,qBAAKzD,UAAU,kDACZ/B,OAAAuF,EAAA,wBAAAvF,CAAwB,iBAAkBoG,EAAWvC,OAI1D2B,EAAA,qBAAKzD,UAAU,6BACbyD,EAAA,qBAAKzD,UAAU,6BACZ+L,GACCtI,EAAA,sBAAMzD,UAAU,aACdyD,EAAA,mBAAGzD,UAAU,yBACZ/B,OAAAuF,EAAA,UAAAvF,CAAU,2BAIb8N,GAAWC,GACXvI,EAAA,sBAAMzD,UAAU,eACdyD,EAAA,cAAC+I,EAAApM,EAAc,CAACJ,UAAU,iBAC1ByD,EAAA,0BACGxF,OAAAuF,EAAA,wBAAAvF,CAAwB,mCAAoC+N,MAKjED,IAAYrH,GAAY9B,KAAK7D,MAAM0L,SACnChH,EAAA,sBAAMzD,UAAU,gBACdyD,EAAA,cAACgJ,EAAArM,EAAgB,CAACJ,UAAU,iBAC3B/B,OAAAuF,EAAA,UAAAvF,CAAU,0BAKjBwF,EAAA,cAACyG,GAAK,CACJhG,gBAAiBA,EACjBU,SAAUhC,KAAK0I,aACf1K,SAAUgC,KAAK8H,aACf/F,OAAQ/B,KAAK6I,WACbzH,QAASA,EACTjD,MAAOmL,IAGTzI,EAAA,cAACiJ,EAAiB,CAChBzI,aAAcA,EACdS,SAAUA,EACVR,gBAAiBA,EACjBhD,UAAWA,EACX0D,SAAUhC,KAAK0I,aACfnI,QAASP,KAAKK,YACd0B,OAAQ/B,KAAK6I,WACbzH,QAASA,OAMrBuG,EA9IA,CAAgC9G,EAAA,eAsJ1BkJ,GAAqB,CACzBzB,aAAcjJ,EAAA,EACd4I,YAAa5I,EAAA,EACbuJ,WdxJI,SAAqB1J,GACzB,OAAO,SAACC,EAAoB6K,GAC1B,IAAM7N,EAAQ6N,IACRvI,EAAapG,OAAA4O,EAAA,yBAAA5O,CAAyBc,EAAO+C,GAC7Cf,EAAQ9C,OAAA4O,EAAA,2BAAA5O,CAA2Bc,EAAO+C,GAEhD,OAAI7D,OAAAmG,EAAA,EAAAnG,CAAaoG,EAAYtD,SACK1B,IAA5BgF,EAAWyI,aACb/K,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAe6D,EAAK7D,OAAAuF,EAAA,UAAAvF,CAAU,mDAEvC8D,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAe6D,EAAK7D,OAAAuF,EAAA,UAAAvF,CAAU,yCAElC,IAGT8D,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAe6D,KACjB,KcyITyJ,eAAgBtJ,EAAA,EAChBgJ,Wd7GI,SAAqBnJ,EAAaiJ,GACtC,OAAO,SAAChJ,GAGN,OAFAA,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAa6D,IAEf7D,OAAA8O,EAAA,EAAA9O,CAAkB,CAAE+O,KAAMlL,EAAKiJ,UAASA,IAC5C5I,KAAK,WAAM,OAAAlE,OAAA8O,EAAA,EAAA9O,CAAU,CAAE+O,KAAMlL,EAAKiJ,UAAvBA,MACX5I,KAAK,SAAA+G,GACAA,EAAO3K,OAAS,EAClBwD,EAAS9D,OAAAgP,EAAA,EAAAhP,CAAciL,EAAQ6B,IAE/BhJ,EAAS9D,OAAAgP,EAAA,EAAAhP,CAAc,CAAC,CAAE6D,IAAGA,IAAKiJ,IAEpChJ,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAe6D,IACxBC,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAY6D,MAEtB5D,MAAM2D,EAAYC,EAAKC,Mc+F5B2J,UdvII,SAAoB5J,EAAaiJ,GACrC,OAAO,SAAChJ,EAAoB6K,GAC1B7K,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAa6D,IACtB,IAAM/C,EAAQ6N,IACRvI,EAAapG,OAAA4O,EAAA,yBAAA5O,CAAyBc,EAAO+C,GAC7Cf,EAAQ9C,OAAA4O,EAAA,2BAAA5O,CAA2Bc,EAAO+C,GAEhD,OAAI7D,OAAAmG,EAAA,EAAAnG,CAAaoG,EAAYtD,IAC3BgB,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAe6D,EAAK7D,OAAAuF,EAAA,UAAAvF,CAAU,wCACvC8D,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAY6D,IACdO,QAAQC,UAGVrE,OAAA8O,EAAA,EAAA9O,CAAgBoG,EAAYtD,EAAOgK,GACvC5I,KAAK,WAAM,OAAAlE,OAAA8O,EAAA,EAAA9O,CAAU,CAAE+O,KAAMlL,EAAKiJ,UAAvBA,MACX5I,KAAK,SAAA+G,GACJnH,EAAS9D,OAAAgP,EAAA,EAAAhP,CAAciL,EAAQ6B,IAC/BhJ,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAa6D,IACtBC,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAe6D,IACxBC,EAAS9D,OAAAgE,EAAA,EAAAhE,CAAY6D,MAEtB5D,MAAM2D,EAAYC,EAAKC,OcqHfmL,GAAAjP,OAAAkP,EAAA,QAAAlP,CAfS,SAACc,EAAcqO,GAAqC,MAAC,CAC3EnJ,aAAchG,OAAA4O,EAAA,2BAAA5O,CAA2Bc,EAAOqO,EAASpJ,QAAQK,WAAWvC,KAC5EiK,QAAS9N,OAAA4O,EAAA,qBAAA5O,CAAqBc,EAAOqO,EAASpJ,QAAQK,WAAWvC,KACjEkK,kBAAmB/N,OAAA4O,EAAA,gCAAA5O,CAAgCc,EAAOqO,EAASpJ,QAAQK,WAAWvC,OActF6K,GAFa,CAGbrC,ICpMY,SAAU+C,GAAgB1O,OAAEoM,EAAApM,EAAAoM,UAAWuC,EAAA3O,EAAA2O,SACnD,OACE7J,EAAA,oBAAIzD,UAAU,6BACXsN,EAAS7G,IAAI,SAAAzC,GAAW,OACvBP,EAAA,oBAAI3B,IAAKkC,EAAQK,WAAWvC,KAC1B2B,EAAA,cAACyJ,GAAU,CAACnC,UAAWA,EAAW/G,QAFbA,iYCW/BuJ,GAAA,SAAA/K,GAGE,SAAAgL,EAAYzN,GAAZ,IAAA2C,EACEF,EAAAiL,KAAA7K,KAAM7C,IAAM6C,YAHdF,EAAA8H,SAAU,EAqBV9H,EAAAb,YAAc,SAACG,GACb,OAAO/D,OAAAiE,EAAA,WAAAjE,CAAW+D,GAAUG,KAAK,SAAAC,GAC3BM,EAAK8H,SACP9H,EAAKM,SAAS,CAAEzC,MAAO6B,EAAS2J,SAAS,OAK/CrJ,EAAAgL,iBAAmB,SAAC3I,GAClBA,EAAM4I,iBACNjL,EAAKM,SAAS,CAAEyH,SAAS,EAAOlK,WAAOlB,EAAW0M,SAAS,IACrD,IAAApN,EAAA+D,EAAA3D,MAAE6O,EAAAjP,EAAAiP,UAAWC,EAAAlP,EAAAkP,QAASzL,EAAAzD,EAAAyD,QAC5BnE,OAAA8O,EAAA,EAAA9O,CAAc2P,EAAWC,EAASzL,GAASD,KAAK,WAC1CO,EAAK8H,SACP9H,EAAKM,SAAS,CAAEyH,SAAS,EAAMsB,SAAS,KAEzCrJ,EAAKb,cAGVa,EAAAoL,kBAAoB,SAAC/I,GACnBrC,EAAKM,SAAS,CAAE4K,UAAW7I,EAAMY,OAAO5E,SAG1C2B,EAAAqL,gBAAkB,SAAChJ,GACjBrC,EAAKM,SAAS,CAAE6K,QAAS9I,EAAMY,OAAO5E,SAGxC2B,EAAAsL,gBAAkB,SAACjJ,GACjBrC,EAAKM,SAAS,CAAEZ,QAAS2C,EAAMY,OAAO5E,SA7CtC2B,EAAK3D,MAAQ,CACX6O,UAAWlL,EAAK3C,MAAMkO,YAAYC,OAAS,GAC3CL,QAAS5P,OAAAuF,EAAA,UAAAvF,CAAU,oCACnBmE,QAASnE,OAAAuF,EAAA,UAAAvF,CAAU,yCACnB8N,SAAS,EACTtB,SAAS,KA0Hf,OApI+B0D,GAAAX,EAAAhL,GAc7BgL,EAAAnK,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,GAGjBgD,EAAAnK,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GAkCjBgD,EAAAnK,UAAAU,OAAA,WACE,OACEN,EAAA,qBAAKzD,UAAU,uBACbyD,EAAA,qBAAKzD,UAAU,4BACbyD,EAAA,oBAAIzD,UAAU,4BACX/B,OAAAuF,EAAA,UAAAvF,CAAU,oCAIfwF,EAAA,sBAAMzD,UAAU,4BAA4B6D,SAAUjB,KAAK8K,kBACxD9K,KAAK7D,MAAM0L,SACVhH,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,cAAC2K,GAAA,MAAK,CAACC,QAAQ,WACZpQ,OAAAuF,EAAA,wBAAAvF,CACC,+CACA2E,KAAK7D,MAAM6O,aAME,MAApBhL,KAAK7D,MAAMwB,OACVkD,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,cAAC2K,GAAA,MAAK,CAACC,QAAQ,SAASzL,KAAK7D,MAAMwB,QAIvCkD,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,uBAAO6K,QAAQ,iBACZrQ,OAAAuF,EAAA,UAAAvF,CAAU,uCACXwF,EAAA,oBAAIzD,UAAU,aAAW,MAE3ByD,EAAA,uBACEzD,UAAU,uBACVC,SAAU2C,KAAK7D,MAAMgN,QACrBvL,GAAG,gBACHI,SAAUgC,KAAKkL,kBACfnN,UAAU,EACV9B,KAAK,QACLkC,MAAO6B,KAAK7D,MAAM6O,aAGtBnK,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,uBAAO6K,QAAQ,sBACZrQ,OAAAuF,EAAA,UAAAvF,CAAU,qCAEbwF,EAAA,uBACEzD,UAAU,uBACVC,SAAU2C,KAAK7D,MAAMgN,QACrBvL,GAAG,qBACHI,SAAUgC,KAAKmL,gBACflP,KAAK,OACLkC,MAAO6B,KAAK7D,MAAM8O,WAGtBpK,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,uBAAO6K,QAAQ,sBACZrQ,OAAAuF,EAAA,UAAAvF,CAAU,oCACXwF,EAAA,oBAAIzD,UAAU,aAAW,MAE3ByD,EAAA,0BACEzD,UAAU,uBACVC,SAAU2C,KAAK7D,MAAMgN,QACrBvL,GAAG,qBACHI,SAAUgC,KAAKoL,gBACfrN,UAAU,EACVsG,KAAM,EACNlG,MAAO6B,KAAK7D,MAAMqD,WAItBqB,EAAA,cAACK,EAAA,aAAY,CAAC7D,SAAU2C,KAAK7D,MAAMgN,SAChC9N,OAAAuF,EAAA,UAAAvF,CAAU,kCAEZ2E,KAAK7D,MAAMgN,SAAWtI,EAAA,cAAC8K,GAAAnO,EAAe,CAACJ,UAAU,mBAK5DwN,EApIA,CAA+B/J,EAAA,eAsIhB+K,GAAAvQ,OAAAwQ,GAAA,GAAgBlB,mVC/I/B,SAAA/K,GAAA,SAAAkM,IAAA,IAAAhM,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YAkBEF,EAAAiM,gBAAkB,SAACC,GAEjB,MADgD,YAAxBlM,EAAK3C,MAAM8O,UAA6C,UAAnBD,EAItDnL,EAAA,cAAC+K,GAAS,MAFR,QAoCb,OAzDwDM,GAAAJ,EAAAlM,GACtDkM,EAAArL,UAAAuI,kBAAA,WACEhJ,KAAKmM,eAGPL,EAAArL,UAAA2L,mBAAA,SAAmBC,GACjB,IAAMC,EAAWD,EAAU3B,SAAS7G,IAAI,SAAAzC,GAAW,OAAAA,EAAQK,WAARvC,MAC7CkL,EAAOpK,KAAK7C,MAAMuN,SAAS7G,IAAI,SAAAzC,GAAW,OAAAA,EAAQK,WAARvC,MAC5CmN,EAAUlE,YAAcnI,KAAK7C,MAAMgL,WAAcoE,IAAQD,EAAUlC,IACrEpK,KAAKmM,eAITL,EAAArL,UAAA0L,YAAA,WACE,IAAM/B,EAAOpK,KAAK7C,MAAMuN,SAAS7G,IAAI,SAAAzC,GAAW,OAAAA,EAAQK,WAARvC,MAAwBsN,OACxExM,KAAK7C,MAAMgP,YAAY/B,EAAMpK,KAAK7C,MAAMgL,WAAanI,KAAK7C,MAAMgL,UAAUjJ,MAW5E4M,EAAArL,UAAAU,OAAA,eAAArB,EAAAE,KACQyM,EAAgBC,IAAQ1M,KAAK7C,MAAMuN,SAAU,SAAAtJ,GAAW,OAAAA,EAAQK,WAARkL,cACxDC,EAAgBvR,OAAO+O,KAAKqC,GAAe5I,IAAI,SAAA3E,GAAO,MAAC,CAC3DA,IAAGA,EACHsD,KAAMnH,OAAAmG,EAAA,EAAAnG,CAAmBoR,EAAcvN,GAAK,GAAGuC,WAAWwK,SAAU/M,GACpEmI,YAAahM,OAAAmG,EAAA,EAAAnG,CAA0BoR,EAAcvN,GAAK,GAAGuC,WAAWwK,SAAU/M,MAE9E2N,EAAsBC,IAAOF,EAAe,SAAAD,GAChD,OAAAA,EAAYnK,KAAKuK,gBAEnB,OACElM,EAAA,oBAAIzD,UAAU,gCACXyP,EAAoBhJ,IAAI,SAAA8I,GAAe,OACtC9L,EAAA,oBAAI3B,IAAKyN,EAAYzN,KACnB2B,EAAA,oBAAIzD,UAAU,8BAA8BuP,EAAYnK,MAC5B,MAA3BmK,EAAYtF,aACXxG,EAAA,qBACEzD,UAAU,6CACVsM,wBAAyB,CAAEC,OAAQtO,OAAAmG,EAAA,EAAAnG,CAAoBsR,EAAYtF,gBAGvExG,EAAA,cAAC4J,GAAe,CACdtC,UAAWrI,EAAK3C,MAAMgL,UACtBuC,SAAU+B,EAAcE,EAAYzN,OAErCY,EAAKiM,gBAAgBY,EAbczN,UAmBhD4M,EAzDA,CAAwDjL,EAAA,eCKlDmM,GAAqB,CAAEb,YlBiBvB,SAAsB/B,EAAcjC,GACxC,OAAO,SAAChJ,GACN,OAAA9D,OAAA8O,EAAA,EAAA9O,CAAU,CAAE+O,KAAIA,EAAEjC,UAASA,IAAI5I,KAAK,SAAAmL,GAClCvL,EAAS9D,OAAAgP,EAAA,EAAAhP,CAAcqP,EAAUvC,IACjChJ,EAAS9D,OAAA4R,EAAA,EAAA5R,SkBnBA6R,GAAA7R,OAAAkP,EAAA,QAAAlP,CAVS,SAACc,EAAcqO,GAAoB,MAAC,CAC1DE,SAAUrP,OAAA4O,EAAA,kCAAA5O,CACRc,EACAqO,EAASyB,SACTzB,EAASrC,WAAaqC,EAASrC,UAAUjJ,OAQ3C8N,GAFa,CAGbG,IChBI,SAAUC,GAAcjQ,GACpB,IAAAgL,EAAAhL,EAAAgL,UAAWkF,EAAAlQ,EAAAkQ,iBAEnB,OACExM,EAAA,cAAAA,EAAA,cACEA,EAAA,mBAAGzD,UAAU,iBACV/B,OAAAuF,EAAA,UAAAvF,CAAU,kDACXwF,EAAA,cAACyM,EAAA,KAAI,CACHlQ,UAAU,cACVmQ,GAAG,8DACFlS,OAAAuF,EAAA,UAAAvF,CAAU,gBAIfwF,EAAA,uBAAOzD,UAAU,sBACfyD,EAAA,2BACEA,EAAA,wBACEA,EAAA,6BACAA,EAAA,wBAAKxF,OAAAuF,EAAA,UAAAvF,CAAU,sDAEjBwF,EAAA,wBACEA,EAAA,8BACAA,EAAA,wBAAKxF,OAAAuF,EAAA,UAAAvF,CAAU,qDAEjBwF,EAAA,wBACEA,EAAA,6BACAA,EAAA,wBAAKxF,OAAAuF,EAAA,UAAAvF,CAAU,qDAKrBwF,EAAA,qBAAKzD,UAAU,yBACbyD,EAAA,cAACqM,GAAuB,CAACjB,SAAUoB,EAAkBlF,UAAWA,oBCpC3DqF,GAAqC,CAChDC,KAAM9N,EACN+N,KAAM/N,EACNgO,wBAAyBhO,EACzBiO,KAAMjO,EACNkO,MAAOlO,EACPmO,IAAKnO,EACLoO,KAAMpO,EACNqO,GAAIrO,EACJsO,KAAMtO,EACNuO,KAAMvO,EACNwO,WAAYxO,EACZyO,OAAQzO,EACR0O,IAAK1O,EACL2O,OAAQ3O,EACR4O,SAAU5O,EACV6O,OAAQ7O,EACR8O,IAAK9O,EACL+O,KAAM/O,EACNgP,MAAOhP,EACPiP,MAAOjP,EACPkP,QAASlP,EACTmP,WAAYnP,EACZoP,SAAUpP,EACVqP,eAAgBrP,EAChBsP,IAAKtP,oNCwDQ,ICpFGuP,GDoFHC,GAAA9T,OAAA+T,GAAA,GACb/T,OAAAkP,EAAA,QAAAlP,CAAQ,SAACc,GAAiB,MAAC,CACzBkT,WAAYhU,OAAA4O,EAAA,4BAAA5O,CAA4Bc,KAD1Cd,CA5DI,SAAoB8B,GAChB,IAAAkS,EAAAlS,EAAAkS,WAAYlH,EAAAhL,EAAAgL,UAAWmH,EAAAnS,EAAAmS,SAAUC,EAAApS,EAAAoS,OACnCxT,EA8BR,SAAsBsT,EAAsBhC,GAC1C,IAAMmC,EAA8B7P,EAAmBoN,cACjD0C,EAA6BpC,EAAiBN,cAE9C2C,EAAqBL,EACxBM,OAAO,SAAAC,GAAK,OAAApC,GAAmBoC,EAAE7C,iBAArByC,IACZ3L,IAAI,SAAA+L,GAAK,MAAC,CACT9R,MAAOzC,OAAAmG,EAAA,EAAAnG,CAAgBuU,GACvBzR,MAAOyR,EAAE7C,cACT8C,cAAeD,KAGfE,OAAmBrT,EASvB,OANEgT,IAA+BD,GAC/BE,EAAmBK,KAAK,SAAAH,GAAK,OAAAA,EAAEzR,QAAFsR,MAE7BK,EAAmBL,GAGd,CACLC,mBAAkBA,EAClBI,iBAAgBA,GArDZE,CAAAX,EAD2ClS,EAAAkQ,kBACzCqC,EAAA3T,EAAA2T,mBAAoBI,EAAA/T,EAAA+T,iBAS5B,OACEjP,EAAA,cAAAA,EAAA,cACEA,EAAA,oBAAIzD,UAAU,8BAA8B/B,OAAAuF,EAAA,UAAAvF,CAAU,gCACtDwF,EAAA,qBAAAoP,YAAe,mBACbpP,EAAA,cAACkD,EAAAvG,EAAM,CACLJ,UAAU,cACVY,SAbe,SAACkS,GACtBX,EAAOvQ,KAAImR,MAAA,GACNb,GAAQ,CACXc,MAAKD,MAAA,GAAOb,EAASc,OAAK,CAAEnE,SAAUiE,EAAUL,oBAW5CnR,QAASgR,EACTW,YAAahV,OAAAuF,EAAA,UAAAvF,CAAU,oDACvB8C,MAAO2R,KAGVA,GACCjP,EAAA,qBAAKzD,UAAU,yBACbyD,EAAA,cAACqM,GAAuB,CAACjB,SAAU6D,EAAkB3H,UAAWA,8YE1B1E,SAAAvI,GAAA,SAAA0Q,IAAA,IAAAxQ,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA8H,SAAU,EACV9H,EAAA3D,MAAe,CACbgN,SAAS,EACT3N,KAAM,KACN+U,QAAQ,EACR1I,SAAS,GA8BX/H,EAAA0Q,aAAe,SAAChV,GACdsE,EAAKM,SAAS,CAAE5E,KAAIA,EAAEqM,SAAS,KAGjC/H,EAAA2Q,gBAAkB,SAACnU,GACjBwD,EAAKM,SAAS,CAAE9D,SAAQA,EAAEuL,SAAS,KAGrC/H,EAAAkC,SAAW,WACTlC,EAAKM,SAAS,SAACrE,OAAEK,EAAAL,EAAAK,eAAgBC,EAAAN,EAAAM,oBAAqBb,EAAAO,EAAAP,KAAW,MAAC,CAChEc,SAAUF,EACVZ,KAAyB,mBAAnBY,EAAsCP,OAAOQ,GAAuBb,MAI9EsE,EAAAmB,SAAW,SAAChD,GACVA,EAAE8M,iBAEI,IAAAhP,EAAA+D,EAAA3D,MAAEX,EAAAO,EAAAP,KAEFS,EAFQF,EAAAO,SAGR6B,EAAiB,mBAATlC,EAA4BT,OAAOiB,EAE7CR,IACF6D,EAAKM,SAAS,CAAEmQ,QAAQ,EAAM1I,SAAS,IACvCxM,OAAAqV,GAAA,EAAArV,CAAiB,CACfY,KAAIA,EACJkC,MAAKA,IACJoB,KACD,WACEO,EAAKM,SAAS,CACZmQ,QAAQ,EACRnU,eAAgBH,EAChBI,oBAAqB8B,QAAS1B,EAC9BoL,SAAS,KAGb,WACE/H,EAAKM,SAAS,CACZmQ,QAAQ,UA0GpB,OArL2CI,GAAAL,EAAA1Q,GASzC0Q,EAAA7P,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,EACf5H,KAAK4Q,6BAGPN,EAAA7P,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GAGjB0I,EAAA7P,UAAAmQ,0BAAA,eAAA9Q,EAAAE,KACE3E,OAAAqV,GAAA,EAAArV,GACGkE,KAAK,SAACxD,OAAEE,EAAAF,EAAAE,KAAMkC,EAAApC,EAAAoC,MACP/B,EAAiBH,GAvBP,mBAyBhB6D,EAAKM,SAAS,SAACrE,OAAEP,EAAAO,EAAAP,KAAW,MAAC,CAC3BY,eAAcA,EACdZ,KAAyB,mBAAnBY,EAAsCP,OAAOsC,GAAS3C,EAC5D2N,SAAS,EACT9M,oBAAqB8B,EACrB7B,SAAUF,OAGbd,MAAM,WACLwE,EAAKM,SAAS,CAAE+I,SAAS,OAkD/BmH,EAAA7P,UAAAU,OAAA,WACQ,IAAApF,EAAAiE,KAAA7D,MACJC,EAAAL,EAAAK,eACAZ,EAAAO,EAAAP,KACA2N,EAAApN,EAAAoN,QACA9M,EAAAN,EAAAM,oBACAkU,EAAAxU,EAAAwU,OACAjU,EAAAP,EAAAO,SACAuL,EAAA9L,EAAA8L,QAGIrL,EACJF,IAAaF,GACC,mBAAbE,GAAiCT,OAAOL,KAAUa,EAE/CK,EAAuB,mBAAbJ,GAAiCjB,OAAAwV,GAAA,EAAAxV,CAAaG,GAE9D,OACEqF,EAAA,oBAAIzD,UAAU,gCACZyD,EAAA,wBACEA,EAAA,oBAAIzD,UAAU,6BACZyD,EAAA,wBACEA,EAAA,qBAAKzD,UAAU,uBACbyD,EAAA,qBAAKzD,UAAU,4BACbyD,EAAA,oBACEzD,UAAU,2BACVM,MAAOrC,OAAAuF,EAAA,UAAAvF,CAAU,mCAChBA,OAAAuF,EAAA,UAAAvF,CAAU,mCAGbwF,EAAA,qBAAKzD,UAAU,wBACbyD,EAAA,cAACiQ,GAAA,iBAAgB,CACfC,eAAgB1V,OAAAuF,EAAA,UAAAvF,CAAU,wCAC1BuC,GAAG,uCACH0I,OAAQ,CACN0K,KACEnQ,EAAA,cAACyM,EAAA,KAAI,CAACC,GAAG,0DACNlS,OAAAuF,EAAA,UAAAvF,CAAU,kBAKnBwF,EAAA,mBAAGzD,UAAU,cACV/B,OAAAuF,EAAA,UAAAvF,CAAU,4CAKjBwF,EAAA,qBAAKzD,UAAU,6BACZ+L,EACCtI,EAAA,cAAC8K,GAAAnO,EAAe,MAEhBqD,EAAA,sBAAMI,SAAUjB,KAAKiB,UACnBJ,EAAA,cAACzC,GAAA,EAA8B,CAC7BE,WAAW,EACXf,SAAUyC,KAAKyQ,gBACfnU,SAAuB,qBAAbA,IAEZuE,EAAA,cAAClE,GAAA,EAAmB,CAClBS,UAAU,aACV5B,KAAMA,EACNgB,UAAWA,EACXE,QAASA,EACTY,aAAc0C,KAAKwQ,aACnBjT,SAAUyC,KAAKyQ,gBACfnU,SAAuB,mBAAbA,IAEXE,GACCqE,EAAA,qBAAKzD,UAAU,kBACbyD,EAAA,mBAAGzD,UAAU,iBACV/B,OAAAuF,EAAA,UAAAvF,CAAU,kCAEbwF,EAAA,cAAC8K,GAAAnO,EAAe,CAACJ,UAAU,eAAe+L,QAASoH,IACnD1P,EAAA,cAACK,EAAA,aAAY,CAAC7D,SAAUkT,IAAW7T,GAChCrB,OAAAuF,EAAA,UAAAvF,CAAU,SAEbwF,EAAA,cAACK,EAAA,gBAAe,CAAC9D,UAAU,cAAcK,QAASuC,KAAKgC,UACpD3G,OAAAuF,EAAA,UAAAvF,CAAU,aAIfkV,IAAWpH,GAAWtB,GACtBhH,EAAA,qBAAKzD,UAAU,kBACbyD,EAAA,sBAAMzD,UAAU,gBACdyD,EAAA,cAACgJ,EAAArM,EAAgB,CAACJ,UAAU,iBAC3B/B,OAAAuF,EAAA,UAAAvF,CAAU,kCAcvCiV,EArLA,CAA2CzP,EAAA,yBCJrC,SAAUoQ,GAAeC,GAC7B,OAAO7V,OAAAiE,EAAA,QAAAjE,CAAQ,yBAA0B,CAAE6V,QAAOA,IAC/C3R,KAAK,SAACxD,GAAoB,OAAlBA,EAAAoV,cACR7V,MAAM8V,GAAA,IFvBX,SAAkBlC,GAChBA,EAAA,cACAA,EAAA,sBACAA,EAAA,gBACAA,EAAA,gBAJF,CAAkBA,QAAQ,8DGgBZ,SAAUmC,GAAiClU,GAC/C,IAAAmU,EAAAnU,EAAAmU,IAAKC,EAAApU,EAAAoU,SAAUC,EAAArU,EAAAqU,YACjB7Q,EAAStF,OAAAuF,EAAA,UAAAvF,CACb,WACAiW,IAAQpC,GAASuC,OAAS,gBAAkB,gBAC5C,cACAD,EAAc,OAAS,UAGzB,OACE3Q,EAAA,cAAC6Q,GAAAlU,EAAW,CAACmD,OAAQA,EAAQgR,QAASxU,EAAM6E,SAAUf,SAAU9D,EAAM8D,SAAU2Q,KAAK,UAClF,SAAC7V,OAAE8V,EAAA9V,EAAA8V,aAAcC,EAAA/V,EAAA+V,aAAcC,EAAAhW,EAAAgW,WAAiB,OAC/ClR,EAAA,sBAAMzD,UAAU,aAAa6D,SAAU6Q,GACrCjR,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,wBAAKF,IAGPE,EAAA,qBAAKzD,UAAU,8BAA8BmU,GAE7C1Q,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,cAAC8K,GAAAnO,EAAe,CAACJ,UAAU,eAAe+L,QAAS4I,IACnDlR,EAAA,cAACK,EAAA,aAAY,CAAC7D,SAAU0U,IAAe5U,EAAM6U,aAC1C3W,OAAAuF,EAAA,UAAAvF,CAAU,qCAEbwF,EAAA,cAACK,EAAA,gBAAe,CAACzD,QAASoU,GAAexW,OAAAuF,EAAA,UAAAvF,CAAU,mjBCnB/D,SAAAuE,GAGE,SAAAqS,EAAY9U,GAAZ,IAAA2C,EACEF,EAAAiL,KAAA7K,KAAM7C,IAAM6C,YAKdF,EAAAoS,kBAAoB,SAACC,EAAkBhU,GACrC2B,EAAKM,SAAS,SAACrE,SAAEqW,EAAArW,EAAAqW,SAAe,MAAC,CAC/BA,SAAQC,MAAA,GACHD,IAAQE,EAAA,GAAAA,EACVH,GAAUhU,EAAKmU,QAKtBxS,EAAAgL,iBAAmB,WACjBhL,EAAK3C,MAAM8D,SAASnB,EAAK3D,MAAMiW,SAAUtS,EAAK3C,MAAMoV,kBAAkBrT,MAGxEY,EAAAkS,UAAY,WACV,OAAO3W,OAAOiL,OAAOxG,EAAK3D,MAAMiW,UAAUI,OACxC,SAACC,EAAQtU,GAAU,OAAAsU,GAAUtU,EAAMxC,OAAhB,IACnB,IAnBFmE,EAAK3D,MAAQ,CAAEiW,SAAUjV,EAAMoV,qBAyCnC,OA7CUG,GAAAT,EAAArS,GA2BRqS,EAAAxR,UAAAU,OAAA,WACQ,IAAApF,EAAAiE,KAAA7C,MAAEmU,EAAAvV,EAAAuV,IAAKC,EAAAxV,EAAAwV,SAAUgB,EAAAxW,EAAAwW,kBACfH,EAAApS,KAAA7D,MAAAiW,SAER,OACEvR,EAAA,cAACwQ,GAAgC,CAC/BC,IAAKA,EACLU,UAAWhS,KAAKgS,UAChBhQ,SAAUhC,KAAK7C,MAAM6E,SACrBf,SAAUjB,KAAK8K,iBACf0G,YAAae,EAAkBrT,KAC9BqS,EAAS,CACRa,SAAQA,EACRO,cAAe3S,KAAKkS,sBAK9BD,EA/CA,CAEUpR,EAAA,qCCNI,SAAU+R,GAAqBzV,GACnC,IAAA0V,EAAA1V,EAAA0V,yBAA0BvB,EAAAnU,EAAAmU,IAAKwB,EAAA3V,EAAA2V,YAEvC,OACEjS,EAAA,uBAAOzD,UAAU,kCACfyD,EAAA,2BACEA,EAAA,wBACEA,EAAA,wBAAKxF,OAAAuF,EAAA,UAAAvF,CAAU,6CACdwX,EAAyBhP,IAAI,SAAAkP,GAAK,OACjClS,EAAA,oBAAI3B,IAAK6T,GADwBA,KAGnClS,EAAA,oBAAIzD,UAAU,4BACX/B,OAAAuF,EAAA,UAAAvF,CAAU,6CAEbwF,EAAA,oBAAIzD,UAAU,sBACX/B,OAAAuF,EAAA,UAAAvF,CAAU,iDAIjBwF,EAAA,2BAC0B,IAAvBiS,EAAYnX,OACXkF,EAAA,oBAAAoP,YAAc,6BACZpP,EAAA,oBAAImS,QAAS,EAAIH,EAAyBlX,QACvCN,OAAAuF,EAAA,UAAAvF,CAAU,qCAAsCiW,KAIrDwB,EAAYjP,IAAI,SAAC9H,OAAEmD,EAAAnD,EAAAmD,IAAK+T,EAAAlX,EAAAkX,kBAAwB,OAC9CpS,EAAA,oBAAAoP,YAAc,0BAA0B/Q,IAAKA,GAC3C2B,EAAA,oBAAIzD,UAAU,uBAAuBM,MAAOwB,GACzCA,GAEF+T,EAAkBpP,IAAI,SAAA1F,GAAS,OAC9B0C,EAAA,oBAAIzD,UAAU,uBAAuB8B,IAAKf,EAAOT,MAAOS,GAD1BA,KAKhC0C,EAAA,oBAAIzD,UAAU,cAAa6S,YAAW,gCACpCpP,EAAA,cAACK,EAAA,WAAU,CAACzD,QAAS,WAAM,OAAAN,EAAM+V,OAANhU,KACzB2B,EAAA,cAACsS,GAAA3V,EAAQ,QAGbqD,EAAA,oBAAIzD,UAAU,cAAa6S,YAAW,kCACpCpP,EAAA,cAACK,EAAA,aAAY,CAACzD,QAAS,WAAM,OAAAN,EAAMiW,SAANlU,qCC5CvC,SAAUmU,GACdlW,GAEQ,IAAAmG,EAAAnG,EAAAmG,UAAWgQ,EAAAnW,EAAAmW,KAAM1V,EAAAT,EAAAS,GAAI2V,EAAApW,EAAAoW,WAAYC,EAAArW,EAAAqW,UAAWb,EAAAxV,EAAAwV,cAAec,EAAAtW,EAAAsW,QAAStV,EAAAhB,EAAAgB,MAE5E,OACE0C,EAAA,qBAAKzD,UAAU,eACbyD,EAAA,uBAAOzD,UAAU,sBAAsBsO,QAAS9N,GAC7CvC,OAAAuF,EAAA,UAAAvF,CAAU,8BAA+BuC,GAC1CiD,EAAA,oBAAIzD,UAAU,0BAAwB,KACrCkW,GAAQzS,EAAA,cAAC6S,GAAAlW,EAAW,CAACmW,QAASL,EAAMM,UAAU,WAEhDL,EACC1S,EAAA,0BACEzD,UAAU,uBACVQ,GAAIA,EACJ4V,UAAWA,GAAa,IACxBxV,SAAU,SAAAC,GAAK,OAAA0U,EAAcc,EAASxV,EAAEC,cAAzBC,QACfJ,UAAU,EACVsG,KAAM,EACNlG,MAAOA,IAGT0C,EAAA,uBACEyC,UAAWA,EACXlG,UAAU,oBACVQ,GAAIA,EACJ4V,UAAWA,GAAa,IACxBhR,KAAM5E,EACNI,SAAU,SAAAC,GAAK,OAAA0U,EAAcc,EAASxV,EAAEC,cAAzBC,QACfyT,KAAM,GACN3V,KAAK,OACLkC,MAAOA,KCtCH,SAAU0V,GAAe1W,GAC7B,IAAAiV,EAAAjV,EAAAiV,SAAUO,EAAAxV,EAAAwV,cAElB,OACE9R,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACwS,GAAsB,CACrB/P,WAAW,EACXgQ,KAAMjY,OAAAuF,EAAA,UAAAvF,CAAU,+CAChBuC,GAAG,aACH+U,cAAeA,EACfc,QAAQ,MACRtV,MAAOiU,EAASlT,MAElB2B,EAAA,cAACwS,GAAsB,CACrBC,KAAMjY,OAAAuF,EAAA,UAAAvF,CAAU,gEAChBuC,GAAG,wBACH2V,YAAY,EACZZ,cAAeA,EACfc,QAAQ,sBACRtV,MAAOiU,EAAS0B,qCC4BT,IAAAC,GAAA1Y,OAAA2Y,GAAA,GAzCT,SAAoB7W,GAEtB,IAAAmU,EAAAnU,EAAAmU,IACY2C,EAAA9W,EAAA+W,SAAAD,mBACZE,EAAAhX,EAAAgX,gBAEIC,EAAaH,GAA0C,IAApBE,EACzC,OACEtT,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC2K,GAAA,MAAK,CAACpO,UAAU,gCAAgCqO,QAAQ,QACvD5K,EAAA,cAACiQ,GAAA,iBAAgB,CACfC,eAAgB1V,OAAAuF,EAAA,UAAAvF,CAAU,0BAA0BiW,EAAG,SACvD1T,GAAI,0BAA0B0T,EAAG,QACjChL,OAAQ,CACN0K,KACEnQ,EAAA,cAACyM,EAAA,KAAI,CAACvK,OAAO,SAASwK,GAAG,0CACtBlS,OAAAuF,EAAA,UAAAvF,CAAU,mBAOrBwF,EAAA,qBAAKzD,UAAU,gDACbyD,EAAA,oBAAIzD,UAAU,kBACX/B,OAAAuF,EAAA,UAAAvF,CACC,WACAiW,IAAQpC,GAASuC,OAAS,gBAAkB,gBAC5C,gBAGH2C,GACCvT,EAAA,cAACK,EAAA,OAAM,CAAA+O,YAAW,uBAAuBxS,QAASN,EAAMkX,UACrDhZ,OAAAuF,EAAA,UAAAvF,CAAU,6PC9BT,SAAUiZ,GAAiBnX,GAC/B,IAAA2V,EAAA3V,EAAA2V,YAAayB,EAAApX,EAAAoX,iBAAkBpL,EAAAhM,EAAAgM,QACvC,OACEtI,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACkT,GAAS,CACRzC,IAAKpC,GAASsF,MACdL,gBAAiBrB,EAAYnX,OAC7B0Y,SAAUlX,EAAMkX,WAGlBxT,EAAA,cAAC8K,GAAAnO,EAAe,CAAC2L,QAASA,GACxBtI,EAAA,cAAC+R,GAAoB,CACnBC,yBAA0B,GAC1BvB,IAAKpC,GAASsF,MACd1B,YAAaA,EAAYjP,IAAI,SAAC9H,GAAY,MAAC,CACzCmD,IAD8BnD,EAAAmD,IAE9B+T,kBAAmB,MAErBG,SAAUjW,EAAMiW,SAChBF,OAAQ/V,EAAM+V,UAIjBqB,GACC1T,EAAA,cAAC4T,GAAwB,CACvBnD,IAAKpC,GAASsF,MACdjC,kBAAmBgC,EACnBvS,SAAU7E,EAAM6E,SAChBf,SAAU9D,EAAM8D,UACf,SAAAyT,GAAc,OAAA7T,EAAA,cAACgT,GAAcc,GAAA,GAAfD,2iBC/BzB,SAAA9U,GAAA,SAAAgV,IAAA,IAAA9U,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA8H,SAAU,EACV9H,EAAA3D,MAAe,GAUf2D,EAAA4I,aAAe,WACb5I,EAAKM,SAAS,CACZmU,sBAAkB9X,KAItBqD,EAAA+U,aAAe,WACb/U,EAAKM,SAAS,CAAEmU,iBAAkB,CAAErV,IAAK,GAAI4U,oBAAqB,OAGpEhU,EAAAgV,WAAa,SAACC,GACZ,IAAMR,EAAmBzU,EAAK3C,MAAM2V,YAAY/C,KAAK,SAAAnV,GAAK,OAAAA,EAAEsE,MAAF6V,IAC1DjV,EAAKM,SAAS,CAAEmU,iBAAgBA,KAGlCzU,EAAAQ,aAAe,SAAC0U,EAAgCxD,GAC9C,IRPqCpW,EQUrC,OAHaoW,GRPwBpW,EQQT6Z,MAAA,CAAGC,OAAQF,EAAO9V,KAAQ8V,GAAM,CAAE9V,IAAKsS,IRP9DnW,OAAAiE,EAAA,KAAAjE,CAAK,iCAAkCD,GAAME,MAAM8V,GAAA,IALtD,SAAmChW,GACvC,OAAOC,OAAAiE,EAAA,KAAAjE,CAAK,iCAAkCD,GAAME,MAAM8V,GAAA,GQYpD+D,CAAyBH,IACjBzV,KAAKO,EAAK3C,MAAMiY,qBAAqB7V,KAAK,WAChDO,EAAK8H,SACP9H,EAAKM,SAAS,CAAEmU,sBAAkB9X,SAqB1C,OAtDsC4Y,GAAAT,EAAAhV,GAIpCgV,EAAAnU,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,GAGjBgN,EAAAnU,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GA6BjBgN,EAAAnU,UAAAU,OAAA,WACQ,IAAApF,EAAAiE,KAAA7C,MAAE2V,EAAA/W,EAAA+W,YAAa3J,EAAApN,EAAAoN,QACboL,EAAAvU,KAAA7D,MAAAoY,iBACR,OACE1T,EAAA,cAACyT,GAAgB,CACfxB,YAAaA,EACbyB,iBAAkBA,EAClBpL,QAASA,EACTnH,SAAUhC,KAAK0I,aACf2L,SAAUrU,KAAK6U,aACfzB,SAAUpT,KAAK7C,MAAMiW,SACrBF,OAAQlT,KAAK8U,WACb7T,SAAUjB,KAAKM,gBAIvBsU,EAtDA,CAAsC/T,EAAA,eCNxB,SAAUyU,GAAmBnY,GACjC,IAAAiV,EAAAjV,EAAAiV,SAAUO,EAAAxV,EAAAwV,cAElB,OACE9R,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACwS,GAAsB,CACrB/P,WAAW,EACXgQ,KAAMjY,OAAAuF,EAAA,UAAAvF,CAAU,mDAChBuC,GAAG,iBACH4V,UAAW,IACXb,cAAeA,EACfc,QAAQ,MACRtV,MAAOiU,EAASlT,MAElB2B,EAAA,cAACwS,GAAsB,CACrBC,KACEzS,EAAA,cAACiQ,GAAA,iBAAgB,CACfC,eAAgB1V,OAAAuF,EAAA,UAAAvF,CAAU,kDAC1BuC,GAAG,iDACH0I,OAAQ,CAAEiP,QAAS,+CAGvB3X,GAAG,gBACH4V,UAAW,IACXb,cAAeA,EACfc,QAAQ,MACRtV,MAAOiU,EAASoD,MAElB3U,EAAA,cAACwS,GAAsB,CACrBzV,GAAG,wBACH2V,YAAY,EACZZ,cAAeA,EACfc,QAAQ,sBACRtV,MAAOiU,EAAS0B,4OCxBV,SAAU2B,GAAqBtY,GACnC,IAAA2V,EAAA3V,EAAA2V,YAAayB,EAAApX,EAAAoX,iBAAkBpL,EAAAhM,EAAAgM,QACvC,OACEtI,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACkT,GAAS,CACRzC,IAAKpC,GAASwG,UACdvB,gBAAiBrB,EAAYnX,OAC7B0Y,SAAUlX,EAAMkX,WAGlBxT,EAAA,cAAC8K,GAAAnO,EAAe,CAAC2L,QAASA,GACxBtI,EAAA,cAAC+R,GAAoB,CACnBC,yBAA0B,CACxBxX,OAAAuF,EAAA,UAAAvF,CAAU,sDAEZiW,IAAKpC,GAASwG,UACd5C,YAAaA,EAAYjP,IAAI,SAAC9H,GAAiB,MAAC,CAC9CmD,IAD8BnD,EAAAmD,IAE9B+T,kBAAmB,CAFgBlX,EAAAyZ,QAIrCpC,SAAUjW,EAAMiW,SAChBF,OAAQ/V,EAAM+V,UAIjBqB,GACC1T,EAAA,cAAC4T,GAAwB,CACvBnD,IAAKpC,GAASwG,UACdnD,kBAAmBgC,EACnBvS,SAAU7E,EAAM6E,SAChBf,SAAU9D,EAAM8D,UACf,SAAAyT,GAAc,OAAA7T,EAAA,cAACyU,GAAkBK,GAAA,GAAnBjB,2iBC/BzB,SAAA9U,GAAA,SAAAgW,IAAA,IAAA9V,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA8H,SAAU,EACV9H,EAAA3D,MAAe,GAUf2D,EAAA4I,aAAe,WACb5I,EAAKM,SAAS,CACZmU,sBAAkB9X,KAItBqD,EAAA+U,aAAe,WACb/U,EAAKM,SAAS,CAAEmU,iBAAkB,CAAErV,IAAK,GAAIsW,IAAK,GAAI1B,oBAAqB,OAG7EhU,EAAAgV,WAAa,SAACC,GACZ,IAAMR,EAAmBzU,EAAK3C,MAAM2V,YAAY/C,KAAK,SAAAnV,GAAK,OAAAA,EAAEsE,MAAF6V,IAC1DjV,EAAKM,SAAS,CAAEmU,iBAAgBA,KAGlCzU,EAAAQ,aAAe,SAAC0U,EAAoCxD,GAClD,IXDFpW,EWIE,OAHaoW,GXDfpW,EWEkCya,MAAA,CAAGX,OAAQF,EAAO9V,KAAQ8V,GAAM,CAAE9V,IAAKsS,IXAlEnW,OAAAiE,EAAA,KAAAjE,CAAK,qCAAsCD,GAAME,MAAM8V,GAAA,IAP1D,SAAuChW,GAC3C,OAAOC,OAAAiE,EAAA,KAAAjE,CAAK,qCAAsCD,GAAME,MAAM8V,GAAA,GWOxD0E,CAA6Bd,IAE9BzV,KAAK,WACAO,EAAK8H,SACP9H,EAAKM,SAAS,CAAEmU,sBAAkB9X,MAGrC8C,KAAKO,EAAK3C,MAAMiY,wBAmBvB,OAxD0CW,GAAAH,EAAAhW,GAIxCgW,EAAAnV,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,GAGjBgO,EAAAnV,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GA+BjBgO,EAAAnV,UAAAU,OAAA,WACQ,IAAApF,EAAAiE,KAAA7C,MAAE2V,EAAA/W,EAAA+W,YAAa3J,EAAApN,EAAAoN,QACboL,EAAAvU,KAAA7D,MAAAoY,iBACR,OACE1T,EAAA,cAAC4U,GAAoB,CACnB3C,YAAaA,EACbyB,iBAAkBA,EAClBpL,QAASA,EACTnH,SAAUhC,KAAK0I,aACf2L,SAAUrU,KAAK6U,aACfzB,SAAUpT,KAAK7C,MAAMiW,SACrBF,OAAQlT,KAAK8U,WACb7T,SAAUjB,KAAKM,gBAIvBsV,EAxDA,CAA0C/U,EAAA,oCCE5B,SAAUmV,GAAYja,OAAE6B,EAAA7B,EAAA6B,GAAIwV,EAAArX,EAAAqX,SAAUpR,EAAAjG,EAAAiG,SAAUiU,EAAAla,EAAAka,aAC5D,OACEpV,EAAA,cAACqV,GAAA1Y,EAAY,CACX2Y,kBAAmB9a,OAAAuF,EAAA,UAAAvF,CAAU,UAC7B+a,YAAaxY,EACb+C,OAAQtF,OAAAuF,EAAA,UAAAvF,CAAU,wCAClBgb,eAAe,EACf1E,QAAS3P,EACTsU,UAAWlD,GACXvS,EAAA,cAAAA,EAAA,cACEA,EAAA,mBAAGzD,UAAU,iBACXyD,EAAA,cAACiQ,GAAA,iBAAgB,CACfC,eAAgB1V,OAAAuF,EAAA,UAAAvF,CAAU,yCAC1BuC,GAAG,wCACH0I,OAAQ,CAAE1I,GAAIiD,EAAA,uBAAIjD,OAxB9B,SAAiCqY,GAC/B,YAAqBxZ,IAAjBwZ,EACKpV,EAAA,uBAAIxF,OAAAuF,EAAA,UAAAvF,CAAU,0CAGhB4a,EACLpV,EAAA,uBAAIxF,OAAAuF,EAAA,wBAAAvF,CAAwB,qCAAsC4a,GAAmB,KACnF,KAoBGM,CAAwBN,KC7BnB,SAAUO,GAAgBrZ,GAC9B,IAAAiV,EAAAjV,EAAAiV,SAAUO,EAAAxV,EAAAwV,cAElB,OACE9R,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACwS,GAAsB,CACrB/P,WAAW,EACXgQ,KAAMjY,OAAAuF,EAAA,UAAAvF,CAAU,gDAChBuC,GAAG,cACH+U,cAAeA,EACfc,QAAQ,MACRtV,MAAOiU,EAASlT,MAElB2B,EAAA,cAACwS,GAAsB,CACrBC,KACEzS,EAAA,cAAAA,EAAA,cACGxF,OAAAuF,EAAA,UAAAvF,CAAU,gDACXwF,EAAA,yBACAA,EAAA,6DACAA,EAAA,yBACAA,EAAA,yBACCxF,OAAAuF,EAAA,UAAAvF,CAAU,gDACXwF,EAAA,yBACAA,EAAA,oDAGJjD,GAAG,aACH4V,UAAW,IACXb,cAAeA,EACfc,QAAQ,MACRtV,MAAOiU,EAASoD,MAElB3U,EAAA,cAACwS,GAAsB,CACrBzV,GAAG,SACH4V,UAAW,GACXb,cAAeA,EACfc,QAAQ,QACRtV,MAAOiU,EAASqE,QAElB5V,EAAA,cAACwS,GAAsB,CACrBzV,GAAG,cACH2V,YAAY,EACZZ,cAAeA,EACfc,QAAQ,aACRtV,MAAOiU,EAASsE,mOClCV,SAAUC,GAAkBxZ,GAChC,IAAA2V,EAAA3V,EAAA2V,YAAayB,EAAApX,EAAAoX,iBAAkBpL,EAAAhM,EAAAgM,QACvC,OACEtI,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACkT,GAAS,CACRzC,IAAKpC,GAAS0H,OACdzC,gBAAiBrB,EAAYnX,OAC7B0Y,SAAUlX,EAAMkX,WAGlBxT,EAAA,cAAC8K,GAAAnO,EAAe,CAAC2L,QAASA,GACxBtI,EAAA,cAAC+R,GAAoB,CACnBC,yBAA0B,CACxBxX,OAAAuF,EAAA,UAAAvF,CAAU,kDACVA,OAAAuF,EAAA,UAAAvF,CAAU,+CAEZiW,IAAKpC,GAAS0H,OACd9D,YAAaA,EAAYjP,IAAI,SAAC9H,OAAEmD,EAAAnD,EAAAmD,IAAKuX,EAAA1a,EAAA0a,MAAiB,MAAC,CACrDvX,IAAGA,EACH+T,kBAAmB,CAFuBlX,EAAAyZ,IAEjBiB,MAE3BrD,SAAUjW,EAAMiW,SAChBF,OAAQ/V,EAAM+V,UAIjBqB,GACC1T,EAAA,cAAC4T,GAAwB,CACvBnD,IAAKpC,GAAS0H,OACdrE,kBAAmBgC,EACnBvS,SAAU7E,EAAM6E,SAChBf,SAAU9D,EAAM8D,UACf,SAAAyT,GAAc,OAAA7T,EAAA,cAAC2V,GAAeK,GAAA,GAAhBnC,2iBCnCzB,SAAA9U,GAAA,SAAAkX,IAAA,IAAAhX,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA8H,SAAU,EACV9H,EAAA3D,MAAe,GAUf2D,EAAA4I,aAAe,WACb5I,EAAKM,SAAS,CACZmU,sBAAkB9X,KAItBqD,EAAA+U,aAAe,WACb/U,EAAKM,SAAS,CAAEmU,iBAAkB,CAAErV,IAAK,GAAIuX,MAAO,GAAIjB,IAAK,GAAIkB,WAAY,OAG/E5W,EAAAgV,WAAa,SAACC,GACZ,IAAMR,EAAmBzU,EAAK3C,MAAM2V,YAAY/C,KAAK,SAAAnV,GAAK,OAAAA,EAAEsE,MAAF6V,IAC1DjV,EAAKM,SAAS,CAAEmU,iBAAgBA,KAGlCzU,EAAAQ,aAAe,SAAC0U,EAAiCxD,GAC/C,IffsCpW,EekBtC,OAHaoW,GffyBpW,EegBT2b,MAAA,CAAG7B,OAAQF,EAAO9V,KAAQ8V,GAAM,CAAE9V,IAAKsS,Iff/DnW,OAAAiE,EAAA,KAAAjE,CAAK,kCAAmCD,GAAME,MAAM8V,GAAA,IALvD,SAAoChW,GACxC,OAAOC,OAAAiE,EAAA,KAAAjE,CAAK,kCAAmCD,GAAME,MAAM8V,GAAA,GeoBrD4F,CAA0BhC,IAE3BzV,KAAK,WACAO,EAAK8H,SACP9H,EAAKM,SAAS,CAAEmU,sBAAkB9X,MAGrC8C,KAAKO,EAAK3C,MAAMiY,wBAmBvB,OAxDuC6B,GAAAH,EAAAlX,GAIrCkX,EAAArW,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,GAGjBkP,EAAArW,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GA+BjBkP,EAAArW,UAAAU,OAAA,WACQ,IAAApF,EAAAiE,KAAA7C,MAAE2V,EAAA/W,EAAA+W,YAAa3J,EAAApN,EAAAoN,QACboL,EAAAvU,KAAA7D,MAAAoY,iBACR,OACE1T,EAAA,cAAC8V,GAAiB,CAChB7D,YAAaA,EACbyB,iBAAkBA,EAClBpL,QAASA,EACTnH,SAAUhC,KAAK0I,aACf2L,SAAUrU,KAAK6U,aACfzB,SAAUpT,KAAK7C,MAAMiW,SACrBF,OAAQlT,KAAK8U,WACb7T,SAAUjB,KAAKM,gBAIvBwW,EAxDA,CAAuCjW,EAAA,eCkBxB,IAAAqW,GAAArW,EAAA,KAzBT,SAA0B1D,GACtB,IAAAiV,EAAAjV,EAAAiV,SAAUO,EAAAxV,EAAAwV,cAElB,OACE9R,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACwS,GAAsB,CACrB/P,WAAW,EACXgQ,KAAMjY,OAAAuF,EAAA,UAAAvF,CAAU,gDAChBuC,GAAG,cACH+U,cAAeA,EACfc,QAAQ,MACRtV,MAAOiU,EAASlT,MAElB2B,EAAA,cAACwS,GAAsB,CACrBC,KAAMjY,OAAAuF,EAAA,UAAAvF,CAAU,iEAChBuC,GAAG,wBACH2V,YAAY,EACZZ,cAAeA,EACfc,QAAQ,sBACRtV,MAAOiU,EAAS0B,0OCVV,SAAUqD,GAAkBha,GAChC,IAAA2V,EAAA3V,EAAA2V,YAAayB,EAAApX,EAAAoX,iBAAkBpL,EAAAhM,EAAAgM,QACvC,OACEtI,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACkT,GAAS,CACRzC,IAAKpC,GAASuC,OACd0C,gBAAiBrB,EAAYnX,OAC7B0Y,SAAUlX,EAAMkX,WAGlBxT,EAAA,cAAC8K,GAAAnO,EAAe,CAAC2L,QAASA,GACxBtI,EAAA,cAAC+R,GAAoB,CACnBC,yBAA0B,GAC1BvB,IAAKpC,GAASuC,OACdqB,YAAaA,EAAYjP,IAAI,SAAC9H,GAAY,MAAC,CACzCmD,IAD8BnD,EAAAmD,IAE9B+T,kBAAmB,MAErBG,SAAUjW,EAAMiW,SAChBF,OAAQ/V,EAAM+V,UAIjBqB,GACC1T,EAAA,cAAC4T,GAAwB,CACvBnD,IAAKpC,GAASuC,OACdc,kBAAmBgC,EACnBvS,SAAU7E,EAAM6E,SAChBf,SAAU9D,EAAM8D,UACf,SAAAyT,GAAc,OAAA7T,EAAA,cAACqW,GAAeE,GAAA,GAAhB1C,8iBC/BzB,SAAA9U,GAAA,SAAAyX,IAAA,IAAAvX,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA8H,SAAU,EACV9H,EAAA3D,MAAe,GAUf2D,EAAAgV,WAAa,SAACC,GACZ,IAAMR,EAAmBzU,EAAK3C,MAAM2V,YAAY/C,KAAK,SAAAnV,GAAK,OAAAA,EAAEsE,MAAF6V,IAC1DjV,EAAKM,SAAS,CAAEmU,iBAAgBA,KAGlCzU,EAAAQ,aAAe,SAAC0U,EAAiCxD,GAC/C,IlBqBsCpW,EkBlBtC,OAHaoW,GlBqByBpW,EkBpBTkc,MAAA,CAAGpC,OAAQF,EAAO9V,KAAQ8V,GAAM,CAAE9V,IAAKsS,IlBqB/DnW,OAAAiE,EAAA,KAAAjE,CAAK,kCAAmCD,GAAME,MAAM8V,GAAA,IALvD,SAAoChW,GACxC,OAAOC,OAAAiE,EAAA,KAAAjE,CAAK,kCAAmCD,GAAME,MAAM8V,GAAA,GkBhBrDmG,CAA0BvC,IAClBzV,KAAKO,EAAK3C,MAAMiY,qBAAqB7V,KAAK,WAChDO,EAAK8H,SACP9H,EAAKM,SAAS,CAAEmU,sBAAkB9X,OAKxCqD,EAAA4I,aAAe,WACb5I,EAAKM,SAAS,CACZmU,sBAAkB9X,KAItBqD,EAAA+U,aAAe,WACb/U,EAAKM,SAAS,CAAEmU,iBAAkB,CAAErV,IAAK,GAAI4U,oBAAqB,SAmBtE,OAtDuC0D,GAAAH,EAAAzX,GAIrCyX,EAAA5W,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,GAGjByP,EAAA5W,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GA6BjByP,EAAA5W,UAAAU,OAAA,WACQ,IAAApF,EAAAiE,KAAA7C,MAAE2V,EAAA/W,EAAA+W,YAAa3J,EAAApN,EAAAoN,QACboL,EAAAvU,KAAA7D,MAAAoY,iBACR,OACE1T,EAAA,cAACsW,GAAiB,CAChBrE,YAAaA,EACbyB,iBAAkBA,EAClBpL,QAASA,EACTnH,SAAUhC,KAAK0I,aACf2L,SAAUrU,KAAK6U,aACfzB,SAAUpT,KAAK7C,MAAMiW,SACrBF,OAAQlT,KAAK8U,WACb7T,SAAUjB,KAAKM,gBAIvB+W,EAtDA,CAAuCxW,EAAA,eCO1B4W,KAAOC,GAAA,IACjBxI,GAASsF,OAAQ,sBAClBkD,GAACxI,GAASwG,WAAY,mBACtBgC,GAACxI,GAAS0H,QAAS,SACnBc,GAACxI,GAASuC,QAAS,SACpBiG,IAEa,SAAUC,GAAiBxa,GAC/B,IAAAya,EAAAza,EAAAya,yBAA0B9E,EAAA3V,EAAA2V,YAAa+E,EAAA1a,EAAA0a,WAAY1O,EAAAhM,EAAAgM,QAAS8M,EAAA9Y,EAAA8Y,aAEpE,OACEpV,EAAA,cAAAA,EAAA,cACEA,EAAA,wBAAQzD,UAAU,eAChByD,EAAA,oBAAIzD,UAAU,cAAc/B,OAAAuF,EAAA,UAAAvF,CAAU,kCAGxCwF,EAAA,qBAAKzD,UAAU,+CACZ/B,OAAAuF,EAAA,UAAAvF,CAAU,uCAEbwF,EAAA,cAACiX,GAAAta,EAAS,CACRD,SAAUJ,EAAM4a,YAChBzb,SAAUub,EACVG,KAAM,CACJ,CACE9Y,IAAKgQ,GAAS0H,OACd9Y,MACE+C,EAAA,cAAAA,EAAA,cACEA,EAAA,qBACEoX,IAAI,SACJ7a,UAAU,eACV8a,OAAQ,GACRC,IAAQ9c,OAAA+c,GAAA,WAAA/c,GAAY,2BAErBoc,GAAQvI,GAAS0H,UAIxB,CACE1X,IAAKgQ,GAASwG,UACd5X,MACE+C,EAAA,cAAAA,EAAA,cACEA,EAAA,qBACEoX,IAAI,YACJ7a,UAAU,eACV8a,OAAQ,GACRC,IAAQ9c,OAAA+c,GAAA,WAAA/c,GAAY,8BAErBoc,GAAQvI,GAASwG,aAIxB,CACExW,IAAKgQ,GAASsF,MACd1W,MACE+C,EAAA,cAAAA,EAAA,cACEA,EAAA,qBACEoX,IAAI,QACJ7a,UAAU,eACV8a,OAAQ,GACRC,IAAQ9c,OAAA+c,GAAA,WAAA/c,GAAY,0BAErBoc,GAAQvI,GAASsF,SAIxB,CACEtV,IAAKgQ,GAASuC,OACd3T,MACE+C,EAAA,cAAAA,EAAA,cACEA,EAAA,qBACEoX,IAAI,SACJ7a,UAAU,eACV8a,OAAQ,GACRC,IAAQ9c,OAAA+c,GAAA,WAAA/c,GAAY,2BAErBoc,GAAQvI,GAASuC,aAO5B5Q,EAAA,qBAAKzD,UAAU,iCACZya,IAAe3I,GAASsF,OACvB3T,EAAA,cAACwX,GAAQ,CACPvF,YAAaA,EAAYwF,MACzBnP,QAASA,EACTiK,SAAUjW,EAAMiW,SAChBgC,oBAAqBjY,EAAMiY,sBAG9ByC,IAAe3I,GAASwG,WACvB7U,EAAA,cAAC0X,GAAY,CACXzF,YAAaA,EAAY0F,UACzBrP,QAASA,EACTiK,SAAUjW,EAAMiW,SAChBgC,oBAAqBjY,EAAMiY,sBAG9ByC,IAAe3I,GAAS0H,QACvB/V,EAAA,cAAC4X,GAAS,CACR3F,YAAaA,EAAY4F,OACzBvP,QAASA,EACTiK,SAAUjW,EAAMiW,SAChBgC,oBAAqBjY,EAAMiY,sBAG9ByC,IAAe3I,GAASuC,QACvB5Q,EAAA,cAAC8X,GAAS,CACR7F,YAAaA,EAAY8F,OACzBzP,QAASA,EACTiK,SAAUjW,EAAMiW,SAChBgC,oBAAqBjY,EAAMiY,uBAKhCwC,GACC/W,EAAA,cAACmV,GAAW,CACVpY,GAAIga,EACJ5V,SAAU7E,EAAM6E,SAChBoR,SAAUjW,EAAM0b,gBAChB5C,aAAcA,yiBCjIxB,SAAArW,GAAA,SAAAkZ,UAAAhZ,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA8H,SAAU,EACV9H,EAAA3D,MAAe,CACb0b,WAAY3I,GAAS0H,OACrB9D,aAAW/W,EAAA,GACTA,EAACmT,GAASsF,OAAQ,GAClBzY,EAACmT,GAASwG,WAAY,GACtB3Z,EAACmT,GAAS0H,QAAS,GACnB7a,EAACmT,GAASuC,QAAS,GACpB1V,GACDoN,SAAS,GAYXrJ,EAAAiZ,oBAAsB,SAAChE,GACrB,OpBoBgC7V,EoBpBL6V,EpBqBtB1Z,OAAAiE,EAAA,KAAAjE,CAAK,2BAA4B,CAAE6D,IAAGA,IAAI5D,MAAM8V,GAAA,IoBpBlD7R,KAAK,WACAO,EAAK8H,SACP9H,EAAKM,SAAS,CAAEwX,8BAA0Bnb,EAAWwZ,kBAAcxZ,MAGtE8C,KAAKO,EAAKkZ,mCpBcX,IAA8B9Z,GoBXlCY,EAAAkZ,kCAAoC,WAElC,OADAlZ,EAAKM,SAAS,CAAE+I,SAAS,IpBjCpB9N,OAAAiE,EAAA,QAAAjE,CAAQ,sCAAsCC,MAAM8V,GAAA,GoBmCtD7R,KAAK,SAAAuT,GACAhT,EAAK8H,SACP9H,EAAKM,SAAS,CACZ0S,YAAWA,EACX3J,SAAS,MAId7N,MAAM,WACDwE,EAAK8H,SACP9H,EAAKM,SAAS,CAAE+I,SAAS,OAKjCrJ,EAAAmZ,gBAAkB,SAACpB,GACjB/X,EAAKM,SAAS,CAAEyX,WAAUA,KAG5B/X,EAAA4I,aAAe,WACb5I,EAAKM,SAAS,CAAEwX,8BAA0Bnb,EAAWwZ,kBAAcxZ,KAGrEqD,EAAAoZ,aAAe,SAACnE,GACd,OpBZgCoE,EoBYLpE,EpBXtB1Z,OAAAiE,EAAA,QAAAjE,CAAQ,kCAAmC,CAAE8d,WAAUA,IAC3D5Z,KAAK,SAACxD,GAAiB,OAAfA,EAAAqd,WACR9d,MAAM8V,GAAA,IoBSmC7R,KAAK,SAAA0W,GACzCnW,EAAK8H,SACP9H,EAAKM,SAAS,CACZwX,yBAA0B7C,EAC1BkB,aAAYA,MpBhBhB,IAA8BkD,KoBkCpC,OAjFmDE,GAAAP,EAAAlZ,GAajDkZ,EAAArY,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,EACf5H,KAAKgZ,qCAGPF,EAAArY,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GAkDjBkR,EAAArY,UAAAU,OAAA,WACE,OACEN,EAAA,cAAC8W,GAAgB2B,GAAA,CACftX,SAAUhC,KAAK0I,aACfmQ,gBAAiB7Y,KAAK+Y,oBACtB3F,SAAUpT,KAAKkZ,aACfnB,YAAa/X,KAAKiZ,gBAClB7D,oBAAqBpV,KAAKgZ,mCACtBhZ,KAAK7D,SAIjB2c,EAjFA,CAAmDjY,EAAA,eCQnD,SAAS0Y,GAAeC,GACtB,OAAOA,EAAShE,IACd3U,EAAA,cAAAA,EAAA,cACEA,EAAA,0BAAO2Y,EAASta,IAAc,OAC9B2B,EAAA,sBAAMzD,UAAU,cAAcoc,EAAShE,MAGzC3U,EAAA,0BAAO2Y,EAASta,KAIpB,SAASua,GAAYtc,GAQX,IAAAmW,EAAAnW,EAAAmW,KAAMoG,EAAAvc,EAAAuc,WAAY9b,EAAAT,EAAAS,GAAI6V,EAAAtW,EAAAsW,QAAStV,EAAAhB,EAAAgB,MAAOwU,EAAAxV,EAAAwV,cAC9C,OACE9R,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,uBAAOzD,UAAU,sBAAsBsO,QAAS9N,GAC7CvC,OAAAuF,EAAA,UAAAvF,CAAU,sCAAuCuC,GAClDiD,EAAA,oBAAIzD,UAAU,0BAAwB,KACrCkW,GACCzS,EAAA,cAAC6S,GAAAlW,EAAW,CACVmW,QACE9S,EAAA,cAACiQ,GAAA,iBAAgB,CACfC,eAAgB1V,OAAAuF,EAAA,UAAAvF,CAAU,sCAAuCuC,EAAI,QACrEA,GAAI,uCAAuCA,EAAE,QAC7C0I,OAAQoT,IAGZ9F,UAAU,WAIhB/S,EAAA,uBACEzD,UAAU,oBACVQ,GAAIA,EACJ4V,UAAW,IACXhR,KAAM5E,EACNI,SAAU,SAAAC,GAAK,OAAA0U,EAAcc,EAASxV,EAAEC,cAAzBC,QACflC,KAAK,OACLkC,MAAOA,KAaD,SAAUwb,GAA4Bxc,GAEhD,IAAApB,EAAAoB,EAAAiV,SAAYlT,EAAAnD,EAAAmD,IAAK0a,EAAA7d,EAAA6d,WAAYC,EAAA9d,EAAA8d,KAC7BC,EAAA3c,EAAA2c,UACApd,EAAAS,EAAAT,QACAyM,EAAAhM,EAAAgM,QACA4Q,EAAA5c,EAAA4c,aACAxJ,EAAApT,EAAAoT,OACA1I,EAAA1K,EAAA0K,QAGF,GAAIsB,EACF,OAAOtI,EAAA,cAAC8K,GAAAnO,EAAe,MAGzB,GAAIsc,EAAUne,OAAS,EACrB,OACEkF,EAAA,yBACEA,EAAA,cAAC2K,GAAA,MAAK,CAACpO,UAAU,gCAAgCqO,QAAQ,QACvD5K,EAAA,cAACiQ,GAAA,iBAAgB,CACfC,eAAgB1V,OAAAuF,EAAA,UAAAvF,CAAU,8CAC1BuC,GAAG,6CACH0I,OAAQ,CACN0K,KACEnQ,EAAA,cAACyM,EAAA,KAAI,CAACC,GAAG,uDACNlS,OAAAuF,EAAA,UAAAvF,CAAU,oBAU3B,IAAMiB,EAAW4C,GAAO4a,EAAU/J,KAAK,SAAAtR,GAAK,OAAAA,EAAES,MAAFA,IACtCoS,EAAMhV,GAAYA,EAASgV,IAE3B9U,GA7CR,SACET,EACAuW,OADEpT,EAAAnD,EAAAmD,IAAK8a,EAAAje,EAAA6d,kBAAA,IAAAI,EAAA,GAAAA,EAAiBC,EAAAle,EAAA8d,YAAA,IAAAI,EAAA,GAAAA,EACtBC,EAAA5H,EAAApT,IAAAib,OAAA,IAAAD,EAAA,GAAAA,EAAgBE,EAAA9H,EAAAsH,WAAAS,OAAA,IAAAD,EAAA,GAAAA,EAA8BE,EAAAhI,EAAAuH,KAEhD,OAAO3a,IAAQib,GAAQP,IAAeS,GAAeR,UAFL,IAAAS,EAAA,GAAAA,GA2C7BC,CAAW,CAAErb,IAAGA,EAAE0a,WAAUA,EAAEC,KAAIA,GAAIE,GAAgB,CAAE7a,IAAK,KAEhF,OACE2B,EAAA,yBACEA,EAAA,wBAAQzD,UAAU,eAChByD,EAAA,oBAAIzD,UAAU,cAAc/B,OAAAuF,EAAA,UAAAvF,CAAU,0CAGxCwF,EAAA,qBAAKzD,UAAU,+CACZ/B,OAAAuF,EAAA,UAAAvF,CAAU,+CAGbwF,EAAA,sBACEI,SAAU,SAACkB,GACTA,EAAM4I,iBACN5N,EAAM8D,aAERJ,EAAA,qBAAKzD,UAAU,cACbyD,EAAA,uBAAO6K,QAAQ,QACZrQ,OAAAuF,EAAA,UAAAvF,CAAU,4CACXwF,EAAA,oBAAIzD,UAAU,0BAAwB,MAExCyD,EAAA,cAACkD,EAAAvG,EAAM,CACLgd,UAAU,EACVpd,UAAU,gBACV4G,WAAW,EACXpG,GAAG,OACH6c,mBAAoB,CAClBC,SAAU,OACVxT,MAAO,QAETlJ,SAAU,SAACwb,GAAkC,OAAArc,EAAMwV,cAAc,MAAO6G,EAA3Bta,MAC7Cqa,eAAgBA,GAChB7a,QAASob,EACTa,YAAY,EACZxc,MAAOe,EACP0b,SAAS,MACTC,cAAetB,MAIlBjI,IAAQpC,GAASwG,WAChB7U,EAAA,cAAAA,EAAA,cACG4Y,GAAY,CACXnG,MAAM,EACNoG,WAAY,CACVnE,QACE1U,EAAA,cAAAA,EAAA,cACG,gBACDA,EAAA,4BAAS,SACR,yBAIPjD,GAAI,uBACJ+U,cAAexV,EAAMwV,cACrBc,QAAS,aACTtV,MAAOyb,GAAc,KAEtBH,GAAY,CACXnG,MAAM,EACNoG,WAAY,CACVnE,QACE1U,EAAA,cAAAA,EAAA,cACG,4BACDA,EAAA,4BAAS,UACR,YAIPjD,GAAI,iBACJ+U,cAAexV,EAAMwV,cACrBc,QAAS,OACTtV,MAAO0b,GAAQ,MAKpBvI,IAAQpC,GAAS0H,QAChB6C,GAAY,CACVnG,MAAM,EACNoG,WAAY,CAAEnE,QAAS,yBACvB3X,GAAI,oBACJ+U,cAAexV,EAAMwV,cACrBc,QAAS,aACTtV,MAAOyb,GAAc,KAGzB/Y,EAAA,qBAAKzD,UAAU,uBACbyD,EAAA,cAAC8K,GAAAnO,EAAe,CAACJ,UAAU,eAAe+L,QAASoH,IAClD/T,GACCqE,EAAA,cAACK,EAAA,aAAY,CAAC9D,UAAU,8BAA8BC,SAAUkT,IAAW7T,GACzEmE,EAAA,sBAAAoP,YAAgB,8BAA8B5U,OAAAuF,EAAA,UAAAvF,CAAU,UAG3D0e,GACClZ,EAAA,cAACK,EAAA,OAAM,CAAC9D,UAAU,eAAeK,QAASN,EAAMoD,SAC9CM,EAAA,sBAAAoP,YAAgB,+BAA+B5U,OAAAuF,EAAA,UAAAvF,CAAU,iBAG3DkV,GAAU1I,GACVhH,EAAA,sBAAMzD,UAAU,gBACdyD,EAAA,cAACgJ,EAAArM,EAAgB,CAACJ,UAAU,iBAC3B/B,OAAAuF,EAAA,UAAAvF,CAAU,64BCpMnByf,KAAaC,GAAA,IAChB7L,GAASsF,OAAQ,GAClBuG,GAAC7L,GAASwG,WAAY,CAAC,aAAc,QACrCqF,GAAC7L,GAAS0H,QAAS,CAAC,cACpBmE,GAAC7L,GAASuC,QAAS,GACpBsJ,OAED,SAAAnb,GAAA,SAAAob,IAAA,IAAAlb,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA8H,SAAU,EACV9H,EAAA3D,MAAe,CACbiW,SAAU,CAAElT,IAAK,IACjB4a,UAAW,GACXpd,SAAS,EACTyM,SAAS,EACToH,QAAQ,EACR1I,SAAS,GAYX/H,EAAAmb,iBAAmB,WACjB,IAAM/J,EAAUpR,EAAK3C,MAAMgL,UAAUjJ,IACrC,OAAOO,QAAQyb,IAAI,CAACjK,GAAeC,GAAUpR,EAAKqb,kBAAkBjK,KACjE3R,KAAK,SAACxD,OAAC+d,EAAA/d,EAAA,GAAWge,EAAAhe,EAAA,GACb+D,EAAK8H,SACP9H,EAAKM,SAAS,SAACrE,OAAEqW,EAAArW,EAAAqW,SACTgJ,EAAcrB,GAAgB3H,EACpC,MAAO,CACLA,SAAUgJ,EACVtB,UAASA,EACTpd,QAASoD,EAAKub,aAAaD,GAC3BjS,SAAS,EACT4Q,aAAYA,OAKnBze,MAAM,WACDwE,EAAK8H,SACP9H,EAAKM,SAAS,CAAE+I,SAAS,OAcjCrJ,EAAAwb,WAAa,WACPxb,EAAK8H,SACP9H,EAAKM,SAAS,CAAEmQ,QAAQ,KAI5BzQ,EAAAO,YAAc,WACJ,ItBrB4B6Q,EsBqB5B/I,EAAArI,EAAA3C,MAAAgL,UACRrI,EAAKM,SAAS,CAAEmQ,QAAQ,KtBtBYW,EsBuBZ/I,EAAUjJ,ItBtB7B7D,OAAAiE,EAAA,KAAAjE,CAAK,mCAAoC,CAAE6V,QAAOA,IAAI5V,MAAM8V,GAAA,IsBuB9D7R,KAAK,WACAO,EAAK8H,SACP9H,EAAKM,SAAS,CACZgS,SAAU,CACRlT,IAAK,GACL0a,WAAY,GACZC,KAAM,IAERE,kBAActd,EACd8T,QAAQ,EACR1I,SAAS,MAIdvM,MAAMwE,EAAKwb,aAoDhBxb,EAAAQ,aAAe,WACbR,EAAKM,SAAS,CAAEmQ,QAAQ,IAClB,IAAAxU,EAAA+D,EAAA3D,MACJmW,EAAAvW,EAAAqW,SAAYlT,EAAAoT,EAAApT,IAAKqc,EAAAC,GAAAlJ,EAAA,SAIbhW,EAHJP,EAAA+d,UAGyB/J,KAAK,SAAAtR,GAAK,OAAAA,EAAES,MAAFA,IAChCA,GAAQ5C,GAIT4C,GACFY,EAAK2b,wBAAwBnf,EAASgV,IAAKpS,EAAKqc,GAC7Chc,KAAK,WACAO,EAAK8H,SACP9H,EAAKM,SAAS,CACZmQ,QAAQ,EACR1I,SAAS,MAIdtI,KAAKO,EAAKmb,kBACV3f,MAAMwE,EAAKwb,aAIlBxb,EAAAoS,kBAAoB,SAACtU,EAA6BO,GAChD2B,EAAKM,SAAS,SAACrE,SAAEqW,EAAArW,EAAAqW,SACTgJ,EAAWM,MAAA,GACZtJ,KAAQE,EAAA,IACV1U,GAAKO,EAAKmU,IAEb,MAAO,CACLF,SAAUgJ,EACV1e,QAASoD,EAAKub,aAAaD,GAC3BvT,SAAS,MAKf/H,EAAAub,aAAe,SAACtf,GAAE,IAAAmD,EAAAnD,EAAAmD,IAAKqc,EAAAC,GAAAzf,EAAA,SAEfO,EADEwD,EAAA3D,MAAA2d,UACmB/J,KAAK,SAAAtR,GAAK,OAAAA,EAAES,MAAFA,IACrC,SAAKA,IAAQ5C,IAGNwe,GAAcxe,EAASgV,KAAKkB,OACjC,SAACC,EAAiBxL,GAAU,OAAAwL,GAAUkJ,QAAQJ,EAAlBtU,MAC5B,MAcN,OAhMiD2U,GAAAZ,EAAApb,GAW/Cob,EAAAva,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,EACf5H,KAAKib,oBAGPD,EAAAva,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GA2BjBoT,EAAAva,UAAA0a,kBAAA,SAAkBjK,GAChB,OtBVE,SAA+BA,GACnC,OAAO7V,OAAAiE,EAAA,QAAAjE,CAAQ,gCAAiC,CAAE6V,QAAOA,IsBShD2K,CAAqB3K,GAAS5V,MAAM,SAAC8D,GAC1C,OAAIA,GAAgC,MAApBA,EAAS0c,OAChBrc,QAAQsc,aAAQtf,GAElBpB,OAAA+V,GAAA,EAAA/V,CAAiB+D,MA+B5B4b,EAAAva,UAAAgb,wBAAA,SACEnK,EACApS,EACA8c,GAEA,ItB1CmC5gB,EsB0C7B+d,EAAaja,EACbgS,EAAUlR,KAAK7C,MAAMgL,UAAUjJ,IAErC,OAAQoS,GACN,KAAKpC,GAASsF,MACZ,OtB/C+BpZ,EsB+CD,CAC5B+d,WAAUA,EACVjI,QAAOA,GtBhDR7V,OAAAiE,EAAA,KAAAjE,CAAK,sCAAuCD,GAAME,MAAM8V,GAAA,GsBkD3D,KAAKlC,GAASwG,UACZ,IAAKsG,EACH,OAAOvc,QAAQC,SAET,IAAA3D,EAAAigB,EAAApC,kBAAA,IAAA7d,EAAA,GAAAA,EAAiBuW,EAAA0J,EAAAnC,KACzB,OtBpDF,SAAqCze,GACzC,OAAOC,OAAAiE,EAAA,KAAAjE,CAAK,0CAA2CD,GAAME,MAAM8V,GAAA,GsBmDtD6K,CAA2B,CAChC9C,WAAUA,EACVjI,QAAOA,EACP0I,WAAUA,EACVC,UALuB,IAAAvH,EAAA,GAAAA,IAQ3B,KAAKpD,GAAS0H,OAEZ,OADMgD,EAAaoC,GAAqBA,EAAkBpC,YtBxD5D,SAAkCxe,GACtC,OAAOC,OAAAiE,EAAA,KAAAjE,CAAK,uCAAwCD,GAAME,MAAM8V,GAAA,GsB2DnD8K,CAAwB,CAC7B/C,WAAUA,EACVjI,QAAOA,EACP0I,WAAUA,IALHna,QAAQC,SASnB,KAAKwP,GAASuC,OACZ,OtBhEF,SAAkCrW,GACtC,OAAOC,OAAAiE,EAAA,KAAAjE,CAAK,uCAAwCD,GAAME,MAAM8V,GAAA,GsB+DnD+K,CAAwB,CAC7BhD,WAAUA,EACVjI,QAAOA,IAGX,QACE,OAAOzR,QAAQC,WAyDrBsb,EAAAva,UAAAU,OAAA,WACE,OACEN,EAAA,cAAC8Y,GAA2B+B,GAAA,CAC1B/I,cAAe3S,KAAKkS,kBACpB3R,QAASP,KAAKK,YACdY,SAAUjB,KAAKM,cACXN,KAAK7D,SAIjB6e,EAhMA,CAAiDna,EAAA,gOCJpCub,GAA8C,CACzD,CACEld,IAAKS,EACL6C,KAAMnH,OAAAuF,EAAA,UAAAvF,CAAU,+BAChBghB,gBAyCJ,SAA+Blf,GAC7B,OAAO0D,EAAA,cAACsO,GAASmN,GAAA,GAAKnf,KAzCpBof,mBAAmB,EACnBC,qBAAqB,EACrBC,YAAY,GAEd,CACEvd,I9CtCoC,kB8CuCpCsD,KAAMnH,OAAAuF,EAAA,UAAAvF,CAAU,qCAChBghB,gBAqCJ,WACE,OAAOxb,EAAA,cAAC6b,GAAa,OArCnBH,mBAAmB,EACnBC,qBAAqB,EACrBC,YAAY,GAEd,CACEvd,I9ChDmC,a8CiDnCsD,KAAMnH,OAAAuF,EAAA,UAAAvF,CAAU,gCAChBghB,gBAiCJ,SAAmClf,GACjC,OAAO0D,EAAA,cAACuM,GAAakP,GAAA,GAAKnf,KAjCxBof,mBAAmB,EACnBC,qBAAqB,EACrBC,YAAY,GAEd,CACEvd,I9CrD4C,0B8CsD5CsD,KAAMnH,OAAAuF,EAAA,UAAAvF,CAAU,mCAChBghB,gBA6BJ,WACE,OAAOxb,EAAA,cAAC8b,GAAqB,OA7B3BJ,mBAAmB,EACnBC,qBAAqB,EACrBC,YAAY,EACZG,yBAAyB,GAE3B,CACE1d,I9C7DoD,kC8C8DpDsD,KAAMnH,OAAAuF,EAAA,UAAAvF,CAAU,2CAChBghB,gBAwBJ,SAAkDlf,GAChD,OAAOA,EAAMgL,WAAatH,EAAA,cAACgc,GAA4B,CAAC1U,UAAWhL,EAAMgL,aAxBvEoU,mBAAmB,EACnBC,qBAAqB,EACrBC,YAAY,EACZG,yBAAyB,oVCjD7BE,GAAA,SAAAld,GAAA,SAAAmd,mDAiDA,OAjDoCC,GAAAD,EAAAnd,GAClCmd,EAAAtc,UAAAwc,WAAA,SAAWhR,GACH,IAAAlQ,EAAAiE,KAAA7C,MAAEgL,EAAApM,EAAAoM,UAAW+U,EAAAnhB,EAAAmhB,gBAAiB7P,EAAAtR,EAAAsR,iBAC9B8P,EAAWnd,KAAK7C,MAAMgL,UAAY,oBAAsB,YACxDiI,EAAQ,CACZnE,SAAUA,EAAS/M,MAAQge,EAAkBjR,EAAS/M,IAAI6N,mBAAgBtQ,EAC1EmB,GAAIuK,GAAaA,EAAUjJ,KAE7B,OACE2B,EAAA,cAACyM,EAAA,UAAS,CACRlQ,UAAWmF,EAAW,CACpB6a,OAAQnR,EAAS/M,IAAI6N,gBAAkBM,EAAiBN,gBAE1DrP,MAAOuO,EAASzJ,KAChB+K,GAAI,CAAE4P,SAAQA,EAAE/M,MAAKA,IACpBnE,EAASzJ,OAKhBua,EAAAtc,UAAAU,OAAA,eAAArB,EAAAE,KACUqd,EAAArd,KAAA7C,MAAAkgB,gBAEFC,EAAqBtd,KAAK7C,MAAMkS,WACnCM,OAAO,SAAAzQ,GAAO,OAACsO,GAAmBtO,EAApB6N,iBACdlJ,IAAI,SAAA3E,GAAO,MAAC,CACXA,IAAGA,EACHsD,KAAMnH,OAAAmG,EAAA,EAAAnG,CAAgB6D,MAEvBqe,OACCnB,GAAsBzM,OAAO,SAAAC,GAAK,OAAAA,EAAA6M,aAC/B9M,OAAO,SAAAC,GACN,OAAA9P,EAAK3C,MAAMgL,UAEPyH,EAAE4M,oBAEF5M,EAAE2M,oBAEP5M,OAAO,SAAAC,GAAK,OAAAyN,IAAoBzN,EAApBgN,2BAEbY,EAAmB1Q,IAAOwQ,EAAoB,SAAArR,GAAY,OAAAA,EAASzJ,KAATuK,gBAChE,OACElM,EAAA,oBAAIzD,UAAU,kBACXogB,EAAiB3Z,IAAI,SAAAoI,GAAY,OAChCpL,EAAA,oBAAI3B,IAAK+M,EAAS/M,KAAMY,EAAKmd,WADGhR,QAM1C8Q,EAjDA,CAAoClc,EAAA,eAwDrB4c,GAAApiB,OAAAkP,EAAA,QAAAlP,CALS,SAACc,GAAiB,MAAC,CACzCkT,WAAYhU,OAAA4O,EAAA,4BAAA5O,CAA4Bc,GACxCkhB,gBAAiBhiB,OAAA4O,EAAA,YAAA5O,CAAYc,GAAOkhB,kBAGvB,CAAyBP,cCvE1B,SAAUY,GAAW3hB,OAAEoM,EAAApM,EAAAoM,UAC7BzK,EAAQyK,EAAY9M,OAAAuF,EAAA,UAAAvF,CAAU,yBAA2BA,OAAAuF,EAAA,UAAAvF,CAAU,iBAEnEgM,EAAcc,EAClB9M,OAAAuF,EAAA,UAAAvF,CAAU,qCAEVwF,EAAA,cAAC8c,GAAA,EAAe,CAACne,QAASnE,OAAAuF,EAAA,UAAAvF,CAAU,+BAGtC,OACEwF,EAAA,wBAAQzD,UAAU,eAChByD,EAAA,oBAAIzD,UAAU,cAAcM,GAC5BmD,EAAA,qBAAKzD,UAAU,oBAAoBiK,uXCQzCuW,GAAA,SAAAhe,GAAA,SAAAie,IAAA,IAAA/d,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAA8H,SAAU,EACV9H,EAAA3D,MAAe,CAAEgN,SAAS,GAiB1BrJ,EAAAge,cAAgB,WACN,IAAA3V,EAAArI,EAAA3C,MAAAgL,UACRrI,EAAK3C,MAAM2gB,cAAc3V,GAAaA,EAAUjJ,KAAKK,KAAKO,EAAKie,YAAaje,EAAKie,cAGnFje,EAAAie,YAAc,WACRje,EAAK8H,SACP9H,EAAKM,SAAS,CAAE+I,SAAS,OAoD/B,OA9EyB6U,GAAAH,EAAAje,GAIvBie,EAAApd,UAAAuI,kBAAA,WACEhJ,KAAK4H,SAAU,EACf5H,KAAK8d,iBAGPD,EAAApd,UAAA2L,mBAAA,SAAmBC,GACbA,EAAUlE,YAAcnI,KAAK7C,MAAMgL,WACrCnI,KAAK8d,iBAITD,EAAApd,UAAAwI,qBAAA,WACEjJ,KAAK4H,SAAU,GAcjBiW,EAAApd,UAAAU,OAAA,WACE,GAAInB,KAAK7D,MAAMgN,QACb,OAAO,KAGD,IACF8U,EADEje,KAAA7C,MAAAmS,SAAAc,MACwBnE,UAAuBjM,KAAK7C,MAAM+f,gBAE5D7P,EADqBG,GAAmByQ,EAAiBlR,gBAChBkR,EACzCC,EAA0BC,IAAK/B,GAAuB,SAAAxM,GAAK,OAAAA,EAAE1Q,MAAFmO,IAC3D+Q,EAAoBpe,KAAK7C,MAAMgL,UAC/BkW,EACJH,IACEE,GAAqBF,EAAwB1B,sBAC3C4B,GAAqBF,EAAwB3B,mBAEnD,OACE1b,EAAA,qBAAKzD,UAAU,oBAAoBQ,GAAG,iBACpCiD,EAAA,cAACyd,EAAA,EAAW,CAACC,YAAY,aACzB1d,EAAA,cAAC2d,EAAAhhB,EAAM,CAACE,MAAOrC,OAAAuF,EAAA,UAAAvF,CAAU,mBAEzBwF,EAAA,cAAC6c,GAAU,CAACvV,UAAWnI,KAAK7C,MAAMgL,YAElCtH,EAAA,qBAAKzD,UAAU,oCACbyD,EAAA,qBAAKzD,UAAU,kBACbyD,EAAA,cAAC4c,GAAiB,CAChBtV,UAAWnI,KAAK7C,MAAMgL,UACtB+U,gBAAiBld,KAAK7C,MAAM+f,gBAC5B7P,iBAAkBA,KAGtBxM,EAAA,qBAAKzD,UAAU,kBACZ8gB,GAA2BG,EAC1BH,EAAwB7B,gBAAgB,CACtClU,UAAWnI,KAAK7C,MAAMgL,UACtBkF,iBAAkB4Q,IAGpBpd,EAAA,cAACqM,GAAuB,CACtBjB,SAAUoB,EACVlF,UAAWnI,KAAK7C,MAAMgL,gBAQtC0V,EA9EA,CAAyBhd,EAAA,eAoFnB4d,GAAqB,CAAEX,clDtFvB,SAAwB3V,GAC5B,OAAO,SAAChJ,GACN,OAAO9D,OAAA8O,EAAA,EAAA9O,CAAe8M,GAAW5I,KAAK,SAAAuT,GACpC,IAAM4L,EAAW5L,EAAYnD,OAAO,SAAAlO,GAAc,kBAAAA,EAAWxF,OAC7DkD,EAAS9D,OAAAsjB,EAAA,EAAAtjB,CAAmBqjB,SkDoFnB7jB,EAAA,QAAAQ,OAAAkP,EAAA,QAAAlP,CANS,SAACc,GAAiB,MAAC,CACzC+gB,gBAAiB7hB,OAAA4O,EAAA,8BAAA5O,CAA8Bc,KAO/CsiB,GAFa,CAGbb,iZC9GY,SAAUU,EAAYviB,OAAEwiB,EAAAxiB,EAAAwiB,YACpC,OACE3hB,EAAA,cAACgiB,EAAA,EAAmBC,SAAQ,KACzB,SAAC9iB,OAAE+iB,EAAA/iB,EAAA+iB,eAAgBC,EAAAhjB,EAAAgjB,kBAAwB,OAC1CniB,EAAA,cAACoiB,EAAgB,CACfF,eAAgBA,EAChBC,kBAAmBA,EACnBR,YAAaA,MAavB,IAAAS,EAAA,SAAApf,GAAA,SAAAof,mDAmBA,OAnB+Bxe,EAAAwe,EAAApf,GAC7Bof,EAAAve,UAAAuI,kBAAA,WACEhJ,KAAK7C,MAAM2hB,eAAe9e,KAAK7C,MAAMohB,cAGvCS,EAAAve,UAAA2L,mBAAA,SAAmBC,GACbA,EAAUkS,cAAgBve,KAAK7C,MAAMohB,cACvCve,KAAK7C,MAAM4hB,kBAAkB/e,KAAK7C,MAAMohB,aACxCve,KAAK7C,MAAM2hB,eAAezS,EAAUkS,eAIxCS,EAAAve,UAAAwI,qBAAA,WACEjJ,KAAK7C,MAAM4hB,kBAAkB/e,KAAK7C,MAAMohB,cAG1CS,EAAAve,UAAAU,OAAA,WACE,OAAO,MAEX6d,EAnBA,CAA+BpiB,EAAA,6nBCtBzB,SAAUoX,EACdiL,GAEA,IAAAC,EAAA,SAAAtf,GAAA,SAAAsf,mDAMA,OANsB1e,EAAA0e,EAAAtf,GAGpBsf,EAAAze,UAAAU,OAAA,WACE,OAAOvE,EAAA,cAACqiB,EAAgBrc,EAAA,GAAK5C,KAAK7C,SAH7B+hB,EAAAC,YAAc9jB,OAAA+jB,EAAA,EAAA/jB,CAAsB4jB,EAAkB,gBAK/DC,EANA,CAAsBtiB,EAAA,WAYtB,OAAOvB,OAAAgkB,EAAA,QAAAhkB,CAJP,SAAyBc,GACvB,MAAO,CAAE+X,SAAU7Y,OAAAikB,EAAA,YAAAjkB,CAAYc,KAG1Bd,CAAyB6jB","file":"js/321.1576512032968.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting?: boolean;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days));\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".side-tabs-layout{display:flex;justify-content:space-between;align-items:stretch}.modal .side-tabs-layout{padding-left:10px;background-color:#f3f3f3}.side-tabs-main{position:relative;z-index:2;flex-grow:1;padding:15px 20px;border:1px solid #e6e6e6;box-sizing:border-box;background-color:#fff;overflow:auto}.modal .side-tabs-main{border-top:none;border-bottom:none;border-right:none}.side-tabs-side{position:relative;z-index:3;width:160px;flex-shrink:0;padding:10px 0;box-sizing:border-box;transform:translateX(1px)}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#444;cursor:default}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".settings-layout{margin-bottom:60px}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#777}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_CATEGORY = 'pull_request_decoration';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: T.Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<T.SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in T.SettingType]?: React.ComponentType<DefaultSpecializedInputProps>\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited,\n  sanitizeTranslation\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: T.Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              dangerouslySetInnerHTML={{ __html: sanitizeTranslation(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: T.Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success: boolean;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false,\n      success: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: false, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: true, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {this.state.success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters(\n                  'email_configuration.test.email_was_sent_to_x',\n                  this.state.recipient\n                )}\n              </Alert>\n            </div>\n          )}\n\n          {this.state.error != null && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{this.state.error}</Alert>\n            </div>\n          )}\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={this.state.recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={this.state.subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={this.state.message}\n            />\n          </div>\n\n          <SubmitButton disabled={this.state.loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {this.state.loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { getSubCategoryDescription, getSubCategoryName, sanitizeTranslation } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<T.Setting & { definition: T.SettingCategoryDefinition }>;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {sortedSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                dangerouslySetInnerHTML={{ __html: sanitizeTranslation(subCategory.description) }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nexport const CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum ALM_KEYS {\n  AZURE = 'azure',\n  BITBUCKET = 'bitbucket',\n  GITHUB = 'github',\n  GITLAB = 'gitlab'\n}\n\nexport interface AlmSettingsBinding {\n  key: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: ALM_KEYS;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  azure: AzureBindingDefinition[];\n  bitbucket: BitbucketBindingDefinition[];\n  github: GithubBindingDefinition[];\n  gitlab: GitlabBindingDefinition[];\n}\n\nexport interface AzureBindingDefinition extends AlmSettingsBinding {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmSettingsBinding {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmSettingsBinding {\n  appId: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmSettingsBinding {\n  personalAccessToken: string;\n}\n\nexport interface ProjectAlmBinding {\n  key: string;\n  repository?: string;\n  slug?: string;\n}\n\nexport interface AzureProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n\nexport interface BitbucketProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n}\n\nexport interface GitlabProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBinding,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBinding,\n  GithubBindingDefinition,\n  GithubProjectAlmBinding,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBinding,\n  ProjectAlmBinding\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions').catch(throwGlobalError);\n}\n\nexport function getAlmSettings(project: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBinding> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBinding) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBinding) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBinding) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBinding) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_KEYS } from '../../../../types/alm-settings';\n\nexport interface AlmPRDecorationFormModalProps {\n  alm: ALM_KEYS;\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  onCancel: () => void;\n  onSubmit: () => void;\n  originalKey: string;\n}\n\nexport default function AlmPRDecorationFormModalRenderer(props: AlmPRDecorationFormModalProps) {\n  const { alm, children, originalKey } = props;\n  const header = translate(\n    'settings',\n    alm === ALM_KEYS.GITLAB ? 'mr_decoration' : 'pr_decoration',\n    'form.header',\n    originalKey ? 'edit' : 'create'\n  );\n\n  return (\n    <SimpleModal header={header} onClose={props.onCancel} onSubmit={props.onSubmit} size=\"medium\">\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form className=\"views-form\" onSubmit={onFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body modal-container\">{children}</div>\n\n          <div className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton disabled={submitting || !props.canSubmit()}>\n              {translate('settings.pr_decoration.form.save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n          </div>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AlmSettingsBinding, ALM_KEYS } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModalRenderer from './AlmPRDecorationFormModalRenderer';\n\ninterface ChildrenProps<AlmBindingDefinitionType> {\n  formData: AlmBindingDefinitionType;\n  onFieldChange: (fieldId: keyof AlmBindingDefinitionType, value: string) => void;\n}\n\ninterface Props<B> {\n  alm: ALM_KEYS;\n  children: (props: ChildrenProps<B>) => React.ReactNode;\n  bindingDefinition: B;\n  onCancel: () => void;\n  onSubmit: (data: B, originalKey: string) => void;\n}\n\ninterface State<AlmBindingDefinitionType> {\n  formData: AlmBindingDefinitionType;\n}\n\nexport default class AlmPRDecorationFormModal<\n  B extends AlmSettingsBinding\n> extends React.PureComponent<Props<B>, State<B>> {\n  constructor(props: Props<B>) {\n    super(props);\n\n    this.state = { formData: props.bindingDefinition };\n  }\n\n  handleFieldChange = (fieldId: keyof B, value: string) => {\n    this.setState(({ formData }) => ({\n      formData: {\n        ...formData,\n        [fieldId]: value\n      }\n    }));\n  };\n\n  handleFormSubmit = () => {\n    this.props.onSubmit(this.state.formData, this.props.bindingDefinition.key);\n  };\n\n  canSubmit = () => {\n    return Object.values(this.state.formData).reduce(\n      (result, value) => result && value.length > 0,\n      true\n    );\n  };\n\n  render() {\n    const { alm, children, bindingDefinition } = this.props;\n    const { formData } = this.state;\n\n    return (\n      <AlmPRDecorationFormModalRenderer\n        alm={alm}\n        canSubmit={this.canSubmit}\n        onCancel={this.props.onCancel}\n        onSubmit={this.handleFormSubmit}\n        originalKey={bindingDefinition.key}>\n        {children({\n          formData,\n          onFieldChange: this.handleFieldChange\n        })}\n      </AlmPRDecorationFormModalRenderer>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon, DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_KEYS } from '../../../../types/alm-settings';\n\nexport interface AlmPRDecorationTableProps {\n  additionalColumnsHeaders: Array<string>;\n  alm: ALM_KEYS;\n  definitions: Array<{\n    key: string;\n    additionalColumns: Array<string>;\n  }>;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n}\n\nexport default function AlmPRDecorationTable(props: AlmPRDecorationTableProps) {\n  const { additionalColumnsHeaders, alm, definitions } = props;\n\n  return (\n    <table className=\"data zebra fixed spacer-bottom\">\n      <thead>\n        <tr>\n          <th>{translate('settings.pr_decoration.table.column.name')}</th>\n          {additionalColumnsHeaders.map(h => (\n            <th key={h}>{h}</th>\n          ))}\n          <th className=\"action-small text-center\">\n            {translate('settings.pr_decoration.table.column.edit')}\n          </th>\n          <th className=\"action text-center\">\n            {translate('settings.pr_decoration.table.column.delete')}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {definitions.length === 0 ? (\n          <tr data-test=\"settings__alm-empty-table\">\n            <td colSpan={3 + additionalColumnsHeaders.length}>\n              {translate('settings.pr_decoration.table.empty', alm)}\n            </td>\n          </tr>\n        ) : (\n          definitions.map(({ key, additionalColumns }) => (\n            <tr data-test=\"settings__alm-table-row\" key={key}>\n              <td className=\"nowrap hide-overflow\" title={key}>\n                {key}\n              </td>\n              {additionalColumns.map(value => (\n                <td className=\"nowrap hide-overflow\" key={value} title={value}>\n                  {value}\n                </td>\n              ))}\n              <td className=\"text-center\" data-test=\"settings__alm-table-row-edit\">\n                <ButtonIcon onClick={() => props.onEdit(key)}>\n                  <EditIcon />\n                </ButtonIcon>\n              </td>\n              <td className=\"text-center\" data-test=\"settings__alm-table-row-delete\">\n                <DeleteButton onClick={() => props.onDelete(key)} />\n              </td>\n            </tr>\n          ))\n        )}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmSettingsBinding } from '../../../../types/alm-settings';\n\nexport interface AlmDefinitionFormFieldProps<B extends AlmSettingsBinding> {\n  autoFocus?: boolean;\n  help?: React.ReactNode;\n  id: string;\n  isTextArea?: boolean;\n  maxLength?: number;\n  onFieldChange: (id: keyof B, value: string) => void;\n  propKey: keyof B;\n  value: string;\n}\n\nexport function AlmDefinitionFormField<B extends AlmSettingsBinding>(\n  props: AlmDefinitionFormFieldProps<B>\n) {\n  const { autoFocus, help, id, isTextArea, maxLength, onFieldChange, propKey, value } = props;\n\n  return (\n    <div className=\"modal-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.pr_decoration.form', id)}\n        <em className=\"mandatory spacer-right\">*</em>\n        {help && <HelpTooltip overlay={help} placement=\"right\" />}\n      </label>\n      {isTextArea ? (\n        <textarea\n          className=\"settings-large-input\"\n          id={id}\n          maxLength={maxLength || 2000}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          required={true}\n          rows={5}\n          value={value}\n        />\n      ) : (\n        <input\n          autoFocus={autoFocus}\n          className=\"input-super-large\"\n          id={id}\n          maxLength={maxLength || 100}\n          name={id}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          size={50}\n          type=\"text\"\n          value={value}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmDefinitionFormField } from './AlmDefinitionFormField';\n\nexport interface AzureFormModalProps {\n  formData: AzureBindingDefinition;\n  onFieldChange: (fieldId: keyof AzureBindingDefinition, value: string) => void;\n}\n\nexport default function AzureFormModal(props: AzureFormModalProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.pr_decoration.form.name.azure.help')}\n        id=\"name.azure\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmDefinitionFormField\n        help={translate('settings.pr_decoration.form.personal_access_token.azure.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { ALM_KEYS } from '../../../../types/alm-settings';\n\nexport interface TabHeaderProps {\n  alm: ALM_KEYS;\n  appState: Pick<T.AppState, 'multipleAlmEnabled'>;\n  definitionCount: number;\n  onCreate: () => void;\n}\n\nexport function TabHeader(props: TabHeaderProps) {\n  const {\n    alm,\n    appState: { multipleAlmEnabled },\n    definitionCount\n  } = props;\n  const showButton = multipleAlmEnabled || definitionCount === 0;\n  return (\n    <>\n      <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n        <FormattedMessage\n          defaultMessage={translate(`settings.pr_decoration.${alm}.info`)}\n          id={`settings.pr_decoration.${alm}.info`}\n          values={{\n            link: (\n              <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n                {translate('learn_more')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n\n      <div className=\"big-spacer-bottom display-flex-space-between\">\n        <h4 className=\"display-inline\">\n          {translate(\n            'settings',\n            alm === ALM_KEYS.GITLAB ? 'mr_decoration' : 'pr_decoration',\n            'table.title'\n          )}\n        </h4>\n        {showButton && (\n          <Button data-test=\"settings__alm-create\" onClick={props.onCreate}>\n            {translate('settings.pr_decoration.table.create')}\n          </Button>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default withAppState(TabHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { ALM_KEYS, AzureBindingDefinition } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModal from './AlmPRDecorationFormModal';\nimport AlmPRDecorationTable from './AlmPRDecorationTable';\nimport AzureFormModal from './AzureFormModal';\nimport TabHeader from './TabHeader';\n\nexport interface AzureTabRendererProps {\n  editedDefinition?: AzureBindingDefinition;\n  definitions: AzureBindingDefinition[];\n  loading: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: AzureBindingDefinition, originalKey: string) => void;\n}\n\nexport default function AzureTabRenderer(props: AzureTabRendererProps) {\n  const { definitions, editedDefinition, loading } = props;\n  return (\n    <>\n      <TabHeader\n        alm={ALM_KEYS.AZURE}\n        definitionCount={definitions.length}\n        onCreate={props.onCreate}\n      />\n\n      <DeferredSpinner loading={loading}>\n        <AlmPRDecorationTable\n          additionalColumnsHeaders={[]}\n          alm={ALM_KEYS.AZURE}\n          definitions={definitions.map(({ key }) => ({\n            key,\n            additionalColumns: []\n          }))}\n          onDelete={props.onDelete}\n          onEdit={props.onEdit}\n        />\n      </DeferredSpinner>\n\n      {editedDefinition && (\n        <AlmPRDecorationFormModal\n          alm={ALM_KEYS.AZURE}\n          bindingDefinition={editedDefinition}\n          onCancel={props.onCancel}\n          onSubmit={props.onSubmit}>\n          {childProps => <AzureFormModal {...childProps} />}\n        </AlmPRDecorationFormModal>\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { createAzureConfiguration, updateAzureConfiguration } from '../../../../api/almSettings';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport AzureTabRenderer from './AzureTabRenderer';\n\ninterface Props {\n  definitions: AzureBindingDefinition[];\n  loading: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: AzureBindingDefinition;\n  projectCount?: number;\n}\n\nexport default class AzureTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: { key: '', personalAccessToken: '' } });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition });\n  };\n\n  handleSubmit = (config: AzureBindingDefinition, originalKey: string) => {\n    const call = originalKey\n      ? updateAzureConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : createAzureConfiguration(config);\n    return call.then(this.props.onUpdateDefinitions).then(() => {\n      if (this.mounted) {\n        this.setState({ editedDefinition: undefined });\n      }\n    });\n  };\n\n  render() {\n    const { definitions, loading } = this.props;\n    const { editedDefinition } = this.state;\n    return (\n      <AzureTabRenderer\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        loading={loading}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmDefinitionFormField } from './AlmDefinitionFormField';\n\nexport interface BitbucketFormModalProps {\n  formData: BitbucketBindingDefinition;\n  onFieldChange: (fieldId: keyof BitbucketBindingDefinition, value: string) => void;\n}\n\nexport default function BitbucketFormModal(props: BitbucketFormModalProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.pr_decoration.form.name.bitbucket.help')}\n        id=\"name.bitbucket\"\n        maxLength={100}\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmDefinitionFormField\n        help={\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.form.url.bitbucket.help')}\n            id=\"settings.pr_decoration.form.url.bitbucket.help\"\n            values={{ example: 'https://bitbucket-server.your-company.com' }}\n          />\n        }\n        id=\"url.bitbucket\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url}\n      />\n      <AlmDefinitionFormField\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_KEYS, BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModal from './AlmPRDecorationFormModal';\nimport AlmPRDecorationTable from './AlmPRDecorationTable';\nimport BitbucketFormModal from './BitbucketFormModal';\nimport TabHeader from './TabHeader';\n\nexport interface BitbucketTabRendererProps {\n  editedDefinition?: BitbucketBindingDefinition;\n  definitions: BitbucketBindingDefinition[];\n  loading: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: BitbucketBindingDefinition, originalKey: string) => void;\n}\n\nexport default function BitbucketTabRenderer(props: BitbucketTabRendererProps) {\n  const { definitions, editedDefinition, loading } = props;\n  return (\n    <>\n      <TabHeader\n        alm={ALM_KEYS.BITBUCKET}\n        definitionCount={definitions.length}\n        onCreate={props.onCreate}\n      />\n\n      <DeferredSpinner loading={loading}>\n        <AlmPRDecorationTable\n          additionalColumnsHeaders={[\n            translate(`settings.pr_decoration.table.column.bitbucket.url`)\n          ]}\n          alm={ALM_KEYS.BITBUCKET}\n          definitions={definitions.map(({ key, url }) => ({\n            key,\n            additionalColumns: [url]\n          }))}\n          onDelete={props.onDelete}\n          onEdit={props.onEdit}\n        />\n      </DeferredSpinner>\n\n      {editedDefinition && (\n        <AlmPRDecorationFormModal\n          alm={ALM_KEYS.BITBUCKET}\n          bindingDefinition={editedDefinition}\n          onCancel={props.onCancel}\n          onSubmit={props.onSubmit}>\n          {childProps => <BitbucketFormModal {...childProps} />}\n        </AlmPRDecorationFormModal>\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  createBitbucketConfiguration,\n  updateBitbucketConfiguration\n} from '../../../../api/almSettings';\nimport { BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport BitbucketTabRenderer from './BitbucketTabRenderer';\n\ninterface Props {\n  definitions: BitbucketBindingDefinition[];\n  loading: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: BitbucketBindingDefinition;\n  projectCount?: number;\n}\n\nexport default class BitbucketTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: { key: '', url: '', personalAccessToken: '' } });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition });\n  };\n\n  handleSubmit = (config: BitbucketBindingDefinition, originalKey: string) => {\n    const call = originalKey\n      ? updateBitbucketConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : createBitbucketConfiguration(config);\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ editedDefinition: undefined });\n        }\n      })\n      .then(this.props.onUpdateDefinitions);\n  };\n\n  render() {\n    const { definitions, loading } = this.props;\n    const { editedDefinition } = this.state;\n    return (\n      <BitbucketTabRenderer\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        loading={loading}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.pr_decoration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.pr_decoration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.pr_decoration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.delete.message')}\n            id=\"settings.pr_decoration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmDefinitionFormField } from './AlmDefinitionFormField';\n\nexport interface GithubFormModalProps {\n  formData: GithubBindingDefinition;\n  onFieldChange: (fieldId: keyof GithubBindingDefinition, value: string) => void;\n}\n\nexport default function GithubFormModal(props: GithubFormModalProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.pr_decoration.form.name.github.help')}\n        id=\"name.github\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmDefinitionFormField\n        help={\n          <>\n            {translate('settings.pr_decoration.form.url.github.help1')}\n            <br />\n            <em>https://github.company.com/api/v3</em>\n            <br />\n            <br />\n            {translate('settings.pr_decoration.form.url.github.help2')}\n            <br />\n            <em>https://api.github.com/</em>\n          </>\n        }\n        id=\"url.github\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url}\n      />\n      <AlmDefinitionFormField\n        id=\"app_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"appId\"\n        value={formData.appId}\n      />\n      <AlmDefinitionFormField\n        id=\"private_key\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"privateKey\"\n        value={formData.privateKey}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_KEYS, GithubBindingDefinition } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModal from './AlmPRDecorationFormModal';\nimport AlmPRDecorationTable from './AlmPRDecorationTable';\nimport GithubFormModal from './GithubFormModal';\nimport TabHeader from './TabHeader';\n\nexport interface GithubTabRendererProps {\n  editedDefinition?: GithubBindingDefinition;\n  definitions: GithubBindingDefinition[];\n  loading: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: GithubBindingDefinition, originalKey: string) => void;\n}\n\nexport default function GithubTabRenderer(props: GithubTabRendererProps) {\n  const { definitions, editedDefinition, loading } = props;\n  return (\n    <>\n      <TabHeader\n        alm={ALM_KEYS.GITHUB}\n        definitionCount={definitions.length}\n        onCreate={props.onCreate}\n      />\n\n      <DeferredSpinner loading={loading}>\n        <AlmPRDecorationTable\n          additionalColumnsHeaders={[\n            translate(`settings.pr_decoration.table.column.github.url`),\n            translate('settings.pr_decoration.table.column.app_id')\n          ]}\n          alm={ALM_KEYS.GITHUB}\n          definitions={definitions.map(({ key, appId, url }) => ({\n            key,\n            additionalColumns: [url, appId]\n          }))}\n          onDelete={props.onDelete}\n          onEdit={props.onEdit}\n        />\n      </DeferredSpinner>\n\n      {editedDefinition && (\n        <AlmPRDecorationFormModal\n          alm={ALM_KEYS.GITHUB}\n          bindingDefinition={editedDefinition}\n          onCancel={props.onCancel}\n          onSubmit={props.onSubmit}>\n          {childProps => <GithubFormModal {...childProps} />}\n        </AlmPRDecorationFormModal>\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { createGithubConfiguration, updateGithubConfiguration } from '../../../../api/almSettings';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport GithubTabRenderer from './GithubTabRenderer';\n\ninterface Props {\n  definitions: GithubBindingDefinition[];\n  loading: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: GithubBindingDefinition;\n  projectCount?: number;\n}\n\nexport default class GithubTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: { key: '', appId: '', url: '', privateKey: '' } });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition });\n  };\n\n  handleSubmit = (config: GithubBindingDefinition, originalKey: string) => {\n    const call = originalKey\n      ? updateGithubConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : createGithubConfiguration(config);\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ editedDefinition: undefined });\n        }\n      })\n      .then(this.props.onUpdateDefinitions);\n  };\n\n  render() {\n    const { definitions, loading } = this.props;\n    const { editedDefinition } = this.state;\n    return (\n      <GithubTabRenderer\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        loading={loading}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmDefinitionFormField } from './AlmDefinitionFormField';\n\nexport interface GitlabFormModalProps {\n  formData: GitlabBindingDefinition;\n  onFieldChange: (fieldId: keyof GitlabBindingDefinition, value: string) => void;\n}\n\nexport function GitlabFormModal(props: GitlabFormModalProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.pr_decoration.form.name.gitlab.help')}\n        id=\"name.gitlab\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmDefinitionFormField\n        help={translate('settings.pr_decoration.form.personal_access_token.gitlab.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n\nexport default React.memo(GitlabFormModal);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { ALM_KEYS, GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport AlmPRDecorationFormModal from './AlmPRDecorationFormModal';\nimport AlmPRDecorationTable from './AlmPRDecorationTable';\nimport GitlabFormModal from './GitlabFormModal';\nimport TabHeader from './TabHeader';\n\nexport interface GitlabTabRendererProps {\n  editedDefinition?: GitlabBindingDefinition;\n  definitions: GitlabBindingDefinition[];\n  loading: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: GitlabBindingDefinition, originalKey: string) => void;\n}\n\nexport default function GitlabTabRenderer(props: GitlabTabRendererProps) {\n  const { definitions, editedDefinition, loading } = props;\n  return (\n    <>\n      <TabHeader\n        alm={ALM_KEYS.GITLAB}\n        definitionCount={definitions.length}\n        onCreate={props.onCreate}\n      />\n\n      <DeferredSpinner loading={loading}>\n        <AlmPRDecorationTable\n          additionalColumnsHeaders={[]}\n          alm={ALM_KEYS.GITLAB}\n          definitions={definitions.map(({ key }) => ({\n            key,\n            additionalColumns: []\n          }))}\n          onDelete={props.onDelete}\n          onEdit={props.onEdit}\n        />\n      </DeferredSpinner>\n\n      {editedDefinition && (\n        <AlmPRDecorationFormModal\n          alm={ALM_KEYS.GITLAB}\n          bindingDefinition={editedDefinition}\n          onCancel={props.onCancel}\n          onSubmit={props.onSubmit}>\n          {childProps => <GitlabFormModal {...childProps} />}\n        </AlmPRDecorationFormModal>\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { createGitlabConfiguration, updateGitlabConfiguration } from '../../../../api/almSettings';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport GitlabTabRenderer from './GitlabTabRenderer';\n\ninterface Props {\n  definitions: GitlabBindingDefinition[];\n  loading: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: GitlabBindingDefinition;\n  projectCount?: number;\n}\n\nexport default class GitlabTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition });\n  };\n\n  handleSubmit = (config: GitlabBindingDefinition, originalKey: string) => {\n    const call = originalKey\n      ? updateGitlabConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : createGitlabConfiguration(config);\n    return call.then(this.props.onUpdateDefinitions).then(() => {\n      if (this.mounted) {\n        this.setState({ editedDefinition: undefined });\n      }\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: { key: '', personalAccessToken: '' } });\n  };\n\n  render() {\n    const { definitions, loading } = this.props;\n    const { editedDefinition } = this.state;\n    return (\n      <GitlabTabRenderer\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        loading={loading}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmSettingsBindingDefinitions, ALM_KEYS } from '../../../../types/alm-settings';\nimport AzureTab from './AzureTab';\nimport BitbucketTab from './BitbucketTab';\nimport DeleteModal from './DeleteModal';\nimport GithubTab from './GithubTab';\nimport GitlabTab from './GitlabTab';\n\nexport interface PRDecorationTabsProps {\n  currentAlm: ALM_KEYS;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loading: boolean;\n  onCancel: () => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlm: (alm: ALM_KEYS) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nexport const almName = {\n  [ALM_KEYS.AZURE]: 'Azure DevOps Server',\n  [ALM_KEYS.BITBUCKET]: 'Bitbucket Server',\n  [ALM_KEYS.GITHUB]: 'GitHub',\n  [ALM_KEYS.GITLAB]: 'GitLab'\n};\n\nexport default function PRDecorationTabs(props: PRDecorationTabsProps) {\n  const { definitionKeyForDeletion, definitions, currentAlm, loading, projectCount } = props;\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.description')}\n      </div>\n      <BoxedTabs\n        onSelect={props.onSelectAlm}\n        selected={currentAlm}\n        tabs={[\n          {\n            key: ALM_KEYS.GITHUB,\n            label: (\n              <>\n                <img\n                  alt=\"github\"\n                  className=\"spacer-right\"\n                  height={16}\n                  src={`${getBaseUrl()}/images/alm/github.svg`}\n                />\n                {almName[ALM_KEYS.GITHUB]}\n              </>\n            )\n          },\n          {\n            key: ALM_KEYS.BITBUCKET,\n            label: (\n              <>\n                <img\n                  alt=\"bitbucket\"\n                  className=\"spacer-right\"\n                  height={16}\n                  src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n                />\n                {almName[ALM_KEYS.BITBUCKET]}\n              </>\n            )\n          },\n          {\n            key: ALM_KEYS.AZURE,\n            label: (\n              <>\n                <img\n                  alt=\"azure\"\n                  className=\"spacer-right\"\n                  height={16}\n                  src={`${getBaseUrl()}/images/alm/azure.svg`}\n                />\n                {almName[ALM_KEYS.AZURE]}\n              </>\n            )\n          },\n          {\n            key: ALM_KEYS.GITLAB,\n            label: (\n              <>\n                <img\n                  alt=\"gitlab\"\n                  className=\"spacer-right\"\n                  height={16}\n                  src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n                />\n                {almName[ALM_KEYS.GITLAB]}\n              </>\n            )\n          }\n        ]}\n      />\n\n      <div className=\"boxed-group boxed-group-inner\">\n        {currentAlm === ALM_KEYS.AZURE && (\n          <AzureTab\n            definitions={definitions.azure}\n            loading={loading}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n          />\n        )}\n        {currentAlm === ALM_KEYS.BITBUCKET && (\n          <BitbucketTab\n            definitions={definitions.bitbucket}\n            loading={loading}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n          />\n        )}\n        {currentAlm === ALM_KEYS.GITHUB && (\n          <GithubTab\n            definitions={definitions.github}\n            loading={loading}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n          />\n        )}\n        {currentAlm === ALM_KEYS.GITLAB && (\n          <GitlabTab\n            definitions={definitions.gitlab}\n            loading={loading}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n          />\n        )}\n      </div>\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancel}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions\n} from '../../../../api/almSettings';\nimport { AlmSettingsBindingDefinitions, ALM_KEYS } from '../../../../types/alm-settings';\nimport PRDecorationTabs from './PRDecorationTabs';\n\ninterface State {\n  currentAlm: ALM_KEYS;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loading: boolean;\n  projectCount?: number;\n}\n\nexport default class PullRequestDecoration extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    currentAlm: ALM_KEYS.GITHUB,\n    definitions: {\n      [ALM_KEYS.AZURE]: [],\n      [ALM_KEYS.BITBUCKET]: [],\n      [ALM_KEYS.GITHUB]: [],\n      [ALM_KEYS.GITLAB]: []\n    },\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchPullRequestDecorationSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  deleteConfiguration = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    this.setState({ loading: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlm: ALM_KEYS) => {\n    this.setState({ currentAlm });\n  };\n\n  handleCancel = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    return countBindedProjects(definitionKey).then(projectCount => {\n      if (this.mounted) {\n        this.setState({\n          definitionKeyForDeletion: definitionKey,\n          projectCount\n        });\n      }\n    });\n  };\n\n  render() {\n    return (\n      <PRDecorationTabs\n        onCancel={this.handleCancel}\n        onConfirmDelete={this.deleteConfiguration}\n        onDelete={this.handleDelete}\n        onSelectAlm={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        {...this.state}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmSettingsInstance, ALM_KEYS, ProjectAlmBinding } from '../../../../types/alm-settings';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: ProjectAlmBinding;\n  instances: AlmSettingsInstance[];\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBinding, value: string) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  originalData?: ProjectAlmBinding;\n  saving: boolean;\n  success: boolean;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nfunction renderField(props: {\n  help?: boolean;\n  helpParams?: { [key: string]: string | JSX.Element };\n  id: string;\n  onFieldChange: (id: keyof ProjectAlmBinding, value: string) => void;\n  propKey: keyof ProjectAlmBinding;\n  value: string;\n}) {\n  const { help, helpParams, id, propKey, value, onFieldChange } = props;\n  return (\n    <div className=\"form-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.pr_decoration.binding.form', id)}\n        <em className=\"mandatory spacer-right\">*</em>\n        {help && (\n          <HelpTooltip\n            overlay={\n              <FormattedMessage\n                defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n                id={`settings.pr_decoration.binding.form.${id}.help`}\n                values={helpParams}\n              />\n            }\n            placement=\"right\"\n          />\n        )}\n      </label>\n      <input\n        className=\"input-super-large\"\n        id={id}\n        maxLength={256}\n        name={id}\n        onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nfunction isDataSame(\n  { key, repository = '', slug = '' }: ProjectAlmBinding,\n  { key: oKey = '', repository: oRepository = '', slug: oSlug = '' }: ProjectAlmBinding\n) {\n  return key === oKey && repository === oRepository && slug === oSlug;\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData: { key, repository, slug },\n    instances,\n    isValid,\n    loading,\n    originalData,\n    saving,\n    success\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.binding.no_bindings')}\n            id=\"settings.pr_decoration.binding.no_bindings\"\n            values={{\n              link: (\n                <Link to=\"/documentation/analysis/pull-request/#pr-decoration\">\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = key && instances.find(i => i.key === key);\n  const alm = selected && selected.alm;\n\n  const isChanged = !isDataSame({ key, repository, slug }, originalData || { key: '' });\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <div className=\"form-field\">\n          <label htmlFor=\"name\">\n            {translate('settings.pr_decoration.binding.form.name')}\n            <em className=\"mandatory spacer-right\">*</em>\n          </label>\n          <Select\n            autosize={true}\n            className=\"abs-width-400\"\n            clearable={false}\n            id=\"name\"\n            menuContainerStyle={{\n              maxWidth: '210%' /* Allow double the width of the select */,\n              width: 'auto'\n            }}\n            onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n            optionRenderer={optionRenderer}\n            options={instances}\n            searchable={false}\n            value={key}\n            valueKey=\"key\"\n            valueRenderer={optionRenderer}\n          />\n        </div>\n\n        {alm === ALM_KEYS.BITBUCKET && (\n          <>\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/'}\n                    <strong>{'{KEY}'}</strong>\n                    {'/repos/{SLUG}/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.repository',\n              onFieldChange: props.onFieldChange,\n              propKey: 'repository',\n              value: repository || ''\n            })}\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/{KEY}/repos/'}\n                    <strong>{'{SLUG}'}</strong>\n                    {'/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.slug',\n              onFieldChange: props.onFieldChange,\n              propKey: 'slug',\n              value: slug || ''\n            })}\n          </>\n        )}\n\n        {alm === ALM_KEYS.GITHUB &&\n          renderField({\n            help: true,\n            helpParams: { example: 'SonarSource/sonarqube' },\n            id: 'github.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n\n        <div className=\"display-flex-center\">\n          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={saving || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n            </SubmitButton>\n          )}\n          {originalData && (\n            <Button className=\"spacer-right\" onClick={props.onReset}>\n              <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n            </Button>\n          )}\n          {!saving && success && (\n            <span className=\"text-success\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding\n} from '../../../../api/almSettings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport { AlmSettingsInstance, ALM_KEYS, ProjectAlmBinding } from '../../../../types/alm-settings';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ninterface Props {\n  component: T.Component;\n}\n\ninterface State {\n  formData: ProjectAlmBinding;\n  instances: AlmSettingsInstance[];\n  isValid: boolean;\n  loading: boolean;\n  originalData?: ProjectAlmBinding;\n  saving: boolean;\n  success: boolean;\n}\n\nconst FIELDS_BY_ALM: { [almKey in ALM_KEYS]: Array<keyof T.Omit<ProjectAlmBinding, 'key'>> } = {\n  [ALM_KEYS.AZURE]: [],\n  [ALM_KEYS.BITBUCKET]: ['repository', 'slug'],\n  [ALM_KEYS.GITHUB]: ['repository'],\n  [ALM_KEYS.GITLAB]: []\n};\n\nexport default class PRDecorationBinding extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '' },\n    instances: [],\n    isValid: false,\n    loading: true,\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances,\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              originalData\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBinding | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === 404) {\n        return Promise.resolve(undefined);\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ saving: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ saving: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: ''\n            },\n            originalData: undefined,\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: ALM_KEYS,\n    key: string,\n    almSpecificFields?: T.Omit<ProjectAlmBinding, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n\n    switch (alm) {\n      case ALM_KEYS.AZURE:\n        return setProjectAzureBinding({\n          almSetting,\n          project\n        });\n      case ALM_KEYS.BITBUCKET: {\n        if (!almSpecificFields) {\n          return Promise.reject();\n        }\n        const { repository = '', slug = '' } = almSpecificFields;\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug\n        });\n      }\n      case ALM_KEYS.GITHUB: {\n        const repository = almSpecificFields && almSpecificFields.repository;\n        if (!repository) {\n          return Promise.reject();\n        }\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository\n        });\n      }\n\n      case ALM_KEYS.GITLAB:\n        return setProjectGitlabBinding({\n          almSetting,\n          project\n        });\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ saving: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    if (key) {\n      this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n        .then(() => {\n          if (this.mounted) {\n            this.setState({\n              saving: false,\n              success: true\n            });\n          }\n        })\n        .then(this.fetchDefinitions)\n        .catch(this.catchError);\n    }\n  };\n\n  handleFieldChange = (id: keyof ProjectAlmBinding, value: string) => {\n    this.setState(({ formData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        success: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  render() {\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        {...this.state}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n  PULL_REQUEST_DECORATION_CATEGORY\n} from './AdditionalCategoryKeys';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecoration from './pullRequestDecoration/PullRequestDecoration';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_CATEGORY,\n    name: translate('settings.pr_decoration.category'),\n    renderComponent: getPullRequestDecorationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getPullRequestDecorationComponent() {\n  return <PullRequestDecoration />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\n\ninterface Category {\n  key: string;\n  name: string;\n}\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport class CategoriesList extends React.PureComponent<CategoriesListProps> {\n  renderLink(category: Category) {\n    const { component, defaultCategory, selectedCategory } = this.props;\n    const pathname = this.props.component ? '/project/settings' : '/settings';\n    const query = {\n      category: category.key !== defaultCategory ? category.key.toLowerCase() : undefined,\n      id: component && component.key\n    };\n    return (\n      <IndexLink\n        className={classNames({\n          active: category.key.toLowerCase() === selectedCategory.toLowerCase()\n        })}\n        title={category.name}\n        to={{ pathname, query }}>\n        {category.name}\n      </IndexLink>\n    );\n  }\n\n  render() {\n    const { branchesEnabled } = this.props;\n\n    const categoriesWithName = this.props.categories\n      .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n      .map(key => ({\n        key,\n        name: getCategoryName(key)\n      }))\n      .concat(\n        ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n          .filter(c =>\n            this.props.component\n              ? // Project settings\n                c.availableForProject\n              : // Global settings\n                c.availableGlobally\n          )\n          .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n      );\n    const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n    return (\n      <ul className=\"side-tabs-menu\">\n        {sortedCategories.map(category => (\n          <li key={category.key}>{this.renderLink(category)}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\ninterface Props {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: Props) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{title}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport '../side-tabs.css';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div className=\"page page-limited\" id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet title={translate('settings.page')} />\n\n        <PageHeader component={this.props.component} />\n\n        <div className=\"side-tabs-layout settings-layout\">\n          <div className=\"side-tabs-side\">\n            <AllCategoriesList\n              component={this.props.component}\n              defaultCategory={this.props.defaultCategory}\n              selectedCategory={selectedCategory}\n            />\n          </div>\n          <div className=\"side-tabs-main\">\n            {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n              foundAdditionalCategory.renderComponent({\n                component: this.props.component,\n                selectedCategory: originalCategory\n              })\n            ) : (\n              <CategoryDefinitionsList\n                category={selectedCategory}\n                component={this.props.component}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n"],"sourceRoot":""}